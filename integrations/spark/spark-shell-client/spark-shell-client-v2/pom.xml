<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.thinkbiganalytics.datalake</groupId>
    <artifactId>kylo-spark-shell-client</artifactId>
    <version>0.8.1-SNAPSHOT</version>
  </parent>

  <artifactId>kylo-spark-shell-client-v2</artifactId>

  <properties>
    <plugin.license.parentRelative>../../../../</plugin.license.parentRelative>

    <scala.version>2.11.0</scala.version>
    <scala.binary.version>2.11</scala.binary.version>
    <spark.version>2.0.0</spark.version>
    <spark.binary.version>2.0</spark.binary.version>
    <spark.avro.version>3.2.0</spark.avro.version>
  </properties>

  <dependencies>
    <!-- Kylo dependencies -->
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-commons-hive</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-commons-spark-${spark.binary.version}</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-commons-scala-${scala.binary.version}</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-spark-shell-client-app</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-schema-discovery-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-schema-discovery-model2</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-commons-spark-shell-v2</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.datalake</groupId>
      <artifactId>kylo-spark-job-profiler-core</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- Scala dependencies -->
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-compiler</artifactId>
      <version>${scala.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Spark dependencies -->
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_${scala.binary.version}</artifactId>
      <version>${spark.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Testing dependencies -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_${scala.binary.version}</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compiles Scala code -->
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <configuration>
          <checkMultipleScalaVersions>false</checkMultipleScalaVersions>
          <scalaVersion>${scala.version}</scalaVersion>
        </configuration>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Builds jar with dependencies -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <configuration>
          <createDependencyReducedPom>false</createDependencyReducedPom>
          <artifactSet>
            <excludes>
              <exclude>log4j:*</exclude>
              <exclude>org.slf4j:*</exclude>
            </excludes>
          </artifactSet>
          <transformers>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.factories</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.handlers</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.providers</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.schemas</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
              <resource>META-INF/spring.tooling</resource>
            </transformer>
            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
          </transformers>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
