{
  "version": 3,
  "file": "covalent-core-message.umd.js",
  "sources": [
    "ng://@covalent/core/message/out/message.component.ts"
  ],
  "sourcesContent": [
    "import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { TdCollapseAnimation, TdFadeInOutAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  template: `<div tdMessageContainer></div>\n<ng-template>\n  <div class=\"td-message-wrapper\">\n    <mat-icon class=\"td-message-icon\">{{icon}}</mat-icon>\n    <div class=\"td-message-labels\">\n      <div *ngIf=\"label\" class=\"td-message-label\">{{label}}</div>\n      <div *ngIf=\"sublabel\" class=\"td-message-sublabel\">{{sublabel}}</div>\n    </div>\n    <ng-content select=\"[td-message-actions]\"></ng-content>\n  </div>\n</ng-template>`,\n  styles: [`:host{\n  display:block; }\n  :host .td-message-wrapper{\n    padding:8px 16px;\n    min-height:52px;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box;\n    display:-webkit-box;\n    display:-ms-flexbox;\n    display:flex;\n    -webkit-box-orient:horizontal;\n    -webkit-box-direction:normal;\n        -ms-flex-direction:row;\n            flex-direction:row;\n    -webkit-box-align:center;\n        -ms-flex-align:center;\n            align-items:center;\n    -ms-flex-line-pack:center;\n        align-content:center;\n    max-width:100%;\n    -webkit-box-pack:start;\n        -ms-flex-pack:start;\n            justify-content:start; }\n    :host .td-message-wrapper .td-message-labels{\n      -webkit-box-flex:1;\n          -ms-flex:1;\n              flex:1; }\n\n.td-message-icon{\n  margin-right:16px; }\n  ::ng-deep [dir='rtl'] .td-message-icon{\n    margin-left:16px;\n    margin-right:0; }\n`],\n  animations: [\n    TdCollapseAnimation({ duration: 100 }),\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): boolean {\n    return !this._opened;\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n"
  ],
  "names": [
    "MatIconModule",
    "CommonModule",
    "NgModule",
    "ViewContainerRef",
    "Directive"
  ],
  "mappings": "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"
}
