{"version":3,"file":"covalent-core-message.umd.min.js","sources":["../../out/message.component.ts"],"sourcesContent":["import { Component, Directive, Input, Renderer2, ElementRef, AfterViewInit, ViewContainerRef, TemplateRef, ViewChild,\n         HostBinding, HostListener, ChangeDetectorRef } from '@angular/core';\n\nimport { TdCollapseAnimation, TdFadeInOutAnimation } from '@covalent/core/common';\n\n@Directive({\n  selector: '[tdMessageContainer]',\n})\nexport class TdMessageContainerDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  selector: 'td-message',\n  template: `<div tdMessageContainer></div>\n<ng-template>\n  <div class=\"td-message-wrapper\">\n    <mat-icon class=\"td-message-icon\">{{icon}}</mat-icon>\n    <div class=\"td-message-labels\">\n      <div *ngIf=\"label\" class=\"td-message-label\">{{label}}</div>\n      <div *ngIf=\"sublabel\" class=\"td-message-sublabel\">{{sublabel}}</div>\n    </div>\n    <ng-content select=\"[td-message-actions]\"></ng-content>\n  </div>\n</ng-template>`,\n  styles: [`:host{\n  display:block; }\n  :host .td-message-wrapper{\n    padding:8px 16px;\n    min-height:52px;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box;\n    display:-webkit-box;\n    display:-ms-flexbox;\n    display:flex;\n    -webkit-box-orient:horizontal;\n    -webkit-box-direction:normal;\n        -ms-flex-direction:row;\n            flex-direction:row;\n    -webkit-box-align:center;\n        -ms-flex-align:center;\n            align-items:center;\n    -ms-flex-line-pack:center;\n        align-content:center;\n    max-width:100%;\n    -webkit-box-pack:start;\n        -ms-flex-pack:start;\n            justify-content:start; }\n    :host .td-message-wrapper .td-message-labels{\n      -webkit-box-flex:1;\n          -ms-flex:1;\n              flex:1; }\n\n.td-message-icon{\n  margin-right:16px; }\n  ::ng-deep [dir='rtl'] .td-message-icon{\n    margin-left:16px;\n    margin-right:0; }\n`],\n  animations: [\n    TdCollapseAnimation({ duration: 100 }),\n  ],\n})\nexport class TdMessageComponent implements AfterViewInit {\n\n  private _color: string;\n  private _opened: boolean = true;\n  private _hidden: boolean = false;\n  private _animating: boolean = false;\n  private _initialized: boolean = false;\n\n  @ViewChild(TdMessageContainerDirective) _childElement: TdMessageContainerDirective;\n  @ViewChild(TemplateRef) _template: TemplateRef<any>;\n\n  /**\n   * Binding host to tdCollapse animation\n   */\n  @HostBinding('@tdCollapse')\n  get collapsedAnimation(): boolean {\n    return !this._opened;\n  }\n\n  /**\n   * Binding host to display style when hidden\n   */\n  @HostBinding('style.display')\n  get hidden(): string {\n    return this._hidden ? 'none' : undefined;\n  }\n\n  /**\n   * label: string\n   *\n   * Sets the label of the message.\n   */\n  @Input('label') label: string;\n\n  /**\n   * sublabel?: string\n   *\n   * Sets the sublabel of the message.\n   */\n  @Input('sublabel') sublabel: string;\n\n  /**\n   * icon?: string\n   *\n   * The icon to be displayed before the title.\n   * Defaults to `info_outline` icon\n   */\n  @Input('icon') icon: string = 'info_outline';\n\n  /**\n   * color?: primary | accent | warn\n   *\n   * Sets the color of the message.\n   * Can also use any material color: purple | light-blue, etc.\n   */\n  @Input('color')\n  set color(color: string) {\n    this._renderer.removeClass(this._elementRef.nativeElement, 'mat-' + this._color);\n    this._renderer.removeClass(this._elementRef.nativeElement, 'bgc-' + this._color + '-100');\n    this._renderer.removeClass(this._elementRef.nativeElement, 'tc-' + this._color + '-700');\n    if (color === 'primary' || color === 'accent' || color === 'warn') {\n      this._renderer.addClass(this._elementRef.nativeElement, 'mat-' + color);\n    } else {\n      this._renderer.addClass(this._elementRef.nativeElement, 'bgc-' + color + '-100');\n      this._renderer.addClass(this._elementRef.nativeElement, 'tc-' + color + '-700');\n    }\n    this._color = color;\n    this._changeDetectorRef.markForCheck();\n  }\n  get color(): string {\n    return this._color;\n  }\n\n  /**\n   * opened?: boolean\n   *\n   * Shows or hiddes the message depending on its value.\n   * Defaults to 'true'.\n   */\n  @Input('opened')\n  set opened(opened: boolean) {\n    if (this._initialized) {\n      if (opened) {\n        this.open();\n      } else {\n        this.close();\n      }\n    } else {\n      this._opened = opened;\n    }\n  }\n  get opened(): boolean {\n    return this._opened;\n  }\n\n  constructor(private _renderer: Renderer2,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _elementRef: ElementRef) {\n    this._renderer.addClass(this._elementRef.nativeElement, 'td-message');\n  }\n\n  /**\n   * Detach element when close animation is finished to set animating state to false\n   * hidden state to true and detach element from DOM\n   */\n  @HostListener('@tdCollapse.done')\n  animationDoneListener(): void {\n    if (!this._opened) {\n      this._hidden = true;\n      this._detach();\n    }\n    this._animating = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Initializes the component and attaches the content.\n   */\n  ngAfterViewInit(): void {\n    Promise.resolve(undefined).then(() => {\n      if (this._opened) {\n        this._attach();\n      }\n      this._initialized = true;\n    });\n  }\n\n  /**\n   * Renders the message on screen\n   * Validates if there is an animation currently and if its already opened\n   */\n  open(): void {\n    if (!this._opened && !this._animating) {\n      this._opened = true;\n      this._attach();\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Removes the message content from screen.\n   * Validates if there is an animation currently and if its already closed\n   */\n  close(): void {\n    if (this._opened && !this._animating) {\n      this._opened = false;\n      this._startAnimationState();\n    }\n  }\n\n  /**\n   * Toggles between open and close depending on state.\n   */\n  toggle(): void {\n    if (this._opened) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Method to set the state before starting an animation\n   */\n  private _startAnimationState(): void {\n    this._animating = true;\n    this._hidden = false;\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to attach template to DOM\n   */\n  private _attach(): void {\n    this._childElement.viewContainer.createEmbeddedView(this._template);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Method to detach template from DOM\n   */\n  private _detach(): void {\n    this._childElement.viewContainer.clear();\n    this._changeDetectorRef.markForCheck();\n  }\n}\n"],"names":["this","viewContainer","type","Directive","args","selector","ViewContainerRef","TdMessageComponent","_renderer","_changeDetectorRef","_elementRef","_opened","_hidden","_animating","_initialized","icon","addClass","nativeElement","get","Object","defineProperty","prototype","_color","removeClass","color","enumerable","configurable","close","opened","animationDoneListener","_detach","ngAfterViewInit","_this","Promise","resolve","undefined","then","open","_startAnimationState","_childElement","clear","markForCheck","TD_MESSAGE","CovalentMessageModule","decorators","NgModule","imports","CommonModule","MatIconModule","declarations","exports"],"mappings":"2iBASA,mBAAAA,KAAAC,cAAoDA,qBAJpDC,KAACC,EAAAA,UAADC,OACEC,SAAU,+DANZH,KAA4EI,EAAAA,oBA+D5E,IAAAC,EAAA,WA+FE,SAAFA,EAAAC,EAAAC,EAAAC,GAAsBV,KAAtBQ,UAAsBA,EACAR,KAAtBS,mBAAsBA,EACAT,KAAtBU,YAAsBA,EA9FtBV,KAAAW,SAA6B,EAC7BX,KAAAY,SAA6B,EAC7BZ,KAAAa,YAAgC,EAChCb,KAAAc,cAAkC,EAyClCd,KAAAe,KAAgC,eAmD5Bf,KAAKQ,UAAUQ,SAAShB,KAAKU,YAAYO,cAAe,6EAlFxDC,IAAJ,gEAOAC,OAAAC,eAAAb,EAAAc,UAAA,+FAiCAF,OAAAC,eAAAb,EAAAc,UAAA,SAIIH,IAAJ,WACM,OAANlB,KAAAsB,sGAQAtB,KAAAQ,UAAAe,YAAAvB,KAAAU,YAAAO,cAAA,OAAAjB,KAAAsB,OAAA,QACAtB,KAAAQ,UAAuBe,YAAvBvB,KAAAU,YAAAO,cAAA,MAAAjB,KAAAsB,OAAA,QACA,YAAAE,GAAA,WAAAA,GAAA,SAAAA,0QAUIC,YAAJ,EACAC,cAAgB,IAEhBP,OAAAC,eAAAb,EAAAc,UAAA,UAGAH,IAAA,WAAA,OAAAlB,KAAAW,yDAoBAX,KAAqB2B,QAIrB3B,KAAAW,QAA2BiB,mCAW3BrB,EAAAc,UAAAQ,sBAAA,WACA7B,KAAAW,UACAX,KAAAY,SAAA,EACAZ,KAAA8B,sEASAvB,EAAAc,UAAAU,gBAAA,WACA,IAAMC,EAANhC,KACAiC,QAAAC,QAAAC,WAAAC,KAAA,WACAJ,EAAArB,0CAWAJ,EAAAc,UAAAgB,KAAA,wGAWA9B,EAAAc,UAAAM,MAAA,kJAeQ3B,KAARqC,QAOU9B,EAAVc,UAAAiB,qBAAA,WACItC,KAAKa,YAAa,EAClBb,KAAKY,SAAT,oNA9NAZ,KAAAuC,cAAAtC,cAAAuC,QACAxC,KAAAS,mBAAAgC,kBAsCA,kiEADA,IAAAC,QA9DAC,EAAA,kBACA,aADA,GAuEAA,EAAAC,aACA1C,KAAA2C,EAAAA,SAAAzC,OAKA0C,SAQAC,EAAAA,aAUAC,EAAAA,eAeAC,cAQAP,GAkDAQ"}