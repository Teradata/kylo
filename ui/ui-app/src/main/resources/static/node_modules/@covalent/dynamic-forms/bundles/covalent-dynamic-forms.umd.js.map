{
  "version": 3,
  "file": "covalent-dynamic-forms.umd.js",
  "sources": [
    "ng://@covalent/dynamic-forms/out/dynamic-forms.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-element.component.ts",
    "ng://@covalent/dynamic-forms/out/services/dynamic-forms.service.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-datepicker/dynamic-datepicker.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-select/dynamic-select.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-slider/dynamic-slider.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-checkbox/dynamic-checkbox.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-textarea/dynamic-textarea.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-file-input/dynamic-file-input.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/dynamic-input/dynamic-input.component.ts",
    "ng://@covalent/dynamic-forms/out/dynamic-elements/abstract-control-value-accesor.ts",
    "ng://@covalent/dynamic-forms/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef, ContentChildren,\n         TemplateRef, QueryList, AfterContentInit } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicFormsService, ITdDynamicElementConfig } from './services/dynamic-forms.service';\nimport { TdDynamicFormsErrorTemplate } from './dynamic-element.component';\n\nimport { timer } from 'rxjs/observable/timer';\nimport { toPromise } from 'rxjs/operator/toPromise';\n\n@Component({\n  selector: 'td-dynamic-forms',\n  template: `<form [formGroup]=\"dynamicForm\" novalidate>\n  <div class=\"td-dynamic-form-wrapper\">\n    <ng-template let-element ngFor [ngForOf]=\"elements\">\n      <div class=\"td-dynamic-element-wrapper\"\n          [style.max-width.%]=\"element.flex ? element.flex : 100\"\n          [style.flex]=\"'1 1 ' + (element.flex ? element.flex : 100) + '%'\"\n          [style.-ms-flex]=\"'1 1 ' + (element.flex ? element.flex : 100) + '%'\"\n          [style.-webkit-box-flex]=\"1\">\n        <td-dynamic-element\n          #dynamicElement\n          *ngIf=\"dynamicForm.controls[element.name]\"\n          [formControlName]=\"element.name\"\n          [dynamicControl]=\"dynamicForm.controls[element.name]\"\n          [id]=\"element.name\"\n          [label]=\"element.label || element.name\"\n          [type]=\"element.type\"\n          [required]=\"element.required\"\n          [min]=\"element.min\"\n          [max]=\"element.max\"\n          [minLength]=\"element.minLength\"\n          [maxLength]=\"element.maxLength\"\n          [selections]=\"element.selections\">\n        </td-dynamic-element>\n        <div class=\"tc-red-600\"\n             [style.font-size.%]=\"'70'\"\n             [style.position]=\"'absolute'\"\n             [style.bottom.px]=\"'10'\"\n              *ngIf=\"getErrorTemplateRef(element.name) && dynamicForm.controls[element.name]?.errors\">\n          <ng-template\n            [ngTemplateOutlet]=\"getErrorTemplateRef(element.name)\"\n            [ngTemplateOutletContext]=\"{control: dynamicForm.controls[element.name], errors: dynamicForm.controls[element.name]?.errors}\">\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  </div>\n  <ng-content></ng-content>\n</form>\n`,\n  styles: [`.td-dynamic-form-wrapper{\n  -ms-flex-wrap:wrap;\n      flex-wrap:wrap;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  -webkit-box-align:center;\n      -ms-flex-align:center;\n          align-items:center;\n  -ms-flex-line-pack:center;\n      align-content:center;\n  max-width:100%;\n  -webkit-box-pack:start;\n      -ms-flex-pack:start;\n          justify-content:start; }\n  .td-dynamic-form-wrapper .td-dynamic-element-wrapper{\n    max-height:100%;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box;\n    position:relative;\n    padding:4px 4px 8px; }\n`],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TdDynamicFormsComponent implements AfterContentInit {\n\n  private _renderedElements: ITdDynamicElementConfig[] = [];\n  private _elements: ITdDynamicElementConfig[];\n  private _templateMap: Map<string, TemplateRef<any>> = new Map<string, TemplateRef<any>>();\n  @ContentChildren(TdDynamicFormsErrorTemplate) _errorTemplates: QueryList<TdDynamicFormsErrorTemplate>;\n  dynamicForm: FormGroup;\n \n  /**\n   * elements: ITdDynamicElementConfig[]\n   * JS Object that will render the elements depending on its config.\n   * [name] property is required.\n   */\n  @Input('elements')\n  set elements(elements: ITdDynamicElementConfig[]) {\n    if (elements) {\n      this._elements = elements;\n    } else {\n      this._elements = [];\n    }\n    this._rerenderElements();\n  }\n  get elements(): ITdDynamicElementConfig[] {\n    return this._renderedElements;\n  }\n\n  /**\n   * Getter property for dynamic [FormGroup].\n   */\n  get form(): FormGroup {\n    return this.dynamicForm;\n  }\n\n  /**\n   * Getter property for [valid] of dynamic [FormGroup].\n   */\n  get valid(): boolean {\n    if (this.dynamicForm) {\n      return this.dynamicForm.valid;\n    }\n    return false;\n  }\n\n  /**\n   * Getter property for [value] of dynamic [FormGroup].\n   */\n  get value(): any {\n    if (this.dynamicForm) {\n      return this.dynamicForm.value;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [errors] of dynamic [FormGroup].\n   */\n  get errors(): { [name: string]: any } {\n    if (this.dynamicForm) {\n      let errors: {[name: string]: any} = {};\n      for (let name in this.dynamicForm.controls) {\n        errors[name] = this.dynamicForm.controls[name].errors;\n      }\n      return errors;\n    }\n    return {};\n  }\n\n  /**\n   * Getter property for [controls] of dynamic [FormGroup].\n   */\n  get controls(): {[key: string]: AbstractControl} {\n    if (this.dynamicForm) {\n      return this.dynamicForm.controls;\n    }\n    return {};\n  }\n\n  constructor(private _formBuilder: FormBuilder,\n              private _dynamicFormsService: TdDynamicFormsService,\n              private _changeDetectorRef: ChangeDetectorRef) {\n    this.dynamicForm = this._formBuilder.group({});\n  }\n\n  ngAfterContentInit(): void {\n    this._updateErrorTemplates();\n  }\n\n  /**\n   * Refreshes the form and rerenders all validator/element modifications.\n   */\n  refresh(): void {\n    this._rerenderElements();\n    this._updateErrorTemplates();\n  }\n\n  /**\n   * Getter method for error template references\n   */\n  getErrorTemplateRef(name: string): TemplateRef<any> {\n    return this._templateMap.get(name);\n  }\n\n  /**\n   * Loads error templates and sets them in a map for faster access.\n   */\n  private _updateErrorTemplates(): void {\n    this._templateMap = new Map<string, TemplateRef<any>>();\n    for (let i: number = 0; i < this._errorTemplates.toArray().length; i++) {\n      this._templateMap.set(\n        this._errorTemplates.toArray()[i].tdDynamicFormsError,\n        this._errorTemplates.toArray()[i].templateRef,\n      );\n    }\n  }\n\n  private _rerenderElements(): void {\n    this._clearRemovedElements();\n    this._renderedElements = [];\n    let duplicates: string[] = [];\n    this._elements.forEach((elem: ITdDynamicElementConfig) => {\n      this._dynamicFormsService.validateDynamicElementName(elem.name);\n      if (duplicates.indexOf(elem.name) > -1) {\n        throw new Error(`Dynamic element name: \"${elem.name}\" is duplicated`);\n      }\n      duplicates.push(elem.name);\n      if (!this.dynamicForm.get(elem.name)) {\n        this.dynamicForm.addControl(elem.name, this._dynamicFormsService.createFormControl(elem));\n      } else {\n        this.dynamicForm.get(elem.name).setValidators(this._dynamicFormsService.createValidators(elem));\n      }\n      // copy objects so they are only changes when calling this method\n      this._renderedElements.push(Object.assign({}, elem));\n    });\n    // call a change detection since the whole form might change\n    this._changeDetectorRef.detectChanges();\n    toPromise.call(timer()).then(() => {\n      // call a markForCheck so elements are rendered correctly in OnPush\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  private _clearRemovedElements(): void {\n    for (let i: number = 0; i < this._renderedElements.length; i++) {\n      for (let j: number = 0; j < this._elements.length; j++) {\n        // check if the name of the element is still there removed\n        if (this._renderedElements[i].name === this._elements[j].name) {\n          delete this._renderedElements[i];\n          break;\n        }\n      }\n    }\n    // remove elements that were removed from the array\n    this._renderedElements.forEach((elem: ITdDynamicElementConfig) => {\n      this.dynamicForm.removeControl(elem.name);\n    });\n  }\n}\n",
    "import { Component, Directive, Input, HostBinding, OnInit, SimpleChanges, OnChanges, TemplateRef } from '@angular/core';\nimport { ViewChild, ViewContainerRef } from '@angular/core';\nimport { ComponentFactoryResolver, ComponentRef, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { TemplatePortalDirective } from '@angular/cdk/portal';\n\nimport { TdDynamicElement, TdDynamicType, TdDynamicFormsService } from './services/dynamic-forms.service';\nimport { AbstractControlValueAccessor } from './dynamic-elements/abstract-control-value-accesor';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport const ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicElementComponent),\n  multi: true,\n};\n\n@Directive({selector: '[tdDynamicFormsError]ng-template'})\nexport class TdDynamicFormsErrorTemplate extends TemplatePortalDirective {\n\n  @Input() tdDynamicFormsError: string;\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n@Directive({\n  selector: '[tdDynamicContainer]',\n})\nexport class TdDynamicElementDirective {\n  constructor(public viewContainer: ViewContainerRef) { }\n}\n\n@Component({\n  providers: [ TdDynamicFormsService, ELEMENT_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-element',\n  template: '<div tdDynamicContainer></div>',\n})\nexport class TdDynamicElementComponent extends AbstractControlValueAccessor\n                                       implements ControlValueAccessor, OnInit, OnChanges {\n\n  private _instance: any;\n\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n      this.onModelChange(v);\n    }\n  }\n  get value(): any {\n    return this._value;\n  }\n\n  /**\n   * Sets form control of the element.\n   */\n  @Input() dynamicControl: FormControl;\n\n  /**\n   * Sets label to be displayed.\n   */\n  @Input() label: string = '';\n\n  /**\n   * Sets type or element of element to be rendered.\n   * Throws error if does not exist or no supported.\n   */\n  @Input() type: TdDynamicElement | TdDynamicType = undefined;\n\n  /**\n   * Sets required validation checkup (if supported by element).\n   */\n  @Input() required: boolean = undefined;\n\n  /**\n   * Sets min validation checkup (if supported by element).\n   */\n  @Input() min: number = undefined;\n\n  /**\n   * Sets max validation checkup (if supported by element).\n   */\n  @Input() max: number = undefined;\n\n  /**\n   * Sets minLength validation checkup (if supported by element).\n   */\n  @Input() minLength: number = undefined;\n\n  /**\n   * Sets maxLength validation checkup (if supported by element).\n   */\n  @Input() maxLength: number = undefined;\n\n  /**\n   * Sets selections for array elements (if supported by element).\n   */\n  @Input() selections: any[] = undefined;\n\n  @ViewChild(TdDynamicElementDirective) childElement: TdDynamicElementDirective;\n\n  @HostBinding('attr.max')\n  get maxAttr(): any {\n    return this.max;\n  }\n\n  @HostBinding('attr.min')\n  get minAttr(): any {\n    return this.min;\n  }\n\n  constructor(private _componentFactoryResolver: ComponentFactoryResolver,\n              private _dynamicFormsService: TdDynamicFormsService) {\n    super();\n  }\n\n  ngOnInit(): void {\n    let ref: ComponentRef<any> = this._componentFactoryResolver.\n      resolveComponentFactory(this._dynamicFormsService.getDynamicElement(this.type))\n      .create(this.childElement.viewContainer.injector);\n    this.childElement.viewContainer.insert(ref.hostView);\n    this._instance = ref.instance;\n    this._instance.control = this.dynamicControl;\n    this._instance.label = this.label;\n    this._instance.type = this.type;\n    this._instance.value = this.value;\n    this._instance.required = this.required;\n    this._instance.min = this.min;\n    this._instance.max = this.max;\n    this._instance.minLength = this.minLength;\n    this._instance.maxLength = this.maxLength;\n    this._instance.selections = this.selections;\n    this._instance.registerOnChange((value: any) => {\n      this.value = value;\n    });\n    this.registerOnModelChange((value: any) => {\n      // fix to check if value is NaN (type=number)\n      if (!Number.isNaN(value)) {\n        this._instance.value = value;\n      }\n\n    });\n  }\n\n  /**\n   * Reassign any inputs that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this._instance) {\n      for (let prop in changes) {\n        this._instance[prop] = changes[prop].currentValue;\n      }\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  registerOnModelChange(fn: any): void {\n    this.onModelChange = fn;\n  }\n\n  onModelChange = (_: any) => noop;\n}\n",
    "import { Injectable, Provider, SkipSelf, Optional } from '@angular/core';\nimport { Validators, ValidatorFn, FormControl, AbstractControl } from '@angular/forms';\n\nimport { TdDynamicInputComponent } from '../dynamic-elements/dynamic-input/dynamic-input.component';\nimport { TdDynamicFileInputComponent } from '../dynamic-elements/dynamic-file-input/dynamic-file-input.component';\nimport { TdDynamicTextareaComponent } from '../dynamic-elements/dynamic-textarea/dynamic-textarea.component';\nimport { TdDynamicSlideToggleComponent } from '../dynamic-elements/dynamic-slide-toggle/dynamic-slide-toggle.component';\nimport { TdDynamicCheckboxComponent } from '../dynamic-elements/dynamic-checkbox/dynamic-checkbox.component';\nimport { TdDynamicSliderComponent } from '../dynamic-elements/dynamic-slider/dynamic-slider.component';\nimport { TdDynamicSelectComponent } from '../dynamic-elements/dynamic-select/dynamic-select.component';\nimport { TdDynamicDatepickerComponent } from '../dynamic-elements/dynamic-datepicker/dynamic-datepicker.component';\n\nexport enum TdDynamicType {\n  Text = 'text',\n  Boolean = 'boolean',\n  Number = 'number',\n  Array = 'array',\n  Date = 'date',\n}\n\nexport enum TdDynamicElement {\n  Input = 'input',\n  Datepicker = 'datepicker',\n  Password = 'password',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  SlideToggle = 'slide-toggle',\n  Checkbox = 'checkbox',\n  Select = 'select',\n  FileInput = 'file-input',\n}\n\nexport interface ITdDynamicElementValidator {\n  validator: ValidatorFn;\n}\n\nexport interface ITdDynamicElementConfig {\n  label?: string;\n  name: string;\n  type: TdDynamicType | TdDynamicElement;\n  required?: boolean;\n  min?: any;\n  max?: any;\n  minLength?: any;\n  maxLength?: any;\n  selections?: string[] | { value: any, label: string }[];\n  default?: any;\n  flex?: number;\n  validators?: ITdDynamicElementValidator[];\n}\n\nexport const DYNAMIC_ELEMENT_NAME_REGEX: RegExp = /^[a-zA-Z]+[a-zA-Z0-9-_]*$/;\n\n@Injectable()\nexport class TdDynamicFormsService {\n\n  /**\n   * Method to validate if the [name] is a proper element name.\n   * Throws error if name is not valid.\n   */\n  validateDynamicElementName(name: string): void {\n    if (!DYNAMIC_ELEMENT_NAME_REGEX.test(name)) {\n      throw new Error(`Dynamic element name: \"${name}\" is not valid.`);\n    }\n  }\n\n  /**\n   * Gets component to be rendered depending on [TdDynamicElement | TdDynamicType]\n   * Throws error if it does not exists or not supported.\n   */\n  getDynamicElement(element: TdDynamicElement | TdDynamicType): any {\n    switch (element) {\n      case TdDynamicType.Text:\n      case TdDynamicType.Number:\n      case TdDynamicElement.Input:\n      case TdDynamicElement.Password:\n        return TdDynamicInputComponent;\n      case TdDynamicElement.Textarea:\n        return TdDynamicTextareaComponent;\n      case TdDynamicType.Boolean:\n      case TdDynamicElement.SlideToggle:\n        return TdDynamicSlideToggleComponent;\n      case TdDynamicElement.Checkbox:\n        return TdDynamicCheckboxComponent;\n      case TdDynamicElement.Slider:\n        return TdDynamicSliderComponent;\n      case TdDynamicType.Array:\n      case TdDynamicElement.Select:\n        return TdDynamicSelectComponent;\n      case TdDynamicElement.FileInput:\n        return TdDynamicFileInputComponent;\n      case TdDynamicElement.Datepicker:\n      case TdDynamicType.Date:\n        return TdDynamicDatepickerComponent;\n      default:\n        throw new Error(`Error: type ${element} does not exist or not supported.`);\n    }\n  }\n\n  /**\n   * Creates form control for element depending [ITdDynamicElementConfig] properties.\n   */\n  createFormControl(config: ITdDynamicElementConfig): FormControl {\n    let validator: ValidatorFn = this.createValidators(config);\n    return new FormControl(config.default, validator);\n  }\n\n  /**\n   * Creates form validationdepending [ITdDynamicElementConfig] properties.\n   */\n  createValidators(config: ITdDynamicElementConfig): ValidatorFn {\n    let validator: ValidatorFn;\n    if (config.required) {\n      validator = Validators.required;\n    }\n    if (config.max || config.max === 0) {\n      validator = Validators.compose([validator, Validators.max(parseFloat(config.max))]);\n    }\n    if (config.min || config.min === 0) {\n      validator = Validators.compose([validator, Validators.min(parseFloat(config.min))]);\n    }\n    if (config.maxLength || config.maxLength === 0) {\n      validator = Validators.compose([validator, Validators.maxLength(parseFloat(config.maxLength))]);\n    }\n    if (config.minLength || config.minLength === 0) {\n      validator = Validators.compose([validator, Validators.minLength(parseFloat(config.minLength))]);\n    }\n    // Add provided custom validators to the validator function\n    if (config.validators) {\n      config.validators.forEach((validatorConfig: ITdDynamicElementValidator) => {\n        validator = Validators.compose([validator, validatorConfig.validator]);\n      });\n    }\n    return validator;\n  }\n}\n\nexport function DYNAMIC_FORMS_PROVIDER_FACTORY(\n  parent: TdDynamicFormsService): TdDynamicFormsService {\n  return parent || new TdDynamicFormsService();\n}\n\nexport const DYNAMIC_FORMS_PROVIDER: Provider = {\n  // If there is already a service available, use that. Otherwise, provide a new one.\n  provide: TdDynamicFormsService,\n  deps: [[new Optional(), new SkipSelf(), TdDynamicFormsService]],\n  useFactory: DYNAMIC_FORMS_PROVIDER_FACTORY,\n};\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicDatepickerComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [DATEPICKER_INPUT_CONTROL_VALUE_ACCESSOR],\n  selector: 'td-dynamic-datepicker',\n  styles: [`.td-dynamic-datepicker-wrapper{\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n  .td-dynamic-datepicker-wrapper .td-dynamic-datepicker-field{\n    -webkit-box-flex:1;\n        -ms-flex:1;\n            flex:1;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box; }\n`],\n  template: `<div class=\"td-dynamic-datepicker-wrapper\">\n  <mat-form-field class=\"td-dynamic-datepicker-field\">\n    <input #elementInput\n            matInput\n            [matDatepicker]=\"dynamicDatePicker\"\n            [(ngModel)]=\"value\"\n            [formControl]=\"control\"\n            [placeholder]=\"label\"\n            [required]=\"required\"\n            [min]=\"min\"\n            [max]=\"max\"/>\n    <mat-datepicker-toggle matSuffix [for]=\"dynamicDatePicker\"></mat-datepicker-toggle>\n    <mat-datepicker #dynamicDatePicker></mat-datepicker>\n  </mat-form-field>\n</div>\n`,\n})\nexport class TdDynamicDatepickerComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  type: string = undefined;\n\n  required: boolean = undefined;\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicSelectComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ SELECT_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-select',\n  styles: [`.td-dynamic-select-wrapper{\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n  .td-dynamic-select-wrapper .td-dynamic-select-field{\n    -webkit-box-flex:1;\n        -ms-flex:1;\n            flex:1;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box; }\n`],\n  template: `<div class=\"td-dynamic-select-wrapper\">\n  <mat-form-field class=\"td-dynamic-select-field\">\n    <mat-select [(ngModel)]=\"value\"\n              [placeholder]=\"label\"\n              [required]=\"required\">\n      <mat-option *ngFor=\"let selection of selections\" [value]=\"selection.value || selection\">{{selection.label || selection}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n`,\n})\nexport class TdDynamicSelectComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = undefined;\n\n  selections: any[] = undefined;\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const SLIDER_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicSliderComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ SLIDER_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-slider',\n  styles: [`.td-dynamic-slider-field{\n  position:relative;\n  margin-top:8px;\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n  .td-dynamic-slider-field .td-dynamic-slider{\n    -webkit-box-flex:1;\n        -ms-flex:1;\n            flex:1; }\n`],\n  template: `<div class=\"td-dynamic-slider-wrapper\">\n  <div class=\"mat-form-field-placeholder-wrapper mat-form-field-can-float mat-form-field-should-float\"\n       [class.mat-focused]=\"slider._isActive\">\n    <label class=\"mat-form-field-placeholder mat-float mat-form-field-float td-slider-label\"> {{label}} <span *ngIf=\"required\" class=\"mat-placeholder-required\">*</span></label>\n  </div>\n  <div class=\"td-dynamic-slider-field\">\n    <mat-slider #slider\n               class=\"td-dynamic-slider\"\n               [(ngModel)]=\"value\"\n                [min]=\"min\"\n                [max]=\"max\"\n                thumbLabel\n                tickInterval=\"auto\"\n                [required]=\"required\">\n    </mat-slider>\n  </div>  \n</div>`,\n})\nexport class TdDynamicSliderComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = undefined;\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicCheckboxComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ CHECKBOX_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-checkbox',\n  styles: [``],\n  template: `<div class=\"td-dynamic-checkbox-wrapper\">\n  <mat-checkbox [(ngModel)]=\"value\"\n                [required]=\"required\">\n    {{label}}\n  </mat-checkbox>\n</div>`,\n})\nexport class TdDynamicCheckboxComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = false;\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicSlideToggleComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ SLIDE_TOGGLE_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-slide-toggle',\n  styles: [``],\n  template: `<div class=\"td-dynamic-slide-toggle-wrapper\">\n  <mat-slide-toggle [(ngModel)]=\"value\"\n                   [required]=\"required\">\n    {{label}}\n  </mat-slide-toggle>\n</div>`,\n})\nexport class TdDynamicSlideToggleComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = false;\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicTextareaComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ TEXTAREA_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-textarea',\n  styles: [`.td-dynamic-textarea-wrapper{\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n  .td-dynamic-textarea-wrapper .td-dynamic-textarea-field{\n    -webkit-box-flex:1;\n        -ms-flex:1;\n            flex:1;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box; }\n`],\n  template: `<div class=\"td-dynamic-textarea-wrapper\">\n  <mat-form-field class=\"td-dynamic-textarea-field\">\n    <textarea #elementInput\n            matInput\n            [(ngModel)]=\"value\"\n            [placeholder]=\"label\"\n            [required]=\"required\"\n            rows=\"4\">\n    </textarea>\n  </mat-form-field>\n</div>`,\n})\nexport class TdDynamicTextareaComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  required: boolean = undefined;\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicFileInputComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ UPLOAD_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-file-input',\n  styles: [`.td-dynamic-file-input-wrapper{\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n  .td-dynamic-file-input-wrapper .td-dynamic-file-input-field{\n    -webkit-box-flex:1;\n        -ms-flex:1;\n            flex:1;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box; }\n\n.td-file-input{\n  margin-left:10px; }\n`],\n  template: `<div class=\"td-dynamic-file-input-wrapper\">\n  <mat-form-field tdFileDrop\n                  class=\"td-dynamic-file-input-field\"\n                  floatPlaceholder=\"never\"\n                  (fileDrop)=\"value = $event\"\n                  (click)=\"fileInput.inputElement.click()\"\n                  (keyup.enter)=\"fileInput.inputElement.click()\"\n                  (keyup.delete)=\"fileInput.clear()\"\n                  (keyup.backspace)=\"fileInput.clear()\">\n    <input matInput\n          [value]=\"value?.name\"\n          [placeholder]=\"label\"\n          readonly/>\n  </mat-form-field>\n  <button mat-icon-button *ngIf=\"value\" (click)=\"fileInput.clear()\" (keyup.enter)=\"fileInput.clear()\">\n    <mat-icon>cancel</mat-icon>\n  </button>\n  <td-file-input class=\"td-file-input\" #fileInput [(ngModel)]=\"value\">\n    <mat-icon>folder</mat-icon>\n    <span>{{ label }}</span>\n  </td-file-input>\n</div>`,\n})\nexport class TdDynamicFileInputComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  required: boolean = undefined;\n\n  label: string = '';\n\n}\n",
    "import { Component, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl } from '@angular/forms';\n\nimport { AbstractControlValueAccessor } from '../abstract-control-value-accesor';\n\nexport const INPUT_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => TdDynamicInputComponent),\n  multi: true,\n};\n\n@Component({\n  providers: [ INPUT_INPUT_CONTROL_VALUE_ACCESSOR ],\n  selector: 'td-dynamic-input',\n  styles: [`.td-dynamic-input-wrapper{\n  -webkit-box-orient:horizontal;\n  -webkit-box-direction:normal;\n      -ms-flex-direction:row;\n          flex-direction:row;\n  display:-webkit-box;\n  display:-ms-flexbox;\n  display:flex;\n  -webkit-box-sizing:border-box;\n          box-sizing:border-box; }\n  .td-dynamic-input-wrapper .td-dynamic-input-field{\n    -webkit-box-flex:1;\n        -ms-flex:1;\n            flex:1;\n    -webkit-box-sizing:border-box;\n            box-sizing:border-box; }\n`],\n  template: `<div class=\"td-dynamic-input-wrapper\">\n  <mat-form-field class=\"td-dynamic-input-field\">\n    <input #elementInput\n            matInput\n            [(ngModel)]=\"value\"\n            [formControl]=\"control\"\n            [placeholder]=\"label\"\n            [type]=\"type\"\n            [required]=\"required\"\n            [attr.min]=\"min\"\n            [attr.max]=\"max\"\n            [attr.minLength]=\"minLength\"\n            [attr.maxLength]=\"maxLength\"/>\n  </mat-form-field>\n</div>\n`,\n})\nexport class TdDynamicInputComponent extends AbstractControlValueAccessor implements ControlValueAccessor {\n\n  control: FormControl;\n\n  label: string = '';\n\n  type: string = undefined;\n\n  required: boolean = undefined;\n\n  min: number = undefined;\n\n  max: number = undefined;\n\n  minLength: number = undefined;\n\n  maxLength: number = undefined;\n\n}\n",
    "import { ControlValueAccessor } from '@angular/forms';\n\nconst noop: any = () => {\n  // empty method\n};\n\nexport abstract class AbstractControlValueAccessor implements ControlValueAccessor {\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  protected _value: any = undefined;\n\n  // get/set accessor (needed for ControlValueAccessor)\n  get value(): any { return this._value; }\n  set value(v: any) {\n    if (v !== this._value) {\n      this._value = v;\n      this.onChange(v);\n    }\n  }\n\n  /**\n   * Implemented as part of ControlValueAccessor.\n   */\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  onChange = (_: any) => noop;\n  onTouched = () => noop;\n}\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n"
  ],
  "names": [
    "CovalentFileModule",
    "CovalentCommonModule",
    "MatDatepickerModule",
    "MatCheckboxModule",
    "MatSelectModule",
    "MatInputModule",
    "NgModule",
    "ChangeDetectorRef",
    "FormBuilder",
    "toPromise",
    "timer",
    "HostBinding",
    "Input",
    "ComponentFactoryResolver",
    "Component",
    "tslib_1.__extends",
    "ViewContainerRef",
    "Directive",
    "Optional",
    "SkipSelf",
    "Injectable",
    "Validators",
    "tslib_1.__spread",
    "forwardRef",
    "NG_VALUE_ACCESSOR"
  ],
  "mappings": "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"
}
