{"version":3,"file":"material-tooltip.umd.js","sources":["../../src/lib/tooltip/tooltip-module.ts","../../src/lib/tooltip/tooltip.ts","../../src/lib/tooltip/tooltip-animations.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule, ARIA_DESCRIBER_PROVIDER} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\n  MatTooltip,\n  TooltipComponent,\n} from './tooltip';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    MatCommonModule,\n    PlatformModule,\n    A11yModule,\n  ],\n  exports: [MatTooltip, TooltipComponent, MatCommonModule],\n  declarations: [MatTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n  providers: [\n    MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER,\n    ARIA_DESCRIBER_PROVIDER,\n    {\n      provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\n      useValue: {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500\n      }\n    }\n  ],\n})\nexport class MatTooltipModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {AnimationEvent} from '@angular/animations';\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE} from '@angular/cdk/keycodes';\nimport {\n  ConnectionPositionPair,\n  HorizontalConnectionPos,\n  OriginConnectionPosition,\n  Overlay,\n  OverlayConfig,\n  OverlayConnectionPosition,\n  OverlayRef,\n  RepositionScrollStrategy,\n  ScrollStrategy,\n  VerticalConnectionPos,\n} from '@angular/cdk/overlay';\nimport {Platform} from '@angular/cdk/platform';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {take} from 'rxjs/operators/take';\nimport {merge} from 'rxjs/observable/merge';\nimport {ScrollDispatcher} from '@angular/cdk/scrolling';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Directive,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {matTooltipAnimations} from './tooltip-animations';\n\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** CSS class that will be attached to the overlay panel. */\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\n\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\nexport function getMatTooltipInvalidPositionError(position: string) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n    () => RepositionScrollStrategy {\n  return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n\n/** @docs-private */\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\n\n/** Default `matTooltip` options that can be overridden. */\nexport interface MatTooltipDefaultOptions {\n  showDelay: number;\n  hideDelay: number;\n  touchendHideDelay: number;\n}\n\n/** Injection token to be used to override the default options for `matTooltip`. */\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options');\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[matTooltip]',\n  exportAs: 'matTooltip',\n  host: {\n    '(longpress)': 'show()',\n    '(keydown)': '_handleKeydown($event)',\n    '(touchend)': '_handleTouchend()',\n  },\n})\nexport class MatTooltip implements OnDestroy {\n  _overlayRef: OverlayRef | null;\n  _tooltipInstance: TooltipComponent | null;\n\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('matTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('matTooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** @deprecated */\n  @Input('tooltip-position')\n  get _positionDeprecated(): TooltipPosition { return this._position; }\n  set _positionDeprecated(value: TooltipPosition) { this._position = value; }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('matTooltipShowDelay') showDelay =\n      this._defaultOptions ? this._defaultOptions.showDelay : 0;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('matTooltipHideDelay') hideDelay =\n      this._defaultOptions ? this._defaultOptions.hideDelay : 0;\n\n  private _message = '';\n\n  /** The message to be displayed in the tooltip */\n  @Input('matTooltip')\n  get message() { return this._message; }\n  set message(value: string) {\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\n\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\n    this._message = value != null ? `${value}`.trim() : '';\n\n    if (!this._message && this._isTooltipVisible()) {\n      this.hide(0);\n    } else {\n      this._updateTooltipMessage();\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\n    }\n  }\n\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n  @Input('matTooltipClass')\n  get tooltipClass() { return this._tooltipClass; }\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\n    this._tooltipClass = value;\n    if (this._tooltipInstance) {\n      this._setTooltipClass(this._tooltipClass);\n    }\n  }\n\n  private _manualListeners = new Map<string, Function>();\n\n  constructor(\n    private _overlay: Overlay,\n    private _elementRef: ElementRef,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _platform: Platform,\n    private _ariaDescriber: AriaDescriber,\n    private _focusMonitor: FocusMonitor,\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\n    @Optional() private _dir: Directionality,\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\n      private _defaultOptions?: MatTooltipDefaultOptions) {\n\n    // TODO(crisbeto): make the `_defaultOptions` a required param next time we do breaking changes.\n\n    const element: HTMLElement = _elementRef.nativeElement;\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      this._manualListeners.set('mouseenter', () => this.show());\n      this._manualListeners.set('mouseleave', () => this.hide());\n\n      this._manualListeners\n        .forEach((listener, event) => _elementRef.nativeElement.addEventListener(event, listener));\n    } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\n      // will add some inline styles by default, including `user-select: none`. This is\n      // problematic on iOS, because it will prevent users from typing in inputs. If\n      // we're on iOS and the tooltip is attached on an input or textarea, we clear\n      // the `user-select` to avoid these issues.\n      element.style.webkitUserSelect = element.style.userSelect = '';\n    }\n\n    _focusMonitor.monitor(element).subscribe(origin => {\n      // Note that the focus monitor runs outside the Angular zone.\n      if (!origin) {\n        _ngZone.run(() => this.hide(0));\n      } else if (origin !== 'program') {\n        _ngZone.run(() => this.show());\n      }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n\n    // Clean up the event listeners set in the constructor\n    if (!this._platform.IOS) {\n      this._manualListeners.forEach((listener, event) => {\n        this._elementRef.nativeElement.removeEventListener(event, listener);\n      });\n\n      this._manualListeners.clear();\n    }\n\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this.message) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipClass(this._tooltipClass);\n    this._updateTooltipMessage();\n    this._tooltipInstance!.show(this._position, delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Handles the keydown events on the host element. */\n  _handleKeydown(e: KeyboardEvent) {\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\n      e.stopPropagation();\n      this.hide(0);\n    }\n  }\n\n  /** Handles the touchend events on the host element. */\n  _handleTouchend() {\n    this.hide(this._defaultOptions ? this._defaultOptions.touchendHideDelay : 1500);\n  }\n\n  /** Create the tooltip to display */\n  private _createTooltip(): void {\n    const overlayRef = this._createOverlay();\n    const portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n\n    this._tooltipInstance = overlayRef.attach(portal).instance;\n\n    // Dispose of the tooltip when the overlay is detached.\n    merge(this._tooltipInstance!.afterHidden(), overlayRef.detachments()).subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): OverlayRef {\n    const origin = this._getOrigin();\n    const overlay = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    const strategy = this._overlay\n      .position()\n      .connectedTo(this._elementRef, origin.main, overlay.main)\n      .withFallbackPosition(origin.fallback, overlay.fallback);\n\n    const scrollableAncestors = this._scrollDispatcher\n      .getAncestorScrollContainers(this._elementRef);\n\n    strategy.withScrollableContainers(scrollableAncestors);\n\n    strategy.onPositionChange.subscribe(change => {\n      if (this._tooltipInstance) {\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n          // After position changes occur and the overlay is clipped by\n          // a parent scrollable then close the tooltip.\n          this._ngZone.run(() => this.hide(0));\n        } else {\n          // Otherwise recalculate the origin based on the new position.\n          this._tooltipInstance._setTransformOrigin(change.connectionPair);\n        }\n      }\n    });\n\n    const config = new OverlayConfig({\n      direction: this._dir ? this._dir.value : 'ltr',\n      positionStrategy: strategy,\n      panelClass: TOOLTIP_PANEL_CLASS,\n      scrollStrategy: this._scrollStrategy()\n    });\n\n    this._overlayRef = this._overlay.create(config);\n\n    return this._overlayRef;\n  }\n\n  /** Disposes the current tooltip and the overlay it is attached to */\n  private _disposeTooltip(): void {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._tooltipInstance = null;\n  }\n\n  /**\n   * Returns the origin position and a fallback position based on the user's position preference.\n   * The fallback position is the inverse of the origin (e.g. 'below' -> 'above').\n   */\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\n    const isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    let position: OriginConnectionPosition;\n\n    if (this.position == 'above' || this.position == 'below') {\n      position = {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    } else if (this.position == 'left' ||\n               this.position == 'before' && isDirectionLtr ||\n               this.position == 'after' && !isDirectionLtr) {\n      position = {originX: 'start', originY: 'center'};\n    } else if (this.position == 'right' ||\n               this.position == 'after' && isDirectionLtr ||\n               this.position == 'before' && !isDirectionLtr) {\n      position = {originX: 'end', originY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(this.position);\n    }\n\n    const {x, y} = this._invertPosition(position.originX, position.originY);\n\n    return {\n      main: position,\n      fallback: {originX: x, originY: y}\n    };\n  }\n\n  /** Returns the overlay position and a fallback position based on the user's preference */\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    let position: OverlayConnectionPosition;\n\n    if (this.position == 'above') {\n      position = {overlayX: 'center', overlayY: 'bottom'};\n    } else if (this.position == 'below') {\n      position = {overlayX: 'center', overlayY: 'top'};\n    } else if (this.position == 'left' ||\n               this.position == 'before' && isLtr ||\n               this.position == 'after' && !isLtr) {\n      position = {overlayX: 'end', overlayY: 'center'};\n    } else if (this.position == 'right' ||\n               this.position == 'after' && isLtr ||\n               this.position == 'before' && !isLtr) {\n      position = {overlayX: 'start', overlayY: 'center'};\n    } else {\n      throw getMatTooltipInvalidPositionError(this.position);\n    }\n\n    const {x, y} = this._invertPosition(position.overlayX, position.overlayY);\n\n    return {\n      main: position,\n      fallback: {overlayX: x, overlayY: y}\n    };\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _updateTooltipMessage() {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    if (this._tooltipInstance) {\n      this._tooltipInstance.message = this.message;\n      this._tooltipInstance._markForCheck();\n\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(take(1)).subscribe(() => {\n        if (this._tooltipInstance) {\n          this._overlayRef!.updatePosition();\n        }\n      });\n    }\n  }\n\n  /** Updates the tooltip class */\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.tooltipClass = tooltipClass;\n      this._tooltipInstance._markForCheck();\n    }\n  }\n\n  /** Inverts an overlay position. */\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\n    if (this.position === 'above' || this.position === 'below') {\n      if (y === 'top') {\n        y = 'bottom';\n      } else if (y === 'bottom') {\n        y = 'top';\n      }\n    } else {\n      if (x === 'end') {\n        x = 'start';\n      } else if (x === 'start') {\n        x = 'end';\n      }\n    }\n\n    return {x, y};\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [matTooltipAnimations.tooltipState],\n  host: {\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()',\n    'aria-hidden': 'true',\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  private _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n\n  /** Current position of the tooltip. */\n  private _position: TooltipPosition;\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private _onHide: Subject<any> = new Subject();\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param position Position of the tooltip.\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n    this._position = position;\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /** Whether the tooltip is being displayed. */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the position of the tooltip overlay. */\n  _setTransformOrigin(overlayPosition: ConnectionPositionPair) {\n    const axis = (this._position === 'above' || this._position === 'below') ? 'Y' : 'X';\n    const position = axis == 'X' ? overlayPosition.overlayX : overlayPosition.overlayY;\n\n    if (position === 'top' || position === 'bottom') {\n      this._transformOrigin = position;\n    } else if (position === 'start') {\n      this._transformOrigin = 'left';\n    } else if (position === 'end') {\n      this._transformOrigin = 'right';\n    } else {\n      throw getMatTooltipInvalidPositionError(this._position);\n    }\n  }\n\n  _animationStart() {\n    this._closeOnInteraction = false;\n  }\n\n  _animationDone(event: AnimationEvent): void {\n    const toState = event.toState as TooltipVisibility;\n\n    if (toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n\n    if (toState === 'visible' || toState === 'hidden') {\n      // Note: as of Angular 4.3, the animations module seems to fire the `start` callback before\n      // the end if animations are disabled. Make this call async to ensure that it still fires\n      // at the appropriate time.\n      Promise.resolve().then(() => this._closeOnInteraction = true);\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Animations used by MatTooltip. */\nexport const matTooltipAnimations: {\n  readonly tooltipState: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: trigger('state', [\n    state('initial, void, hidden', style({transform: 'scale(0)'})),\n    state('visible', style({transform: 'scale(1)'})),\n    transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n    transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n  ])\n};\n"],"names":["ARIA_DESCRIBER_PROVIDER","MatCommonModule","A11yModule","PlatformModule","OverlayModule","CommonModule","NgModule","ChangeDetectionStrategy","ViewEncapsulation","Component","Subject","Input","Optional","Inject","Directionality","FocusMonitor","AriaDescriber","Platform","NgZone","ViewContainerRef","ScrollDispatcher","ElementRef","Overlay","Directive","take","OverlayConfig","merge","ComponentPortal","ESCAPE","coerceBooleanProperty","InjectionToken","transition","animate","state","style","trigger"],"mappings":"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"}