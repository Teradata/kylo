{"version":3,"file":"flex-layout-core.umd.js","sources":["../../src/lib/core/media-monitor/media-monitor-provider.ts","../../src/lib/core/match-media/server-match-media.ts","../../src/lib/core/match-media/mock/mock-match-media.ts","../../src/lib/core/base/base-adapter.ts","../../src/lib/core/base/base.ts","../../src/lib/core/responsive-activation/responsive-activation.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/core/tokens/flex-styles-token.ts","../../src/lib/core/media-queries-module.ts","../../src/lib/core/module.ts","../../src/lib/core/stylesheet-map/stylesheet-map-provider.ts","../../src/lib/core/style-utils/style-utils.ts","../../src/lib/core/tokens/vendor-prefixes-token.ts","../../src/lib/core/tokens/server-token.ts","../../src/lib/core/stylesheet-map/stylesheet-map.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/core/match-media/match-media-provider.ts","../../src/lib/core/breakpoints/break-points-provider.ts","../../src/lib/core/tokens/breakpoint-token.ts","../../src/lib/core/breakpoints/breakpoint-tools.ts","../../src/lib/core/breakpoints/data/orientation-break-points.ts","../../src/lib/core/breakpoints/data/break-points.ts","../../src/lib/core/observable-media/observable-media-provider.ts","../../src/lib/core/observable-media/observable-media.ts","../../src/lib/core/breakpoints/break-point-registry-provider.ts","../../src/lib/core/media-monitor/media-monitor.ts","../../src/lib/core/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/core/match-media/match-media.ts","../../src/lib/core/media-change.ts","../../src/lib/core/breakpoints/break-point-registry.ts","../../src/lib/core/breakpoints/break-points-token.ts","../../src/lib/core/browser-provider.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from '../match-media/match-media';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from '../media-change';\n\n/**\n * Special server-only class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class ServerMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): ServerMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): ServerMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the server environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Special server-only implementation of MatchMedia that uses the above\n * ServerMediaQueryList as its internal representation\n *\n * Also contains methods to activate and deactivate breakpoints\n */\n@Injectable()\nexport class ServerMatchMedia extends MatchMedia {\n  protected _registry: Map<string, ServerMediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    super(_zone, _platformId, _document);\n    this._registry = new Map<string, ServerMediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /** Activate the specified breakpoint if we're on the server, no-op otherwise */\n  activateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.activate();\n    }\n  }\n\n  /** Deactivate the specified breakpoint if we're on the server, no-op otherwise */\n  deactivateBreakpoint(bp: BreakPoint) {\n    const lookupBreakpoint = this._registry.get(bp.mediaQuery);\n    if (lookupBreakpoint) {\n      lookupBreakpoint.deactivate();\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): ServerMediaQueryList {\n    return new ServerMediaQueryList(query);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media';\nimport {BreakPointRegistry} from '../../breakpoints/break-point-registry';\n\n/**\n * MockMatchMedia mocks calls to the Window API matchMedia with a build of a simulated\n * MockMediaQueryListener. Methods are available to simulate an activation of a mediaQuery\n * range and to clearAll mediaQuery listeners.\n */\n@Injectable()\nexport class MockMatchMedia extends MatchMedia {\n\n  /** Special flag used to test BreakPoint registrations with MatchMedia */\n  autoRegisterQueries = true;\n\n  /**\n   * Allow fallback to overlapping mediaQueries to determine\n   * activatedInput(s).\n   */\n  useOverlaps = false;\n\n  constructor(_zone: NgZone,\n              @Inject(PLATFORM_ID) _platformId: Object,\n              @Inject(DOCUMENT) _document: any,\n              private _breakpoints: BreakPointRegistry) {\n    super(_zone, _platformId, _document);\n    this._actives = [];\n  }\n\n  /** Easy method to clear all listeners for all mediaQueries */\n  clearAll() {\n    this._registry.forEach((mql: MockMediaQueryList, _) => {\n      mql.destroy();\n    });\n    this._registry.clear();\n    this.useOverlaps = false;\n  }\n\n  /** Feature to support manual, simulated activation of a mediaQuery. */\n  activate(mediaQuery: string, useOverlaps = false): boolean {\n    useOverlaps = useOverlaps || this.useOverlaps;\n    mediaQuery = this._validateQuery(mediaQuery);\n\n    if (useOverlaps || !this.isActive(mediaQuery)) {\n      this._deactivateAll();\n\n      this._registerMediaQuery(mediaQuery);\n      this._activateWithOverlaps(mediaQuery, useOverlaps);\n    }\n\n    return this.hasActivated;\n  }\n\n  /** Converts an optional mediaQuery alias to a specific, valid mediaQuery */\n  _validateQuery(queryOrAlias) {\n    let bp = this._breakpoints.findByAlias(queryOrAlias);\n    if (bp) {\n      queryOrAlias = bp.mediaQuery;\n    }\n    return queryOrAlias;\n  }\n\n  /**\n   * Manually activate any overlapping mediaQueries to simulate\n   * similar functionality in the window.matchMedia()\n   */\n  private _activateWithOverlaps(mediaQuery: string, useOverlaps: boolean): boolean {\n    if (useOverlaps) {\n      let bp = this._breakpoints.findByQuery(mediaQuery);\n      let alias = bp ? bp.alias : 'unknown';\n\n      // Simulate activation of overlapping lt-<XXX> ranges\n      switch (alias) {\n        case 'lg'   :\n          this._activateByAlias('lt-xl');\n          break;\n        case 'md'   :\n          this._activateByAlias('lt-xl, lt-lg');\n          break;\n        case 'sm'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md');\n          break;\n        case 'xs'   :\n          this._activateByAlias('lt-xl, lt-lg, lt-md, lt-sm');\n          break;\n      }\n\n      // Simulate activate of overlapping gt-<xxxx> mediaQuery ranges\n      switch (alias) {\n        case 'xl'   :\n          this._activateByAlias('gt-lg, gt-md, gt-sm, gt-xs');\n          break;\n        case 'lg'   :\n          this._activateByAlias('gt-md, gt-sm, gt-xs');\n          break;\n        case 'md'   :\n          this._activateByAlias('gt-sm, gt-xs');\n          break;\n        case 'sm'   :\n          this._activateByAlias('gt-xs');\n          break;\n      }\n    }\n    // Activate last since the responsiveActivation is watching *this* mediaQuery\n    return this._activateByQuery(mediaQuery);\n  }\n\n  /**\n   *\n   */\n  private _activateByAlias(aliases) {\n    let activate = (alias) => {\n      let bp = this._breakpoints.findByAlias(alias);\n      this._activateByQuery(bp ? bp.mediaQuery : alias);\n    };\n    aliases.split(',').forEach(alias => activate(alias.trim()));\n  }\n\n  /**\n   *\n   */\n  private _activateByQuery(mediaQuery) {\n    let mql = <MockMediaQueryList> this._registry.get(mediaQuery);\n    let alreadyAdded = this._actives.reduce((found, it) => {\n      return found || (mql && (it.media === mql.media));\n    }, false);\n\n    if (mql && !alreadyAdded) {\n      this._actives.push(mql.activate());\n    }\n    return this.hasActivated;\n  }\n\n  /** Deactivate all current Mock MQLs */\n  private _deactivateAll() {\n    if (this._actives.length) {\n      // Deactivate all current MQLs and reset the buffer\n      for (const it of this._actives) {\n        it.deactivate();\n      }\n      this._actives = [];\n    }\n    return this;\n  }\n\n  /** Insure the mediaQuery is registered with MatchMedia */\n  private _registerMediaQuery(mediaQuery) {\n    if (!this._registry.has(mediaQuery) && this.autoRegisterQueries) {\n      this.registerQuery(mediaQuery);\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    return new MockMediaQueryList(query);\n  }\n\n  protected get hasActivated() {\n    return (this._actives.length > 0);\n  }\n\n  private _actives: MockMediaQueryList[] = [];\n}\n\n/**\n * Special internal class to simulate a MediaQueryList and\n * - supports manual activation to simulate mediaQuery matching\n * - manages listeners\n */\nexport class MockMediaQueryList implements MediaQueryList {\n  private _isActive = false;\n  private _listeners: MediaQueryListListener[] = [];\n\n  get matches(): boolean {\n    return this._isActive;\n  }\n\n  get media(): string {\n    return this._mediaQuery;\n  }\n\n  constructor(private _mediaQuery: string) {}\n\n  /**\n   * Destroy the current list by deactivating the\n   * listeners and clearing the internal list\n   */\n  destroy() {\n    this.deactivate();\n    this._listeners = [];\n  }\n\n  /** Notify all listeners that 'matches === TRUE' */\n  activate(): MockMediaQueryList {\n    if (!this._isActive) {\n      this._isActive = true;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Notify all listeners that 'matches === false' */\n  deactivate(): MockMediaQueryList {\n    if (this._isActive) {\n      this._isActive = false;\n      this._listeners.forEach((callback) => {\n        callback(this);\n      });\n    }\n    return this;\n  }\n\n  /** Add a listener to our internal list to activate later */\n  addListener(listener: MediaQueryListListener) {\n    if (this._listeners.indexOf(listener) === -1) {\n      this._listeners.push(listener);\n    }\n    if (this._isActive) {\n      listener(this);\n    }\n  }\n\n  /** Don't need to remove listeners in the testing environment */\n  removeListener(_: MediaQueryListListener) {\n  }\n}\n\n/**\n * Pre-configured provider for MockMatchMedia\n */\nexport const MockMatchMediaProvider = {  // tslint:disable-line:variable-name\n  provide: MatchMedia,\n  useClass: MockMatchMedia\n};\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from '../responsive-activation/responsive-activation';\nimport {MediaQuerySubscriber} from '../media-change';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {StyleUtils} from '../style-utils/style-utils';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n    super(_mediaMonitor, _elementRef, _styler);\n  }\n\n  /**\n    * Does this directive have 1 or more responsive keys defined\n    * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n    */\n  hasResponsiveAPI() {\n   return super.hasResponsiveAPI(this._baseKey);\n  }\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error(\n        `Invalid class value '${key}' provided. Did you want to cache the raw value?`\n      );\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    if (key) {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source ? source.join(' ') : '';\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes: string[] = [];\n    if (source) {\n      for (let prop in source) {\n        if (!!source[prop]) {\n          classes.push(prop);\n        }\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n  SimpleChange,\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  StyleUtils,\n} from '../style-utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive-activation/responsive-activation';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {MediaQuerySubscriber} from '../media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _styler: StyleUtils) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  protected get nativeElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    delete this._mediaMonitor;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows us to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source: HTMLElement = this.nativeElement): string {\n    const query = 'display';\n    return this._styler.lookupStyle(source, query);\n  }\n\n  /**\n   * Quick accessor to raw attribute value on the target DOM element\n   */\n  protected _getAttributeValue(attribute: string,\n                               source: HTMLElement = this.nativeElement): string {\n    return this._styler.lookupAttributeValue(source, attribute);\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: HTMLElement, addIfMissing = false): string {\n    let value = 'row';\n    let hasInlineValue = '';\n\n    if (target) {\n      [value, hasInlineValue] = this._styler.getFlowDirection(target);\n\n      if (!hasInlineValue && addIfMissing) {\n        const style = buildLayoutCSS(value);\n        const elements = [target];\n        this._styler.applyStyleToElements(style, elements);\n      }\n    }\n\n    return value.trim() || 'row';\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 element: HTMLElement = this.nativeElement) {\n    this._styler.applyStyleToElement(element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[]) {\n    this._styler.applyStyleToElements(style, elements);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      if (!!key) {\n        this._inputMap[key] = source;\n      }\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this.nativeElement.children;\n    const buffer: any[] = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Does this directive have 1 or more responsive keys defined\n   * Note: we exclude the 'baseKey' key (which is NOT considered responsive)\n   */\n  hasResponsiveAPI(baseKey: string) {\n    const totalKeys = Object.keys(this._inputMap).length;\n    const baseValue = this._inputMap[baseKey];\n    return (totalKeys - (!!baseValue ? 1 : 0)) > 0;\n  }\n\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operators/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../media-change';\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {MediaMonitor} from '../media-monitor/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n  private _registryMap: BreakPointX[];\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._registryMap = this._buildRegistryMap();\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Get a readonly sorted list of the breakpoints corresponding to the directive properties\n   * defined in the HTML markup: the sorting is done from largest to smallest. The order is\n   * important when several media queries are 'registered' and from which, the browser uses the\n   * first matching media query.\n   */\n  get registryFromLargest(): BreakPointX[] {\n    return [...this._registryMap].reverse();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions: Subscription[] = [];\n\n    this._registryMap.forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n          this.mediaMonitor\n              .observe(bp.alias)\n              .pipe(map(buildChanges))\n              .subscribe(change => {\n                this._onMonitorEvents(change);\n              })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? '' : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      this.mediaMonitor.activeOverlaps.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport const INLINE = 'inline';\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap, isInline] = validateValue(value);\n  return buildCSS(direction, wrap, isInline);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap, inline] = value.split(' ');\n\n  // First value must be the `flex-direction`\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n\n  if (wrap === INLINE) {\n    wrap = (inline !== INLINE) ? inline : '';\n    inline = INLINE;\n  }\n\n  return [direction, validateWrapValue(wrap), !!inline];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, ] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null, inline = false) {\n  return {\n    'display': inline ? 'inline-flex' : 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const ADD_FLEX_STYLES = new InjectionToken<boolean>(\n  'Flex Layout token, should flex stylings be applied to parents automatically');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\nimport {CoreModule} from './module';\n\n\n/**\n * @deprecated use Core Module instead\n * @deletion-target 5.0.0-beta.15\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n@NgModule({\n  imports: [CoreModule],\n  exports: [CoreModule],\n})\nexport class MediaQueriesModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor/media-monitor';\nimport {BREAKPOINT_REGISTRY_PROVIDER} from './breakpoints/break-point-registry-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media/observable-media-provider';\nimport {BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {MATCH_MEDIA_PROVIDER} from './match-media/match-media-provider';\nimport {BROWSER_PROVIDER} from './browser-provider';\nimport {StyleUtils} from './style-utils/style-utils';\nimport {STYLESHEET_MAP_PROVIDER} from './stylesheet-map/stylesheet-map-provider';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    BREAKPOINTS_PROVIDER,         // Supports developer overrides of list of known breakpoints\n    BREAKPOINT_REGISTRY_PROVIDER, // Registry of known/used BreakPoint(s)\n    MATCH_MEDIA_PROVIDER,         // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,                 // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER,    // easy subscription injectable `media$` matchMedia observable]\n    STYLESHEET_MAP_PROVIDER,\n    StyleUtils,\n    BROWSER_PROVIDER,\n  ]\n})\nexport class CoreModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {StylesheetMap} from './stylesheet-map';\n\n/**\n * Ensure a single global service provider\n */\nexport function STYLESHEET_MAP_PROVIDER_FACTORY(parentSheet: StylesheetMap) {\n  return parentSheet || new StylesheetMap();\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const STYLESHEET_MAP_PROVIDER = {\n  provide: StylesheetMap,\n  deps: [\n    [new Optional(), new SkipSelf(), StylesheetMap],\n  ],\n  useFactory: STYLESHEET_MAP_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\n\nimport {applyCssPrefixes} from '../../utils/auto-prefixer';\nimport {StylesheetMap} from '../stylesheet-map/stylesheet-map';\nimport {SERVER_TOKEN} from '../tokens/server-token';\nimport {DISABLE_VENDOR_PREFIXES} from '../tokens/vendor-prefixes-token';\n\n@Injectable()\nexport class StyleUtils {\n\n  constructor(@Optional() private _serverStylesheet: StylesheetMap,\n              @Optional() @Inject(SERVER_TOKEN) private _serverModuleLoaded: boolean,\n              @Inject(PLATFORM_ID) private _platformId,\n              @Optional() @Inject(DISABLE_VENDOR_PREFIXES) private noVendorPrefixes: boolean) {}\n\n  /**\n   * Applies styles given via string pair or object map to the directive element\n   */\n  applyStyleToElement(element: HTMLElement, style: StyleDefinition, value?: string | number) {\n    let styles = {};\n    if (typeof style === 'string') {\n      styles[style] = value;\n      style = styles;\n    }\n    styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    this._applyMultiValueStyleToElement(styles, element);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element\n   */\n  applyStyleToElements(style: StyleDefinition, elements: HTMLElement[] = []) {\n    const styles = this.noVendorPrefixes ? style : applyCssPrefixes(style);\n    elements.forEach(el => {\n      this._applyMultiValueStyleToElement(styles, el);\n    });\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction)\n   *\n   * Check inline style first then check computed (stylesheet) style\n   */\n  getFlowDirection(target: HTMLElement): [string, string] {\n    const query = 'flex-direction';\n    let value = this.lookupStyle(target, query);\n    if (value === FALLBACK_STYLE) {\n      value = '';\n    }\n    const hasInlineValue = this.lookupInlineStyle(target, query) ||\n    (isPlatformServer(this._platformId) && this._serverModuleLoaded) ? value : '';\n\n    return [value || 'row', hasInlineValue];\n  }\n\n  /**\n   * Find the DOM element's raw attribute value (if any)\n   */\n  lookupAttributeValue(element: HTMLElement, attribute: string): string {\n    return element.getAttribute(attribute) || '';\n  }\n\n  /**\n   * Find the DOM element's inline style value (if any)\n   */\n  lookupInlineStyle(element: HTMLElement, styleName: string): string {\n    return element.style[styleName] || element.style.getPropertyValue(styleName) || '';\n  }\n\n  /**\n   * Determine the inline or inherited CSS style\n   * NOTE: platform-server has no implementation for getComputedStyle\n   */\n  lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n    let value = '';\n    if (element) {\n      let immediateValue = value = this.lookupInlineStyle(element, styleName);\n      if (!immediateValue) {\n        if (isPlatformBrowser(this._platformId)) {\n          if (!inlineOnly) {\n            value = getComputedStyle(element).getPropertyValue(styleName);\n          }\n        } else {\n          if (this._serverModuleLoaded) {\n            value = this._serverStylesheet.getStyleForElement(element, styleName);\n          }\n        }\n      }\n    }\n\n    // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n    //       in which case getComputedStyle() should determine a valid value.\n    return value ? value.trim() : FALLBACK_STYLE;\n  }\n\n  /**\n   * Applies the styles to the element. The styles object map may contain an array of values\n   * Each value will be added as element style\n   * Keys are sorted to add prefixed styles (like -webkit-x) first, before the standard ones\n   */\n  private _applyMultiValueStyleToElement(styles: {}, element: HTMLElement) {\n    Object.keys(styles).sort().forEach(key => {\n      const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n      values.sort();\n      for (let value of values) {\n        if (isPlatformBrowser(this._platformId) || !this._serverModuleLoaded) {\n          element.style.setProperty(key, value);\n        } else {\n          this._serverStylesheet.addStyleToElement(element, key, value);\n        }\n      }\n    });\n  }\n}\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5})\n */\nexport type StyleDefinition = { [property: string]: string | number | null };\n\nconst FALLBACK_STYLE = 'block';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\nexport const DISABLE_VENDOR_PREFIXES = new InjectionToken<boolean>(\n  'Flex Layout token, whether to add vendor prefix styles inline for elements');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Token that is provided to tell whether the FlexLayoutServerModule\n * has been included in the bundle\n *\n * NOTE: This can be manually provided to disable styles when using SSR\n */\nexport const SERVER_TOKEN = new InjectionToken<boolean>('FlexLayoutServerLoaded');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\n/**\n * Utility to emulate a CSS stylesheet\n *\n * This utility class stores all of the styles for a given HTML element\n * as a readonly `stylesheet` map.\n */\n@Injectable()\nexport class StylesheetMap {\n\n  readonly stylesheet = new Map<HTMLElement, Map<string, string|number>>();\n\n  /**\n   * Add an individual style to an HTML element\n   */\n  addStyleToElement(element: HTMLElement, style: string, value: string|number) {\n    const stylesheet = this.stylesheet.get(element);\n    if (stylesheet) {\n      stylesheet.set(style, value);\n    } else {\n      this.stylesheet.set(element, new Map([[style, value]]));\n    }\n  }\n\n  /**\n   * Clear the virtual stylesheet\n   */\n  clearStyles() {\n    this.stylesheet.clear();\n  }\n\n  /**\n   * Retrieve a given style for an HTML element\n   */\n  getStyleForElement(el: HTMLElement, styleName: string): string {\n    const styles = this.stylesheet.get(el);\n    let value = '';\n    if (styles) {\n      const style = styles.get(styleName);\n      if (typeof style === 'number' || typeof style === 'string') {\n        value = style + '';\n      }\n    }\n    return value;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, NgZone, Optional, PLATFORM_ID, SkipSelf} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\n\nimport {MatchMedia} from '../match-media/match-media';\n\n/**\n * Ensure a single global service provider\n */\nexport function MATCH_MEDIA_PROVIDER_FACTORY(parentMedia: MatchMedia,\n                                             ngZone: NgZone,\n                                             platformId: Object,\n                                             _document: Document) {\n  return parentMedia || new MatchMedia(ngZone, platformId, _document);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MATCH_MEDIA_PROVIDER = {\n  provide: MatchMedia,\n  deps: [\n    [new Optional(), new SkipSelf(), MatchMedia],\n    NgZone,\n    <InjectionToken<Object>>PLATFORM_ID,\n    <InjectionToken<Document>>DOCUMENT,\n  ],\n  useFactory: MATCH_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from './breakpoint-tools';\nimport {\n  ADD_ORIENTATION_BREAKPOINTS,\n  BREAKPOINT,\n  DISABLE_DEFAULT_BREAKPOINTS,\n} from '../tokens/breakpoint-token';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({}, {\n        defaults: true,         // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || {});\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = (options && options.orientations) ?\n      ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) : DEFAULT_BREAKPOINTS;\n\n    return (options && options.defaults) ?\n      mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom || []);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n *  @deprecated\n *  @deletion-target v6.0.0-beta.15\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = {\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n\n/**\n * Factory that combines the configured breakpoints into one array and then merges\n * them using a utility function\n */\nexport function BREAKPOINTS_PROVIDER_FACTORY(parentBreakpoints: BreakPoint[],\n                                             breakpoints: (BreakPoint|BreakPoint[])[],\n                                             disableDefaults: boolean,\n                                             addOrientation: boolean) {\n  const bpFlattenArray = [].concat.apply([], (breakpoints || [])\n    .map(v => Array.isArray(v) ? v : [v]));\n  const builtIns = DEFAULT_BREAKPOINTS.concat(addOrientation ? ORIENTATION_BREAKPOINTS : []);\n  return parentBreakpoints || disableDefaults ?\n     mergeByAlias(bpFlattenArray) : mergeByAlias(builtIns, bpFlattenArray);\n}\n\n/**\n * Provider that combines the provided extra breakpoints with the default and\n * orientation breakpoints based on configuration\n */\nexport const BREAKPOINTS_PROVIDER = {\n  provide: BREAKPOINTS,\n  useFactory: BREAKPOINTS_PROVIDER_FACTORY,\n  deps: [\n    [new Optional(), new SkipSelf(), BREAKPOINTS],\n    [new Optional(), BREAKPOINT],\n    [new Optional(), DISABLE_DEFAULT_BREAKPOINTS],\n    [new Optional(), ADD_ORIENTATION_BREAKPOINTS],\n  ]\n};\n\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n * @deprecated\n * @deletion-target v6.0.0-beta.15\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from '../breakpoints/break-point';\n\nexport const DISABLE_DEFAULT_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, disable the default breakpoints');\n\nexport const ADD_ORIENTATION_BREAKPOINTS = new InjectionToken<boolean>(\n  'Flex Layout token, add the orientation breakpoints');\n\nexport const BREAKPOINT = new InjectionToken<BreakPoint|BreakPoint[]>(\n  'Flex Layout token, collect all breakpoints into one provider');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from './break-point';\nimport {extendObject} from '../../utils/object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix) {\n      bp.suffix = camelCase(bp.alias);   // create Suffix value based on alias\n      bp.overlapping = !!bp.overlapping; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const dict: {[key: string]: BreakPoint} = {};\n  defaults.forEach(bp => {\n    dict[bp.alias] = bp;\n  });\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    if (dict[bp.alias]) {\n      extendObject(dict[bp.alias], bp);\n    } else {\n      dict[bp.alias] = bp;\n    }\n  });\n\n  return validateSuffixes(Object.keys(dict).map(k => dict[k]));\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(min-width: 0px) and (max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\nimport {map} from 'rxjs/operators/map';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MediaChange} from '../media-change';\nimport {MatchMedia} from '../match-media/match-media';\nimport {mergeAlias} from '../add-alias';\nimport {BreakPoint} from '../breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import {filter} from 'rxjs/operators/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .pipe(\n *          filter((change:MediaChange) => true)   // silly noop filter\n *        ).subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const media$ = this.mediaWatcher.observe();\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return media$.pipe(\n      filter(activationsOnly),\n      filter(excludeOverlaps),\n      map(addAliasInformation)\n    );\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint | null = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken, Optional, SkipSelf} from '@angular/core';\n\nimport {BreakPointRegistry} from './break-point-registry';\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n/**\n * Ensure a single global service provider\n */\nexport function BREAKPOINT_REGISTRY_PROVIDER_FACTORY(parentRegistry: BreakPointRegistry,\n                                                     breakpoints: BreakPoint[]) {\n  return parentRegistry || new BreakPointRegistry(breakpoints);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const BREAKPOINT_REGISTRY_PROVIDER = {\n  provide: BreakPointRegistry,\n  deps: [\n    [new Optional(), new SkipSelf(), BreakPointRegistry],\n    <InjectionToken<BreakPoint[]>>BREAKPOINTS,\n  ],\n  useFactory: BREAKPOINT_REGISTRY_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\nimport {map} from 'rxjs/operators/map';\n\nimport {BreakPoint} from '../breakpoints/break-point';\nimport {BreakPointRegistry} from '../breakpoints/break-point-registry';\nimport {MatchMedia} from '../match-media/match-media';\nimport {MediaChange} from '../media-change';\nimport {mergeAlias} from '../add-alias';\n\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint | null {\n    let found: BreakPoint | null = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias || '') ||\n      this._breakpoints.findByQuery(alias || '');\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return media$.pipe(\n      map(change => mergeAlias(change, bp)),\n      filter(hasAlias)\n    );\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from './media-change';\nimport {BreakPoint} from './breakpoints/break-point';\nimport {extendObject} from '../utils/object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint | null) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone, PLATFORM_ID} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operators/filter';\n\nimport {MediaChange} from '../media-change';\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone,\n              @Inject(PLATFORM_ID) protected _platformId: Object,\n              @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    let mql = this._registry.get(mediaQuery);\n    return !!mql ? mql.matches : false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    if (mediaQuery) {\n      this.registerQuery(mediaQuery);\n    }\n\n    return this._observable$.pipe(\n      filter((change: MediaChange) => {\n        return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n      })\n    );\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      this._prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isPlatformBrowser(this._platformId) &&\n      !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n\n  /**\n   * For Webkit engines that only trigger the MediaQueryList Listener\n   * when there is at least one CSS selector for the respective media query.\n   *\n   * @param query string The mediaQuery used to create a faux CSS selector\n   *\n   */\n  protected _prepareQueryCSS(mediaQueries: string[], _document: Document) {\n    let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n    if (list.length > 0) {\n      let query = list.join(', ');\n\n      try {\n        let styleEl = _document.createElement('style');\n\n        styleEl.setAttribute('type', 'text/css');\n        if (!styleEl['styleSheet']) {\n          let cssText = `\n/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}\n` ;\n          styleEl.appendChild(_document.createTextNode(cssText));\n        }\n\n        _document.head.appendChild(styleEl);\n\n        // Store in private global registry\n        list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overridden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint | null {\n    return this._registry.find(bp => bp.alias == alias) || null;\n  }\n\n  findByQuery(query: string): BreakPoint | null {\n    return this._registry.find(bp => bp.mediaQuery == query) || null;\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => !!it.suffix ? it.suffix : '');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {APP_BOOTSTRAP_LISTENER, PLATFORM_ID, InjectionToken} from '@angular/core';\nimport {DOCUMENT, isPlatformBrowser} from '@angular/common';\n\n/**\n * Find all of the server-generated stylings, if any, and remove them\n * This will be in the form of inline classes and the style block in the\n * head of the DOM\n */\nexport function removeStyles(_document: Document, platformId: Object) {\n  return () => {\n    if (isPlatformBrowser(platformId)) {\n      const elements = Array.from(_document.querySelectorAll(`[class*=${CLASS_NAME}]`));\n\n      // RegExp constructor should only be used if passing a variable to the constructor.\n      // When using static regular expression it is more performant to use reg exp literal.\n      // This is also needed to provide Safari 9 compatibility, please see\n      // https://stackoverflow.com/questions/37919802 for more discussion.\n      const classRegex = /\\bflex-layout-.+?\\b/g;\n      elements.forEach(el => {\n        el.classList.contains(`${CLASS_NAME}ssr`) && el.parentNode ?\n          el.parentNode.removeChild(el) : el.className.replace(classRegex, '');\n      });\n    }\n  };\n}\n\n/**\n *  Provider to remove SSR styles on the browser\n */\nexport const BROWSER_PROVIDER = {\n  provide: <InjectionToken<(() => void)[]>>APP_BOOTSTRAP_LISTENER,\n  useFactory: removeStyles,\n  deps: [DOCUMENT, PLATFORM_ID],\n  multi: true\n};\n\nexport const CLASS_NAME = 'flex-layout-';\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["Optional","SkipSelf","Inject","DOCUMENT","PLATFORM_ID","NgZone","Injectable","BehaviorSubject","tslib_1.__extends","SimpleChange","map","InjectionToken","NgModule","isPlatformBrowser","isPlatformServer","filter","APP_BOOTSTRAP_LISTENER"],"mappings":"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"}