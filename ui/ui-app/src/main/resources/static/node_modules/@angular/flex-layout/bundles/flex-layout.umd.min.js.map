{"version":3,"file":"flex-layout.umd.min.js","sources":["../../src/lib/version.ts","../../src/lib/module.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('5.0.0-beta.13-3e5820d');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, ModuleWithProviders, NgModule, Optional, PLATFORM_ID} from '@angular/core';\nimport {isPlatformServer} from '@angular/common';\nimport {\n  BreakPoint,\n  BreakPointProviderOptions,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY,\n  CoreModule,\n  SERVER_TOKEN,\n} from '@angular/flex-layout/core';\nimport {ExtendedModule} from '@angular/flex-layout/extended';\nimport {FlexModule} from '@angular/flex-layout/flex';\n\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './api/flexbox/layout-padding';\n *  import {LayoutMarginDirective} from './api/flexbox/layout-margin';\n */\n\n/**\n *\n */\n@NgModule({\n  imports: [FlexModule, ExtendedModule, CoreModule],\n  exports: [FlexModule, ExtendedModule, CoreModule]\n})\nexport class FlexLayoutModule {\n\n  constructor (\n    @Optional() @Inject(SERVER_TOKEN) serverModuleLoaded: boolean,\n    @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (isPlatformServer(platformId) && !serverModuleLoaded) {\n      console.warn('Warning: Flex Layout loaded on the server without FlexLayoutServerModule');\n    }\n  }\n\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   * @deprecated use BREAKPOINT multi-provider instead\n   * @deletion-target v6.0.0-beta.15\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n"],"names":["VERSION","Version","FlexLayoutModule","serverModuleLoaded","platformId","isPlatformServer","console","warn","provideBreakPoints","breakpoints","options","ngModule","providers","CUSTOM_BREAKPOINTS_PROVIDER_FACTORY","orientations","type","NgModule","args","imports","FlexModule","ExtendedModule","CoreModule","exports","undefined","decorators","Optional","Inject","SERVER_TOKEN","Object","PLATFORM_ID"],"mappings":";;;;;;;8mBAWA,IAAaA,GAAU,GAAIC,GAAAA,QAAQ,kCC0BjC,QAAFC,GACsCC,EACbC,GAEjBC,EAAAA,iBAAiBD,KAAgBD,GACnCG,QAAQC,KAAK,4EA1CnB,MAuDSL,GAATM,mBAAE,SAA0BC,EACAC,GACxB,OACEC,SAAUT,EACVU,WACEC,EAAAA,oCAAoCJ,EAAaC,IAAYI,cAAc,sBA7BnFC,KAACC,EAAAA,SAADC,OACEC,SAAUC,EAAAA,WAAYC,EAAAA,eAAgBC,EAAAA,YACtCC,SAAUH,EAAAA,WAAYC,EAAAA,eAAgBC,EAAAA,oDAKxCN,SAAAQ,GAAAC,aAAAT,KAAKU,EAAAA,WAALV,KAAiBW,EAAAA,OAAjBT,MAAwBU,EAAAA,kBACxBZ,KAAAa,OAAAJ,aAAAT,KAAKW,EAAAA,OAALT,MAAYY,EAAAA,kBAvCZ3B"}