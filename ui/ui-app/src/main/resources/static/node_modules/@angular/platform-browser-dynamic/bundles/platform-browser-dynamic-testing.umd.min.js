/**
 * @license Angular v5.1.3
 * (c) 2010-2017 Google, Inc. https://angular.io/
 * License: MIT
 */
!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@angular/core"),require("@angular/core/testing"),require("@angular/platform-browser-dynamic"),require("@angular/platform-browser/testing"),require("@angular/platform-browser"),require("@angular/compiler"),require("@angular/compiler/testing")):"function"==typeof define&&define.amd?define("@angular/platform-browser-dynamic/testing",["exports","@angular/core","@angular/core/testing","@angular/platform-browser-dynamic","@angular/platform-browser/testing","@angular/platform-browser","@angular/compiler","@angular/compiler/testing"],factory):factory((global.ng=global.ng||{},global.ng.platformBrowserDynamic=global.ng.platformBrowserDynamic||{},global.ng.platformBrowserDynamic.testing={}),global.ng.core,global.ng.core.testing,global.ng.platformBrowserDynamic,global.ng.platformBrowser.testing,global.ng.platformBrowser,global.ng.compiler,global.ng.compiler.testing)}(this,function(exports,_angular_core,_angular_core_testing,_angular_platformBrowserDynamic,_angular_platformBrowser_testing,_angular_platformBrowser,_angular_compiler,_angular_compiler_testing){"use strict";function __extends(d,b){function __(){this.constructor=d}extendStatics(d,b),d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)}function removeMetadata(metadata,remove,references){var removeObjects=new Set;for(var prop in remove)!function(prop){var removeValue=remove[prop];removeValue instanceof Array?removeValue.forEach(function(value){removeObjects.add(_propHashKey(prop,value,references))}):removeObjects.add(_propHashKey(prop,removeValue,references))}(prop);for(var prop in metadata)!function(prop){var propValue=metadata[prop];propValue instanceof Array?metadata[prop]=propValue.filter(function(value){return!removeObjects.has(_propHashKey(prop,value,references))}):removeObjects.has(_propHashKey(prop,propValue,references))&&(metadata[prop]=void 0)}(prop)}function addMetadata(metadata,add){for(var prop in add){var addValue=add[prop],propValue=metadata[prop];null!=propValue&&propValue instanceof Array?metadata[prop]=propValue.concat(addValue):metadata[prop]=addValue}}function setMetadata(metadata,set){for(var prop in set)metadata[prop]=set[prop]}function _propHashKey(propName,propValue,references){var replacer=function(key,value){return"function"==typeof value&&(value=_serializeReference(value,references)),value};return propName+":"+JSON.stringify(propValue,replacer)}function _serializeReference(ref,references){var id=references.get(ref);return id||(id=""+_angular_core.ɵstringify(ref)+_nextReferenceId++,references.set(ref,id)),id}function _valueProps(obj){var props=[];Object.keys(obj).forEach(function(prop){prop.startsWith("_")||props.push(prop)});for(var proto=obj;proto=Object.getPrototypeOf(proto);)Object.keys(proto).forEach(function(protoProp){var desc=Object.getOwnPropertyDescriptor(proto,protoProp);!protoProp.startsWith("_")&&desc&&"get"in desc&&props.push(protoProp)});return props}var extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(d,b){d.__proto__=b}||function(d,b){for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p])},DOMTestComponentRenderer=function(_super){function DOMTestComponentRenderer(_doc){var _this=_super.call(this)||this;return _this._doc=_doc,_this}return __extends(DOMTestComponentRenderer,_super),DOMTestComponentRenderer.prototype.insertRootElement=function(rootElId){for(var rootEl=_angular_platformBrowser.ɵgetDOM().firstChild(_angular_platformBrowser.ɵgetDOM().content(_angular_platformBrowser.ɵgetDOM().createTemplate('<div id="'+rootElId+'"></div>'))),oldRoots=_angular_platformBrowser.ɵgetDOM().querySelectorAll(this._doc,"[id^=root]"),i=0;i<oldRoots.length;i++)_angular_platformBrowser.ɵgetDOM().remove(oldRoots[i]);_angular_platformBrowser.ɵgetDOM().appendChild(this._doc.body,rootEl)},DOMTestComponentRenderer.decorators=[{type:_angular_core.Injectable}],DOMTestComponentRenderer.ctorParameters=function(){return[{type:void 0,decorators:[{type:_angular_core.Inject,args:[_angular_platformBrowser.DOCUMENT]}]}]},DOMTestComponentRenderer}(_angular_core_testing.TestComponentRenderer),_nextReferenceId=0,MetadataOverrider=function(){function MetadataOverrider(){this._references=new Map}return MetadataOverrider.prototype.overrideMetadata=function(metadataClass,oldMetadata,override){var props={};if(oldMetadata&&_valueProps(oldMetadata).forEach(function(prop){return props[prop]=oldMetadata[prop]}),override.set){if(override.remove||override.add)throw new Error("Cannot set and add/remove "+_angular_core.ɵstringify(metadataClass)+" at the same time!");setMetadata(props,override.set)}return override.remove&&removeMetadata(props,override.remove,this._references),override.add&&addMetadata(props,override.add),new metadataClass(props)},MetadataOverrider}(),COMPILER_PROVIDERS=[{provide:_angular_compiler_testing.MockPipeResolver,deps:[_angular_compiler.CompileReflector]},{provide:_angular_compiler.PipeResolver,useExisting:_angular_compiler_testing.MockPipeResolver},{provide:_angular_compiler_testing.MockDirectiveResolver,deps:[_angular_compiler.CompileReflector]},{provide:_angular_compiler.DirectiveResolver,useExisting:_angular_compiler_testing.MockDirectiveResolver},{provide:_angular_compiler_testing.MockNgModuleResolver,deps:[_angular_compiler.CompileReflector]},{provide:_angular_compiler.NgModuleResolver,useExisting:_angular_compiler_testing.MockNgModuleResolver}],TestingCompilerFactoryImpl=function(){function TestingCompilerFactoryImpl(_injector,_compilerFactory){this._injector=_injector,this._compilerFactory=_compilerFactory}return TestingCompilerFactoryImpl.prototype.createTestingCompiler=function(options){var compiler=this._compilerFactory.createCompiler(options);return new TestingCompilerImpl(compiler,compiler.injector.get(_angular_compiler_testing.MockDirectiveResolver),compiler.injector.get(_angular_compiler_testing.MockPipeResolver),compiler.injector.get(_angular_compiler_testing.MockNgModuleResolver))},TestingCompilerFactoryImpl}(),TestingCompilerImpl=function(){function TestingCompilerImpl(_compiler,_directiveResolver,_pipeResolver,_moduleResolver){this._compiler=_compiler,this._directiveResolver=_directiveResolver,this._pipeResolver=_pipeResolver,this._moduleResolver=_moduleResolver,this._overrider=new MetadataOverrider}return Object.defineProperty(TestingCompilerImpl.prototype,"injector",{get:function(){return this._compiler.injector},enumerable:!0,configurable:!0}),TestingCompilerImpl.prototype.compileModuleSync=function(moduleType){return this._compiler.compileModuleSync(moduleType)},TestingCompilerImpl.prototype.compileModuleAsync=function(moduleType){return this._compiler.compileModuleAsync(moduleType)},TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync=function(moduleType){return this._compiler.compileModuleAndAllComponentsSync(moduleType)},TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync=function(moduleType){return this._compiler.compileModuleAndAllComponentsAsync(moduleType)},TestingCompilerImpl.prototype.getComponentFactory=function(component){return this._compiler.getComponentFactory(component)},TestingCompilerImpl.prototype.checkOverrideAllowed=function(type){if(this._compiler.hasAotSummary(type))throw new Error(_angular_core.ɵstringify(type)+" was AOT compiled, so its metadata cannot be changed.")},TestingCompilerImpl.prototype.overrideModule=function(ngModule,override){this.checkOverrideAllowed(ngModule);var oldMetadata=this._moduleResolver.resolve(ngModule,!1);this._moduleResolver.setNgModule(ngModule,this._overrider.overrideMetadata(_angular_core.NgModule,oldMetadata,override)),this.clearCacheFor(ngModule)},TestingCompilerImpl.prototype.overrideDirective=function(directive,override){this.checkOverrideAllowed(directive);var oldMetadata=this._directiveResolver.resolve(directive,!1);this._directiveResolver.setDirective(directive,this._overrider.overrideMetadata(_angular_core.Directive,oldMetadata,override)),this.clearCacheFor(directive)},TestingCompilerImpl.prototype.overrideComponent=function(component,override){this.checkOverrideAllowed(component);var oldMetadata=this._directiveResolver.resolve(component,!1);this._directiveResolver.setDirective(component,this._overrider.overrideMetadata(_angular_core.Component,oldMetadata,override)),this.clearCacheFor(component)},TestingCompilerImpl.prototype.overridePipe=function(pipe,override){this.checkOverrideAllowed(pipe);var oldMetadata=this._pipeResolver.resolve(pipe,!1);this._pipeResolver.setPipe(pipe,this._overrider.overrideMetadata(_angular_core.Pipe,oldMetadata,override)),this.clearCacheFor(pipe)},TestingCompilerImpl.prototype.loadAotSummaries=function(summaries){this._compiler.loadAotSummaries(summaries)},TestingCompilerImpl.prototype.clearCache=function(){this._compiler.clearCache()},TestingCompilerImpl.prototype.clearCacheFor=function(type){this._compiler.clearCacheFor(type)},TestingCompilerImpl.prototype.getComponentFromError=function(error){return error[_angular_compiler.ERROR_COMPONENT_TYPE]||null},TestingCompilerImpl}(),platformCoreDynamicTesting=_angular_core.createPlatformFactory(_angular_platformBrowserDynamic.ɵplatformCoreDynamic,"coreDynamicTesting",[{provide:_angular_core.COMPILER_OPTIONS,useValue:{providers:COMPILER_PROVIDERS},multi:!0},{provide:_angular_core_testing.ɵTestingCompilerFactory,useClass:TestingCompilerFactoryImpl,deps:[_angular_core.Injector,_angular_core.CompilerFactory]}]),platformBrowserDynamicTesting=_angular_core.createPlatformFactory(platformCoreDynamicTesting,"browserDynamicTesting",_angular_platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS),BrowserDynamicTestingModule=function(){function BrowserDynamicTestingModule(){}return BrowserDynamicTestingModule.decorators=[{type:_angular_core.NgModule,args:[{exports:[_angular_platformBrowser_testing.BrowserTestingModule],providers:[{provide:_angular_core_testing.TestComponentRenderer,useClass:DOMTestComponentRenderer}]}]}],BrowserDynamicTestingModule.ctorParameters=function(){return[]},BrowserDynamicTestingModule}();exports.platformBrowserDynamicTesting=platformBrowserDynamicTesting,exports.BrowserDynamicTestingModule=BrowserDynamicTestingModule,exports.ɵDOMTestComponentRenderer=DOMTestComponentRenderer,exports.ɵplatformCoreDynamicTesting=platformCoreDynamicTesting,exports.ɵa=COMPILER_PROVIDERS,exports.ɵb=TestingCompilerFactoryImpl,Object.defineProperty(exports,"__esModule",{value:!0})});
//# sourceMappingURL=platform-browser-dynamic-testing.umd.min.js.map