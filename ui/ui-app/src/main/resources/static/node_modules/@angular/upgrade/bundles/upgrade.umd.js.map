{"version":3,"file":"upgrade.umd.js","sources":["../../../packages/upgrade/esm5/src/common/version.js","../../../packages/upgrade/esm5/src/common/angular1.js","../../../packages/upgrade/esm5/src/common/constants.js","../../../packages/upgrade/esm5/src/common/component_info.js","../../../packages/upgrade/esm5/src/common/util.js","../../../packages/upgrade/esm5/src/common/downgrade_component_adapter.js","../../../packages/upgrade/esm5/src/common/downgrade_component.js","../../../packages/upgrade/esm5/src/common/downgrade_injectable.js","../../../packages/upgrade/esm5/src/common/upgrade_helper.js","../../../packages/upgrade/esm5/src/dynamic/upgrade_ng1_adapter.js","../../../packages/upgrade/esm5/src/dynamic/upgrade_adapter.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nimport { Version } from \"@angular/core\";\n/**\n * \\@stable\n */\nexport var /** @type {?} */ VERSION = new Version('5.1.3');\n//# sourceMappingURL=version.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\nexport function IAnnotatedFunction() { }\nfunction IAnnotatedFunction_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    IAnnotatedFunction.prototype.$inject;\n}\n/**\n * @record\n */\nexport function IModule() { }\nfunction IModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IModule.prototype.name;\n    /** @type {?} */\n    IModule.prototype.requires;\n    /** @type {?} */\n    IModule.prototype.config;\n    /** @type {?} */\n    IModule.prototype.directive;\n    /** @type {?} */\n    IModule.prototype.component;\n    /** @type {?} */\n    IModule.prototype.controller;\n    /** @type {?} */\n    IModule.prototype.factory;\n    /** @type {?} */\n    IModule.prototype.value;\n    /** @type {?} */\n    IModule.prototype.constant;\n    /** @type {?} */\n    IModule.prototype.run;\n}\n/**\n * @record\n */\nexport function ICompileService() { }\nfunction ICompileService_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (element: Element|NodeList|Node[]|string, transclude?: Function): ILinkFn;\n    */\n}\n/**\n * @record\n */\nexport function ILinkFn() { }\nfunction ILinkFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (scope: IScope, cloneAttachFn?: ICloneAttachFunction, options?: ILinkFnOptions): IAugmentedJQuery;\n    */\n    /** @type {?|undefined} */\n    ILinkFn.prototype.$$slots;\n}\n/**\n * @record\n */\nexport function ILinkFnOptions() { }\nfunction ILinkFnOptions_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    ILinkFnOptions.prototype.parentBoundTranscludeFn;\n    /** @type {?|undefined} */\n    ILinkFnOptions.prototype.transcludeControllers;\n    /** @type {?|undefined} */\n    ILinkFnOptions.prototype.futureParentElement;\n}\n/**\n * @record\n */\nexport function IRootScopeService() { }\nfunction IRootScopeService_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IRootScopeService.prototype.$new;\n    /** @type {?} */\n    IRootScopeService.prototype.$id;\n    /** @type {?} */\n    IRootScopeService.prototype.$parent;\n    /** @type {?} */\n    IRootScopeService.prototype.$root;\n    /** @type {?} */\n    IRootScopeService.prototype.$watch;\n    /** @type {?} */\n    IRootScopeService.prototype.$on;\n    /** @type {?} */\n    IRootScopeService.prototype.$destroy;\n    /** @type {?} */\n    IRootScopeService.prototype.$apply;\n    /** @type {?} */\n    IRootScopeService.prototype.$digest;\n    /** @type {?} */\n    IRootScopeService.prototype.$evalAsync;\n    /** @type {?} */\n    IRootScopeService.prototype.$on;\n    /** @type {?} */\n    IRootScopeService.prototype.$$childTail;\n    /** @type {?} */\n    IRootScopeService.prototype.$$childHead;\n    /** @type {?} */\n    IRootScopeService.prototype.$$nextSibling;\n    /* TODO: handle strange member:\n    [key: string]: any;\n    */\n}\n/**\n * @record\n */\nexport function IScope() { }\nfunction IScope_tsickle_Closure_declarations() {\n}\n/**\n * @record\n */\nexport function IAngularBootstrapConfig() { }\nfunction IAngularBootstrapConfig_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    IAngularBootstrapConfig.prototype.strictDi;\n}\n/**\n * @record\n */\nexport function IDirective() { }\nfunction IDirective_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    IDirective.prototype.compile;\n    /** @type {?|undefined} */\n    IDirective.prototype.controller;\n    /** @type {?|undefined} */\n    IDirective.prototype.controllerAs;\n    /** @type {?|undefined} */\n    IDirective.prototype.bindToController;\n    /** @type {?|undefined} */\n    IDirective.prototype.link;\n    /** @type {?|undefined} */\n    IDirective.prototype.name;\n    /** @type {?|undefined} */\n    IDirective.prototype.priority;\n    /** @type {?|undefined} */\n    IDirective.prototype.replace;\n    /** @type {?|undefined} */\n    IDirective.prototype.require;\n    /** @type {?|undefined} */\n    IDirective.prototype.restrict;\n    /** @type {?|undefined} */\n    IDirective.prototype.scope;\n    /** @type {?|undefined} */\n    IDirective.prototype.template;\n    /** @type {?|undefined} */\n    IDirective.prototype.templateUrl;\n    /** @type {?|undefined} */\n    IDirective.prototype.templateNamespace;\n    /** @type {?|undefined} */\n    IDirective.prototype.terminal;\n    /** @type {?|undefined} */\n    IDirective.prototype.transclude;\n}\n/**\n * @record\n */\nexport function IDirectiveCompileFn() { }\nfunction IDirectiveCompileFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (templateElement: IAugmentedJQuery, templateAttributes: IAttributes,\n       transclude: ITranscludeFunction): IDirectivePrePost;\n    */\n}\n/**\n * @record\n */\nexport function IDirectivePrePost() { }\nfunction IDirectivePrePost_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    IDirectivePrePost.prototype.pre;\n    /** @type {?|undefined} */\n    IDirectivePrePost.prototype.post;\n}\n/**\n * @record\n */\nexport function IDirectiveLinkFn() { }\nfunction IDirectiveLinkFn_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (scope: IScope, instanceElement: IAugmentedJQuery, instanceAttributes: IAttributes,\n       controller: any, transclude: ITranscludeFunction): void;\n    */\n}\n/**\n * @record\n */\nexport function IComponent() { }\nfunction IComponent_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    IComponent.prototype.bindings;\n    /** @type {?|undefined} */\n    IComponent.prototype.controller;\n    /** @type {?|undefined} */\n    IComponent.prototype.controllerAs;\n    /** @type {?|undefined} */\n    IComponent.prototype.require;\n    /** @type {?|undefined} */\n    IComponent.prototype.template;\n    /** @type {?|undefined} */\n    IComponent.prototype.templateUrl;\n    /** @type {?|undefined} */\n    IComponent.prototype.transclude;\n}\n/**\n * @record\n */\nexport function IAttributes() { }\nfunction IAttributes_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IAttributes.prototype.$observe;\n    /* TODO: handle strange member:\n    [key: string]: any;\n    */\n}\n/**\n * @record\n */\nexport function ITranscludeFunction() { }\nfunction ITranscludeFunction_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (scope: IScope, cloneAttachFn: ICloneAttachFunction): IAugmentedJQuery;\n    */\n    /* TODO: handle strange member:\n    (cloneAttachFn?: ICloneAttachFunction): IAugmentedJQuery;\n    */\n}\n/**\n * @record\n */\nexport function ICloneAttachFunction() { }\nfunction ICloneAttachFunction_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (clonedElement?: IAugmentedJQuery, scope?: IScope): any;\n    */\n}\n/**\n * @record\n */\nexport function IProvider() { }\nfunction IProvider_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IProvider.prototype.$get;\n}\n/**\n * @record\n */\nexport function IProvideService() { }\nfunction IProvideService_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IProvideService.prototype.provider;\n    /** @type {?} */\n    IProvideService.prototype.factory;\n    /** @type {?} */\n    IProvideService.prototype.service;\n    /** @type {?} */\n    IProvideService.prototype.value;\n    /** @type {?} */\n    IProvideService.prototype.constant;\n    /** @type {?} */\n    IProvideService.prototype.decorator;\n}\n/**\n * @record\n */\nexport function IParseService() { }\nfunction IParseService_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (expression: string): ICompiledExpression;\n    */\n}\n/**\n * @record\n */\nexport function ICompiledExpression() { }\nfunction ICompiledExpression_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (context: any, locals: any): any;\n    */\n    /** @type {?|undefined} */\n    ICompiledExpression.prototype.assign;\n}\n/**\n * @record\n */\nexport function IHttpBackendService() { }\nfunction IHttpBackendService_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (method: string, url: string, post?: any, callback?: Function, headers?: any, timeout?: number,\n       withCredentials?: boolean): void;\n    */\n}\n/**\n * @record\n */\nexport function ICacheObject() { }\nfunction ICacheObject_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ICacheObject.prototype.put;\n    /** @type {?} */\n    ICacheObject.prototype.get;\n}\n/**\n * @record\n */\nexport function ITemplateCacheService() { }\nfunction ITemplateCacheService_tsickle_Closure_declarations() {\n}\n/**\n * @record\n */\nexport function ITemplateRequestService() { }\nfunction ITemplateRequestService_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (template: string|any __ TrustedResourceUrl __, ignoreRequestError?: boolean): Promise<string>;\n    */\n    /** @type {?} */\n    ITemplateRequestService.prototype.totalPendingRequests;\n}\n/**\n * @record\n */\nexport function IControllerService() { }\nfunction IControllerService_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (controllerConstructor: IController, locals?: any, later?: any, ident?: any): any;\n    */\n    /* TODO: handle strange member:\n    (controllerName: string, locals?: any): any;\n    */\n}\n/**\n * @record\n */\nexport function IInjectorService() { }\nfunction IInjectorService_tsickle_Closure_declarations() {\n    /** @type {?} */\n    IInjectorService.prototype.get;\n    /** @type {?} */\n    IInjectorService.prototype.has;\n}\n/**\n * @record\n */\nexport function IIntervalService() { }\nfunction IIntervalService_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    (func: Function, delay: number, count?: number, invokeApply?: boolean,\n       ...args: any[]): Promise<any>;\n    */\n    /** @type {?} */\n    IIntervalService.prototype.cancel;\n}\n/**\n * @record\n */\nexport function ITestabilityService() { }\nfunction ITestabilityService_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ITestabilityService.prototype.findBindings;\n    /** @type {?} */\n    ITestabilityService.prototype.findModels;\n    /** @type {?} */\n    ITestabilityService.prototype.getLocation;\n    /** @type {?} */\n    ITestabilityService.prototype.setLocation;\n    /** @type {?} */\n    ITestabilityService.prototype.whenStable;\n}\n/**\n * @record\n */\nexport function INgModelController() { }\nfunction INgModelController_tsickle_Closure_declarations() {\n    /** @type {?} */\n    INgModelController.prototype.$render;\n    /** @type {?} */\n    INgModelController.prototype.$isEmpty;\n    /** @type {?} */\n    INgModelController.prototype.$setValidity;\n    /** @type {?} */\n    INgModelController.prototype.$setPristine;\n    /** @type {?} */\n    INgModelController.prototype.$setDirty;\n    /** @type {?} */\n    INgModelController.prototype.$setUntouched;\n    /** @type {?} */\n    INgModelController.prototype.$setTouched;\n    /** @type {?} */\n    INgModelController.prototype.$rollbackViewValue;\n    /** @type {?} */\n    INgModelController.prototype.$validate;\n    /** @type {?} */\n    INgModelController.prototype.$commitViewValue;\n    /** @type {?} */\n    INgModelController.prototype.$setViewValue;\n    /** @type {?} */\n    INgModelController.prototype.$viewValue;\n    /** @type {?} */\n    INgModelController.prototype.$modelValue;\n    /** @type {?} */\n    INgModelController.prototype.$parsers;\n    /** @type {?} */\n    INgModelController.prototype.$formatters;\n    /** @type {?} */\n    INgModelController.prototype.$validators;\n    /** @type {?} */\n    INgModelController.prototype.$asyncValidators;\n    /** @type {?} */\n    INgModelController.prototype.$viewChangeListeners;\n    /** @type {?} */\n    INgModelController.prototype.$error;\n    /** @type {?} */\n    INgModelController.prototype.$pending;\n    /** @type {?} */\n    INgModelController.prototype.$untouched;\n    /** @type {?} */\n    INgModelController.prototype.$touched;\n    /** @type {?} */\n    INgModelController.prototype.$pristine;\n    /** @type {?} */\n    INgModelController.prototype.$dirty;\n    /** @type {?} */\n    INgModelController.prototype.$valid;\n    /** @type {?} */\n    INgModelController.prototype.$invalid;\n    /** @type {?} */\n    INgModelController.prototype.$name;\n}\n/**\n * @return {?}\n */\nfunction noNg() {\n    throw new Error('AngularJS v1.x is not loaded!');\n}\nvar /** @type {?} */ angular = /** @type {?} */ ({\n    bootstrap: noNg,\n    module: noNg,\n    element: noNg,\n    version: noNg,\n    resumeBootstrap: noNg,\n    getTestability: noNg\n});\ntry {\n    if (window.hasOwnProperty('angular')) {\n        angular = (/** @type {?} */ (window)).angular;\n    }\n}\ncatch (/** @type {?} */ e) {\n    // ignore in CJS mode.\n}\n/**\n * @deprecated Use {\\@link setAngularJSGlobal} instead.\n * @param {?} ng\n * @return {?}\n */\nexport function setAngularLib(ng) {\n    setAngularJSGlobal(ng);\n}\n/**\n * @deprecated Use {\\@link getAngularJSGlobal} instead.\n * @return {?}\n */\nexport function getAngularLib() {\n    return getAngularJSGlobal();\n}\n/**\n * Resets the AngularJS global.\n *\n * Used when AngularJS is loaded lazily, and not available on `window`.\n *\n * \\@stable\n * @param {?} ng\n * @return {?}\n */\nexport function setAngularJSGlobal(ng) {\n    angular = ng;\n}\n/**\n * Returns the current AngularJS global.\n *\n * \\@stable\n * @return {?}\n */\nexport function getAngularJSGlobal() {\n    return angular;\n}\nexport var /** @type {?} */ bootstrap = function (e, modules, config) {\n    return angular.bootstrap(e, modules, config);\n};\nexport var /** @type {?} */ module = function (prefix, dependencies) {\n    return angular.module(prefix, dependencies);\n};\nexport var /** @type {?} */ element = function (e) { return angular.element(e); };\nexport var /** @type {?} */ resumeBootstrap = function () { return angular.resumeBootstrap(); };\nexport var /** @type {?} */ getTestability = function (e) { return angular.getTestability(e); };\nexport var /** @type {?} */ version = angular.version;\n//# sourceMappingURL=angular1.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var /** @type {?} */ $COMPILE = '$compile';\nexport var /** @type {?} */ $CONTROLLER = '$controller';\nexport var /** @type {?} */ $DELEGATE = '$delegate';\nexport var /** @type {?} */ $HTTP_BACKEND = '$httpBackend';\nexport var /** @type {?} */ $INJECTOR = '$injector';\nexport var /** @type {?} */ $INTERVAL = '$interval';\nexport var /** @type {?} */ $PARSE = '$parse';\nexport var /** @type {?} */ $PROVIDE = '$provide';\nexport var /** @type {?} */ $ROOT_SCOPE = '$rootScope';\nexport var /** @type {?} */ $SCOPE = '$scope';\nexport var /** @type {?} */ $TEMPLATE_CACHE = '$templateCache';\nexport var /** @type {?} */ $TEMPLATE_REQUEST = '$templateRequest';\nexport var /** @type {?} */ $$TESTABILITY = '$$testability';\nexport var /** @type {?} */ COMPILER_KEY = '$$angularCompiler';\nexport var /** @type {?} */ GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport var /** @type {?} */ INJECTOR_KEY = '$$angularInjector';\nexport var /** @type {?} */ LAZY_MODULE_REF = '$$angularLazyModuleRef';\nexport var /** @type {?} */ NG_ZONE_KEY = '$$angularNgZone';\nexport var /** @type {?} */ REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport var /** @type {?} */ REQUIRE_NG_MODEL = '?ngModel';\nexport var /** @type {?} */ UPGRADE_MODULE_NAME = '$$UpgradeModule';\n//# sourceMappingURL=constants.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nvar /**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nPropertyBinding = /** @class */ (function () {\n    function PropertyBinding(prop, attr) {\n        this.prop = prop;\n        this.attr = attr;\n        this.parseBinding();\n    }\n    /**\n     * @return {?}\n     */\n    PropertyBinding.prototype.parseBinding = /**\n     * @return {?}\n     */\n    function () {\n        this.bracketAttr = \"[\" + this.attr + \"]\";\n        this.parenAttr = \"(\" + this.attr + \")\";\n        this.bracketParenAttr = \"[(\" + this.attr + \")]\";\n        var /** @type {?} */ capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n        this.onAttr = \"on\" + capitalAttr;\n        this.bindAttr = \"bind\" + capitalAttr;\n        this.bindonAttr = \"bindon\" + capitalAttr;\n    };\n    return PropertyBinding;\n}());\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport { PropertyBinding };\nfunction PropertyBinding_tsickle_Closure_declarations() {\n    /** @type {?} */\n    PropertyBinding.prototype.bracketAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.bracketParenAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.parenAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.onAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.bindAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.bindonAttr;\n    /** @type {?} */\n    PropertyBinding.prototype.prop;\n    /** @type {?} */\n    PropertyBinding.prototype.attr;\n}\n//# sourceMappingURL=component_info.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar /** @type {?} */ DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nvar /** @type {?} */ DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\n/**\n * @param {?} e\n * @return {?}\n */\nexport function onError(e) {\n    // TODO: (misko): We seem to not have a stack trace here!\n    if (console.error) {\n        console.error(e, e.stack);\n    }\n    else {\n        // tslint:disable-next-line:no-console\n        console.log(e, e.stack);\n    }\n    throw e;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function controllerKey(name) {\n    return '$' + name + 'Controller';\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function directiveNormalize(name) {\n    return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n        .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, function (_, letter) { return letter.toUpperCase(); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nexport function getAttributesAsArray(node) {\n    var /** @type {?} */ attributes = node.attributes;\n    var /** @type {?} */ asArray = /** @type {?} */ ((undefined));\n    if (attributes) {\n        var /** @type {?} */ attrLen = attributes.length;\n        asArray = new Array(attrLen);\n        for (var /** @type {?} */ i = 0; i < attrLen; i++) {\n            asArray[i] = [attributes[i].nodeName, /** @type {?} */ ((attributes[i].nodeValue))];\n        }\n    }\n    return asArray || [];\n}\n/**\n * @param {?} component\n * @return {?}\n */\nexport function getComponentName(component) {\n    // Return the name of the component or the first line of its stringified version.\n    return (/** @type {?} */ (component)).overriddenName || component.name || component.toString().split('\\n')[0];\n}\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    return Deferred;\n}());\nexport { Deferred };\nfunction Deferred_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Deferred.prototype.promise;\n    /** @type {?} */\n    Deferred.prototype.resolve;\n    /** @type {?} */\n    Deferred.prototype.reject;\n}\n/**\n * @record\n */\nexport function LazyModuleRef() { }\nfunction LazyModuleRef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    LazyModuleRef.prototype.needsNgZone;\n    /** @type {?|undefined} */\n    LazyModuleRef.prototype.injector;\n    /** @type {?|undefined} */\n    LazyModuleRef.prototype.promise;\n}\n/**\n * @param {?} component\n * @return {?} Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component) {\n    return typeof component.writeValue === 'function' &&\n        typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n * @param {?} ngModel\n * @param {?} component\n * @return {?}\n */\nexport function hookupNgModel(ngModel, component) {\n    if (ngModel && supportsNgModel(component)) {\n        ngModel.$render = function () { component.writeValue(ngModel.$viewValue); };\n        component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n        if (typeof component.registerOnTouched === 'function') {\n            component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n        }\n    }\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n * @param {?} val1\n * @param {?} val2\n * @return {?}\n */\nexport function strictEquals(val1, val2) {\n    return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n//# sourceMappingURL=util.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationRef, Injector, SimpleChange, Testability, TestabilityRegistry } from \"@angular/core\";\nimport { PropertyBinding } from \"./component_info\";\nimport { $SCOPE } from \"./constants\";\nimport { getComponentName, hookupNgModel, strictEquals } from \"./util\";\nvar /** @type {?} */ INITIAL_VALUE = {\n    __UNINITIALIZED__: true\n};\nvar DowngradeComponentAdapter = /** @class */ (function () {\n    function DowngradeComponentAdapter(element, attrs, scope, ngModel, parentInjector, $injector, $compile, $parse, componentFactory, wrapCallback) {\n        this.element = element;\n        this.attrs = attrs;\n        this.scope = scope;\n        this.ngModel = ngModel;\n        this.parentInjector = parentInjector;\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.$parse = $parse;\n        this.componentFactory = componentFactory;\n        this.wrapCallback = wrapCallback;\n        this.implementsOnChanges = false;\n        this.inputChangeCount = 0;\n        this.inputChanges = {};\n        this.componentScope = scope.$new();\n    }\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.compileContents = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ compiledProjectableNodes = [];\n        var /** @type {?} */ projectableNodes = this.groupProjectableNodes();\n        var /** @type {?} */ linkFns = projectableNodes.map(function (nodes) { return _this.$compile(nodes); }); /** @type {?} */\n        ((this.element.empty))();\n        linkFns.forEach(function (linkFn) {\n            linkFn(_this.scope, function (clone) {\n                compiledProjectableNodes.push(clone); /** @type {?} */\n                ((_this.element.append))(clone);\n            });\n        });\n        return compiledProjectableNodes;\n    };\n    /**\n     * @param {?} projectableNodes\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.createComponent = /**\n     * @param {?} projectableNodes\n     * @return {?}\n     */\n    function (projectableNodes) {\n        var /** @type {?} */ childInjector = Injector.create([{ provide: $SCOPE, useValue: this.componentScope }], this.parentInjector);\n        this.componentRef =\n            this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n        this.changeDetector = this.componentRef.changeDetectorRef;\n        this.component = this.componentRef.instance;\n        // testability hook is commonly added during component bootstrap in\n        // packages/core/src/application_ref.bootstrap()\n        // in downgraded application, component creation will take place here as well as adding the\n        // testability hook.\n        var /** @type {?} */ testability = this.componentRef.injector.get(Testability, null);\n        if (testability) {\n            this.componentRef.injector.get(TestabilityRegistry)\n                .registerApplication(this.componentRef.location.nativeElement, testability);\n        }\n        hookupNgModel(this.ngModel, this.component);\n    };\n    /**\n     * @param {?} needsNgZone\n     * @param {?=} propagateDigest\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.setupInputs = /**\n     * @param {?} needsNgZone\n     * @param {?=} propagateDigest\n     * @return {?}\n     */\n    function (needsNgZone, propagateDigest) {\n        var _this = this;\n        if (propagateDigest === void 0) { propagateDigest = true; }\n        var /** @type {?} */ attrs = this.attrs;\n        var /** @type {?} */ inputs = this.componentFactory.inputs || [];\n        var _loop_1 = function (i) {\n            var /** @type {?} */ input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n            var /** @type {?} */ expr = null;\n            if (attrs.hasOwnProperty(input.attr)) {\n                var /** @type {?} */ observeFn_1 = (function (prop) {\n                    var /** @type {?} */ prevValue = INITIAL_VALUE;\n                    return function (currValue) {\n                        // Initially, both `$observe()` and `$watch()` will call this function.\n                        if (!strictEquals(prevValue, currValue)) {\n                            if (prevValue === INITIAL_VALUE) {\n                                prevValue = currValue;\n                            }\n                            _this.updateInput(prop, prevValue, currValue);\n                            prevValue = currValue;\n                        }\n                    };\n                })(input.prop);\n                attrs.$observe(input.attr, observeFn_1);\n                // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n                // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n                // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n                var /** @type {?} */ unwatch_1 = this_1.componentScope.$watch(function () {\n                    /** @type {?} */ ((unwatch_1))();\n                    unwatch_1 = null;\n                    observeFn_1(attrs[input.attr]);\n                });\n            }\n            else if (attrs.hasOwnProperty(input.bindAttr)) {\n                expr = attrs[input.bindAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bracketAttr)) {\n                expr = attrs[input.bracketAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bindonAttr)) {\n                expr = attrs[input.bindonAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n                expr = attrs[input.bracketParenAttr];\n            }\n            if (expr != null) {\n                var /** @type {?} */ watchFn = (function (prop) {\n                    return function (currValue, prevValue) {\n                        return _this.updateInput(prop, prevValue, currValue);\n                    };\n                })(input.prop);\n                this_1.componentScope.$watch(expr, watchFn);\n            }\n        };\n        var this_1 = this;\n        for (var /** @type {?} */ i = 0; i < inputs.length; i++) {\n            _loop_1(i);\n        }\n        // Invoke `ngOnChanges()` and Change Detection (when necessary)\n        var /** @type {?} */ detectChanges = function () { return _this.changeDetector.detectChanges(); };\n        var /** @type {?} */ prototype = this.componentFactory.componentType.prototype;\n        this.implementsOnChanges = !!(prototype && (/** @type {?} */ (prototype)).ngOnChanges);\n        this.componentScope.$watch(function () { return _this.inputChangeCount; }, this.wrapCallback(function () {\n            // Invoke `ngOnChanges()`\n            if (_this.implementsOnChanges) {\n                var /** @type {?} */ inputChanges = _this.inputChanges;\n                _this.inputChanges = {};\n                (/** @type {?} */ (_this.component)).ngOnChanges(/** @type {?} */ ((inputChanges)));\n            }\n            // If opted out of propagating digests, invoke change detection when inputs change.\n            if (!propagateDigest) {\n                detectChanges();\n            }\n        }));\n        // If not opted out of propagating digests, invoke change detection on every digest\n        if (propagateDigest) {\n            this.componentScope.$watch(this.wrapCallback(detectChanges));\n        }\n        // If necessary, attach the view so that it will be dirty-checked.\n        // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n        if (needsNgZone || !propagateDigest) {\n            var /** @type {?} */ unwatch_2 = this.componentScope.$watch(function () {\n                /** @type {?} */ ((unwatch_2))();\n                unwatch_2 = null;\n                var /** @type {?} */ appRef = _this.parentInjector.get(ApplicationRef);\n                appRef.attachView(_this.componentRef.hostView);\n            });\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.setupOutputs = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ attrs = this.attrs;\n        var /** @type {?} */ outputs = this.componentFactory.outputs || [];\n        var _loop_2 = function (j) {\n            var /** @type {?} */ output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n            var /** @type {?} */ expr = null;\n            var /** @type {?} */ assignExpr = false;\n            var /** @type {?} */ bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n            var /** @type {?} */ bracketParenAttr = \"[(\" + output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8) + \")]\";\n            if (attrs.hasOwnProperty(output.onAttr)) {\n                expr = attrs[output.onAttr];\n            }\n            else if (attrs.hasOwnProperty(output.parenAttr)) {\n                expr = attrs[output.parenAttr];\n            }\n            else if (attrs.hasOwnProperty(bindonAttr)) {\n                expr = attrs[bindonAttr];\n                assignExpr = true;\n            }\n            else if (attrs.hasOwnProperty(bracketParenAttr)) {\n                expr = attrs[bracketParenAttr];\n                assignExpr = true;\n            }\n            if (expr != null && assignExpr != null) {\n                var /** @type {?} */ getter_1 = this_2.$parse(expr);\n                var /** @type {?} */ setter_1 = getter_1.assign;\n                if (assignExpr && !setter_1) {\n                    throw new Error(\"Expression '\" + expr + \"' is not assignable!\");\n                }\n                var /** @type {?} */ emitter = /** @type {?} */ (this_2.component[output.prop]);\n                if (emitter) {\n                    emitter.subscribe({\n                        next: assignExpr ? function (v) { return ((setter_1))(_this.scope, v); } :\n                            function (v) { return getter_1(_this.scope, { '$event': v }); }\n                    });\n                }\n                else {\n                    throw new Error(\"Missing emitter '\" + output.prop + \"' on component '\" + getComponentName(this_2.componentFactory.componentType) + \"'!\");\n                }\n            }\n        };\n        var this_2 = this;\n        for (var /** @type {?} */ j = 0; j < outputs.length; j++) {\n            _loop_2(j);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.registerCleanup = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ destroyComponentRef = this.wrapCallback(function () { return _this.componentRef.destroy(); }); /** @type {?} */\n        ((this.element.on))('$destroy', function () {\n            _this.componentScope.$destroy();\n            _this.componentRef.injector.get(TestabilityRegistry)\n                .unregisterApplication(_this.componentRef.location.nativeElement);\n            destroyComponentRef();\n        });\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.getInjector = /**\n     * @return {?}\n     */\n    function () { return this.componentRef.injector; };\n    /**\n     * @param {?} prop\n     * @param {?} prevValue\n     * @param {?} currValue\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.updateInput = /**\n     * @param {?} prop\n     * @param {?} prevValue\n     * @param {?} currValue\n     * @return {?}\n     */\n    function (prop, prevValue, currValue) {\n        if (this.implementsOnChanges) {\n            this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n        }\n        this.inputChangeCount++;\n        this.component[prop] = currValue;\n    };\n    /**\n     * @return {?}\n     */\n    DowngradeComponentAdapter.prototype.groupProjectableNodes = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ngContentSelectors = this.componentFactory.ngContentSelectors;\n        return groupNodesBySelector(ngContentSelectors, /** @type {?} */ ((this.element.contents))());\n    };\n    return DowngradeComponentAdapter;\n}());\nexport { DowngradeComponentAdapter };\nfunction DowngradeComponentAdapter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.implementsOnChanges;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.inputChangeCount;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.inputChanges;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.componentScope;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.componentRef;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.component;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.changeDetector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.element;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.attrs;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.scope;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.ngModel;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.parentInjector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.$injector;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.$compile;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.$parse;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.componentFactory;\n    /** @type {?} */\n    DowngradeComponentAdapter.prototype.wrapCallback;\n}\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n * @param {?} ngContentSelectors\n * @param {?} nodes\n * @return {?}\n */\nexport function groupNodesBySelector(ngContentSelectors, nodes) {\n    var /** @type {?} */ projectableNodes = [];\n    var /** @type {?} */ wildcardNgContentIndex;\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = ngContentSelectors.length; i < ii; ++i) {\n        projectableNodes[i] = [];\n    }\n    for (var /** @type {?} */ j = 0, /** @type {?} */ jj = nodes.length; j < jj; ++j) {\n        var /** @type {?} */ node = nodes[j];\n        var /** @type {?} */ ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n        if (ngContentIndex != null) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\n/**\n * @param {?} element\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction findMatchingNgContentIndex(element, ngContentSelectors) {\n    var /** @type {?} */ ngContentIndices = [];\n    var /** @type {?} */ wildcardNgContentIndex = -1;\n    for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n        var /** @type {?} */ selector = ngContentSelectors[i];\n        if (selector === '*') {\n            wildcardNgContentIndex = i;\n        }\n        else {\n            if (matchesSelector(element, selector)) {\n                ngContentIndices.push(i);\n            }\n        }\n    }\n    ngContentIndices.sort();\n    if (wildcardNgContentIndex !== -1) {\n        ngContentIndices.push(wildcardNgContentIndex);\n    }\n    return ngContentIndices.length ? ngContentIndices[0] : null;\n}\nvar /** @type {?} */ _matches;\n/**\n * @param {?} el\n * @param {?} selector\n * @return {?}\n */\nfunction matchesSelector(el, selector) {\n    if (!_matches) {\n        var /** @type {?} */ elProto = /** @type {?} */ (Element.prototype);\n        _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n            elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n    }\n    return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n//# sourceMappingURL=downgrade_component_adapter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ComponentFactoryResolver, NgZone } from \"@angular/core\";\nimport { $COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, LAZY_MODULE_REF, REQUIRE_INJECTOR, REQUIRE_NG_MODEL } from \"./constants\";\nimport { DowngradeComponentAdapter } from \"./downgrade_component_adapter\";\nimport { controllerKey, getComponentName, isFunction } from \"./util\";\n/**\n * @record\n */\nfunction Thenable() { }\nfunction Thenable_tsickle_Closure_declarations() {\n    /** @type {?} */\n    Thenable.prototype.then;\n}\n/**\n * \\@whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an Angular component to be used from AngularJS.\n *\n * \\@howToUse\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * \\@description\n *\n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * The parameter contains information about the Component that is being downgraded:\n *\n * * `component: Type<any>`: The type of the Component that will be downgraded\n *\n * \\@experimental\n * @param {?} info\n * @return {?}\n */\nexport function downgradeComponent(info) {\n    var /** @type {?} */ directiveFactory = function ($compile, $injector, $parse) {\n        // When using `UpgradeModule`, we don't need to ensure callbacks to Angular APIs (e.g. change\n        // detection) are run inside the Angular zone, because `$digest()` will be run inside the zone\n        // (except if explicitly escaped, in which case we shouldn't force it back in).\n        // When using `downgradeModule()` though, we need to ensure such callbacks are run inside the\n        // Angular zone.\n        var /** @type {?} */ needsNgZone = false;\n        var /** @type {?} */ wrapCallback = function (cb) { return cb; };\n        var /** @type {?} */ ngZone;\n        return {\n            restrict: 'E',\n            terminal: true,\n            require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n            link: function (scope, element, attrs, required) {\n                // We might have to compile the contents asynchronously, because this might have been\n                // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n                // been compiled.\n                var /** @type {?} */ ngModel = required[1];\n                var /** @type {?} */ parentInjector = required[0];\n                var /** @type {?} */ ranAsync = false;\n                if (!parentInjector) {\n                    var /** @type {?} */ lazyModuleRef = /** @type {?} */ ($injector.get(LAZY_MODULE_REF));\n                    needsNgZone = lazyModuleRef.needsNgZone;\n                    parentInjector = lazyModuleRef.injector || /** @type {?} */ (lazyModuleRef.promise);\n                }\n                var /** @type {?} */ doDowngrade = function (injector) {\n                    var /** @type {?} */ componentFactoryResolver = injector.get(ComponentFactoryResolver);\n                    var /** @type {?} */ componentFactory = /** @type {?} */ ((componentFactoryResolver.resolveComponentFactory(info.component)));\n                    if (!componentFactory) {\n                        throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n                    }\n                    var /** @type {?} */ injectorPromise = new ParentInjectorPromise(element);\n                    var /** @type {?} */ facade = new DowngradeComponentAdapter(element, attrs, scope, ngModel, injector, $injector, $compile, $parse, componentFactory, wrapCallback);\n                    var /** @type {?} */ projectableNodes = facade.compileContents();\n                    facade.createComponent(projectableNodes);\n                    facade.setupInputs(needsNgZone, info.propagateDigest);\n                    facade.setupOutputs();\n                    facade.registerCleanup();\n                    injectorPromise.resolve(facade.getInjector());\n                    if (ranAsync) {\n                        // If this is run async, it is possible that it is not run inside a\n                        // digest and initial input values will not be detected.\n                        scope.$evalAsync(function () { });\n                    }\n                };\n                var /** @type {?} */ downgradeFn = !needsNgZone ? doDowngrade : function (injector) {\n                    if (!ngZone) {\n                        ngZone = injector.get(NgZone);\n                        wrapCallback = function (cb) {\n                            return function () {\n                                return NgZone.isInAngularZone() ? cb() : ngZone.run(cb);\n                            };\n                        };\n                    }\n                    wrapCallback(function () { return doDowngrade(injector); })();\n                };\n                if (isThenable(parentInjector)) {\n                    parentInjector.then(downgradeFn);\n                }\n                else {\n                    downgradeFn(parentInjector);\n                }\n                ranAsync = true;\n            }\n        };\n    };\n    // bracket-notation because of closure - see #14441\n    directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n    return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nvar /**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nParentInjectorPromise = /** @class */ (function () {\n    function ParentInjectorPromise(element) {\n        this.element = element;\n        this.injectorKey = controllerKey(INJECTOR_KEY);\n        this.callbacks = [];\n        /** @type {?} */ ((\n        // Store the promise on the element.\n        element.data))(this.injectorKey, this);\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ParentInjectorPromise.prototype.then = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (this.injector) {\n            callback(this.injector);\n        }\n        else {\n            this.callbacks.push(callback);\n        }\n    };\n    /**\n     * @param {?} injector\n     * @return {?}\n     */\n    ParentInjectorPromise.prototype.resolve = /**\n     * @param {?} injector\n     * @return {?}\n     */\n    function (injector) {\n        this.injector = injector; /** @type {?} */\n        ((\n        // Store the real injector on the element.\n        this.element.data))(this.injectorKey, injector);\n        // Release the element to prevent memory leaks.\n        this.element = /** @type {?} */ ((null));\n        // Run the queued callbacks.\n        this.callbacks.forEach(function (callback) { return callback(injector); });\n        this.callbacks.length = 0;\n    };\n    return ParentInjectorPromise;\n}());\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParentInjectorPromise.prototype.injector;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.injectorKey;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.callbacks;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.element;\n}\n/**\n * @template T\n * @param {?} obj\n * @return {?}\n */\nfunction isThenable(obj) {\n    return isFunction((/** @type {?} */ (obj)).then);\n}\n//# sourceMappingURL=downgrade_component.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { INJECTOR_KEY } from \"./constants\";\n/**\n * \\@whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allow an Angular service to be accessible from AngularJS.\n *\n * \\@howToUse\n *\n * First ensure that the service to be downgraded is provided in an {\\@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {\\@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app {\\@link NgModule}\n *\n * {\\@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {\\@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {\\@example upgrade/static/ts/module.ts region=\"example-app\"}\n *\n * \\@description\n *\n * Takes a `token` that identifies a service provided from Angular.\n *\n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n *\n * \\@experimental\n * @param {?} token\n * @return {?}\n */\nexport function downgradeInjectable(token) {\n    var /** @type {?} */ factory = function (i) { return i.get(token); };\n    (/** @type {?} */ (factory))['$inject'] = [INJECTOR_KEY];\n    return factory;\n}\n//# sourceMappingURL=downgrade_injectable.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as angular from \"./angular1\";\nimport { $COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE } from \"./constants\";\nimport { controllerKey, directiveNormalize, isFunction } from \"./util\";\n// Constants\nvar /** @type {?} */ REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n/**\n * @record\n */\nexport function IBindingDestination() { }\nfunction IBindingDestination_tsickle_Closure_declarations() {\n    /* TODO: handle strange member:\n    [key: string]: any;\n    */\n    /** @type {?|undefined} */\n    IBindingDestination.prototype.$onChanges;\n}\n/**\n * @record\n */\nexport function IControllerInstance() { }\nfunction IControllerInstance_tsickle_Closure_declarations() {\n    /** @type {?|undefined} */\n    IControllerInstance.prototype.$doCheck;\n    /** @type {?|undefined} */\n    IControllerInstance.prototype.$onDestroy;\n    /** @type {?|undefined} */\n    IControllerInstance.prototype.$onInit;\n    /** @type {?|undefined} */\n    IControllerInstance.prototype.$postLink;\n}\nvar UpgradeHelper = /** @class */ (function () {\n    function UpgradeHelper(injector, name, elementRef, directive) {\n        this.injector = injector;\n        this.name = name;\n        this.$injector = injector.get($INJECTOR);\n        this.$compile = this.$injector.get($COMPILE);\n        this.$controller = this.$injector.get($CONTROLLER);\n        this.element = elementRef.nativeElement;\n        this.$element = angular.element(this.element);\n        this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n    }\n    /**\n     * @param {?} $injector\n     * @param {?} name\n     * @return {?}\n     */\n    UpgradeHelper.getDirective = /**\n     * @param {?} $injector\n     * @param {?} name\n     * @return {?}\n     */\n    function ($injector, name) {\n        var /** @type {?} */ directives = $injector.get(name + 'Directive');\n        if (directives.length > 1) {\n            throw new Error(\"Only support single directive definition for: \" + name);\n        }\n        var /** @type {?} */ directive = directives[0];\n        // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n        // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n        if (directive.compile && !directive.link)\n            notSupported(name, 'compile');\n        if (directive.replace)\n            notSupported(name, 'replace');\n        if (directive.terminal)\n            notSupported(name, 'terminal');\n        return directive;\n    };\n    /**\n     * @param {?} $injector\n     * @param {?} directive\n     * @param {?=} fetchRemoteTemplate\n     * @return {?}\n     */\n    UpgradeHelper.getTemplate = /**\n     * @param {?} $injector\n     * @param {?} directive\n     * @param {?=} fetchRemoteTemplate\n     * @return {?}\n     */\n    function ($injector, directive, fetchRemoteTemplate) {\n        if (fetchRemoteTemplate === void 0) { fetchRemoteTemplate = false; }\n        if (directive.template !== undefined) {\n            return getOrCall(directive.template);\n        }\n        else if (directive.templateUrl) {\n            var /** @type {?} */ $templateCache_1 = /** @type {?} */ ($injector.get($TEMPLATE_CACHE));\n            var /** @type {?} */ url_1 = getOrCall(directive.templateUrl);\n            var /** @type {?} */ template = $templateCache_1.get(url_1);\n            if (template !== undefined) {\n                return template;\n            }\n            else if (!fetchRemoteTemplate) {\n                throw new Error('loading directive templates asynchronously is not supported');\n            }\n            return new Promise(function (resolve, reject) {\n                var /** @type {?} */ $httpBackend = /** @type {?} */ ($injector.get($HTTP_BACKEND));\n                $httpBackend('GET', url_1, null, function (status, response) {\n                    if (status === 200) {\n                        resolve($templateCache_1.put(url_1, response));\n                    }\n                    else {\n                        reject(\"GET component template from '\" + url_1 + \"' returned '\" + status + \": \" + response + \"'\");\n                    }\n                });\n            });\n        }\n        else {\n            throw new Error(\"Directive '\" + directive.name + \"' is not a component, it is missing template.\");\n        }\n    };\n    /**\n     * @param {?} controllerType\n     * @param {?} $scope\n     * @return {?}\n     */\n    UpgradeHelper.prototype.buildController = /**\n     * @param {?} controllerType\n     * @param {?} $scope\n     * @return {?}\n     */\n    function (controllerType, $scope) {\n        // TODO: Document that we do not pre-assign bindings on the controller instance.\n        // Quoted properties below so that this code can be optimized with Closure Compiler.\n        var /** @type {?} */ locals = { '$scope': $scope, '$element': this.$element };\n        var /** @type {?} */ controller = this.$controller(controllerType, locals, null, this.directive.controllerAs); /** @type {?} */\n        ((this.$element.data))(controllerKey(/** @type {?} */ ((this.directive.name))), controller);\n        return controller;\n    };\n    /**\n     * @param {?=} template\n     * @return {?}\n     */\n    UpgradeHelper.prototype.compileTemplate = /**\n     * @param {?=} template\n     * @return {?}\n     */\n    function (template) {\n        if (template === undefined) {\n            template = /** @type {?} */ (UpgradeHelper.getTemplate(this.$injector, this.directive));\n        }\n        return this.compileHtml(template);\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeHelper.prototype.prepareTransclusion = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ transclude = this.directive.transclude;\n        var /** @type {?} */ contentChildNodes = this.extractChildNodes();\n        var /** @type {?} */ $template = contentChildNodes;\n        var /** @type {?} */ attachChildrenFn = function (scope, cloneAttach) { return ((cloneAttach))($template, scope); };\n        if (transclude) {\n            var /** @type {?} */ slots_1 = Object.create(null);\n            if (typeof transclude === 'object') {\n                $template = [];\n                var /** @type {?} */ slotMap_1 = Object.create(null);\n                var /** @type {?} */ filledSlots_1 = Object.create(null);\n                // Parse the element selectors.\n                Object.keys(transclude).forEach(function (slotName) {\n                    var /** @type {?} */ selector = transclude[slotName];\n                    var /** @type {?} */ optional = selector.charAt(0) === '?';\n                    selector = optional ? selector.substring(1) : selector;\n                    slotMap_1[selector] = slotName;\n                    slots_1[slotName] = null; // `null`: Defined but not yet filled.\n                    filledSlots_1[slotName] = optional; // Consider optional slots as filled.\n                });\n                // Add the matching elements into their slot.\n                contentChildNodes.forEach(function (node) {\n                    var /** @type {?} */ slotName = slotMap_1[directiveNormalize(node.nodeName.toLowerCase())];\n                    if (slotName) {\n                        filledSlots_1[slotName] = true;\n                        slots_1[slotName] = slots_1[slotName] || [];\n                        slots_1[slotName].push(node);\n                    }\n                    else {\n                        $template.push(node);\n                    }\n                });\n                // Check for required slots that were not filled.\n                Object.keys(filledSlots_1).forEach(function (slotName) {\n                    if (!filledSlots_1[slotName]) {\n                        throw new Error(\"Required transclusion slot '\" + slotName + \"' on directive: \" + _this.name);\n                    }\n                });\n                Object.keys(slots_1).filter(function (slotName) { return slots_1[slotName]; }).forEach(function (slotName) {\n                    var /** @type {?} */ nodes = slots_1[slotName];\n                    slots_1[slotName] = function (scope, cloneAttach) { return ((cloneAttach))(nodes, scope); };\n                });\n            }\n            // Attach `$$slots` to default slot transclude fn.\n            attachChildrenFn.$$slots = slots_1;\n            // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n            // removes all text content after the first interpolation and updates it later, after\n            // evaluating the expressions. This would result in AngularJS failing to recognize text\n            // nodes that start with an interpolation as transcluded content and use the fallback\n            // content instead.\n            // To avoid this issue, we add a\n            // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n            // to empty text nodes (which can only be a result of Angular removing their initial content).\n            // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n            //       will still fail to be detected by AngularJS v1.6+\n            $template.forEach(function (node) {\n                if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n                    node.nodeValue = '\\u200C';\n                }\n            });\n        }\n        return attachChildrenFn;\n    };\n    /**\n     * @param {?} controllerInstance\n     * @return {?}\n     */\n    UpgradeHelper.prototype.resolveAndBindRequiredControllers = /**\n     * @param {?} controllerInstance\n     * @return {?}\n     */\n    function (controllerInstance) {\n        var /** @type {?} */ directiveRequire = this.getDirectiveRequire();\n        var /** @type {?} */ requiredControllers = this.resolveRequire(directiveRequire);\n        if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n            var /** @type {?} */ requiredControllersMap_1 = /** @type {?} */ (requiredControllers);\n            Object.keys(requiredControllersMap_1).forEach(function (key) {\n                controllerInstance[key] = requiredControllersMap_1[key];\n            });\n        }\n        return requiredControllers;\n    };\n    /**\n     * @param {?} html\n     * @return {?}\n     */\n    UpgradeHelper.prototype.compileHtml = /**\n     * @param {?} html\n     * @return {?}\n     */\n    function (html) {\n        this.element.innerHTML = html;\n        return this.$compile(this.element.childNodes);\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeHelper.prototype.extractChildNodes = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ childNode;\n        while (childNode = this.element.firstChild) {\n            this.element.removeChild(childNode);\n            childNodes.push(childNode);\n        }\n        return childNodes;\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeHelper.prototype.getDirectiveRequire = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ require = this.directive.require || /** @type {?} */ (((this.directive.controller && this.directive.name)));\n        if (isMap(require)) {\n            Object.keys(require).forEach(function (key) {\n                var /** @type {?} */ value = require[key];\n                var /** @type {?} */ match = /** @type {?} */ ((value.match(REQUIRE_PREFIX_RE)));\n                var /** @type {?} */ name = value.substring(match[0].length);\n                if (!name) {\n                    require[key] = match[0] + key;\n                }\n            });\n        }\n        return require;\n    };\n    /**\n     * @param {?} require\n     * @param {?=} controllerInstance\n     * @return {?}\n     */\n    UpgradeHelper.prototype.resolveRequire = /**\n     * @param {?} require\n     * @param {?=} controllerInstance\n     * @return {?}\n     */\n    function (require, controllerInstance) {\n        var _this = this;\n        if (!require) {\n            return null;\n        }\n        else if (Array.isArray(require)) {\n            return require.map(function (req) { return _this.resolveRequire(req); });\n        }\n        else if (typeof require === 'object') {\n            var /** @type {?} */ value_1 = {};\n            Object.keys(require).forEach(function (key) { return value_1[key] = /** @type {?} */ ((_this.resolveRequire(require[key]))); });\n            return value_1;\n        }\n        else if (typeof require === 'string') {\n            var /** @type {?} */ match = /** @type {?} */ ((require.match(REQUIRE_PREFIX_RE)));\n            var /** @type {?} */ inheritType = match[1] || match[3];\n            var /** @type {?} */ name_1 = require.substring(match[0].length);\n            var /** @type {?} */ isOptional = !!match[2];\n            var /** @type {?} */ searchParents = !!inheritType;\n            var /** @type {?} */ startOnParent = inheritType === '^^';\n            var /** @type {?} */ ctrlKey = controllerKey(name_1);\n            var /** @type {?} */ elem = startOnParent ? /** @type {?} */ ((this.$element.parent))() : this.$element;\n            var /** @type {?} */ value = searchParents ? /** @type {?} */ ((elem.inheritedData))(ctrlKey) : /** @type {?} */ ((elem.data))(ctrlKey);\n            if (!value && !isOptional) {\n                throw new Error(\"Unable to find required '\" + require + \"' in upgraded directive '\" + this.name + \"'.\");\n            }\n            return value;\n        }\n        else {\n            throw new Error(\"Unrecognized 'require' syntax on upgraded directive '\" + this.name + \"': \" + require);\n        }\n    };\n    return UpgradeHelper;\n}());\nexport { UpgradeHelper };\nfunction UpgradeHelper_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpgradeHelper.prototype.$injector;\n    /** @type {?} */\n    UpgradeHelper.prototype.element;\n    /** @type {?} */\n    UpgradeHelper.prototype.$element;\n    /** @type {?} */\n    UpgradeHelper.prototype.directive;\n    /** @type {?} */\n    UpgradeHelper.prototype.$compile;\n    /** @type {?} */\n    UpgradeHelper.prototype.$controller;\n    /** @type {?} */\n    UpgradeHelper.prototype.injector;\n    /** @type {?} */\n    UpgradeHelper.prototype.name;\n}\n/**\n * @template T\n * @param {?} property\n * @return {?}\n */\nfunction getOrCall(property) {\n    return isFunction(property) ? property() : property;\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction isMap(value) {\n    return value && !Array.isArray(value) && typeof value === 'object';\n}\n/**\n * @param {?} name\n * @param {?} feature\n * @return {?}\n */\nfunction notSupported(name, feature) {\n    throw new Error(\"Upgraded directive '\" + name + \"' contains unsupported feature: '\" + feature + \"'.\");\n}\n//# sourceMappingURL=upgrade_helper.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Directive, ElementRef, EventEmitter, Inject, Injector } from \"@angular/core\";\nimport * as angular from \"../common/angular1\";\nimport { $SCOPE } from \"../common/constants\";\nimport { UpgradeHelper } from \"../common/upgrade_helper\";\nimport { isFunction, strictEquals } from \"../common/util\";\nvar /** @type {?} */ CAMEL_CASE = /([A-Z])/g;\nvar /** @type {?} */ INITIAL_VALUE = {\n    __UNINITIALIZED__: true\n};\nvar /** @type {?} */ NOT_SUPPORTED = 'NOT_SUPPORTED';\nvar UpgradeNg1ComponentAdapterBuilder = /** @class */ (function () {\n    function UpgradeNg1ComponentAdapterBuilder(name) {\n        this.name = name;\n        this.inputs = [];\n        this.inputsRename = [];\n        this.outputs = [];\n        this.outputsRename = [];\n        this.propertyOutputs = [];\n        this.checkProperties = [];\n        this.propertyMap = {};\n        this.directive = null;\n        var /** @type {?} */ selector = name.replace(CAMEL_CASE, function (all, next) { return '-' + next.toLowerCase(); });\n        var /** @type {?} */ self = this;\n        // Note: There is a bug in TS 2.4 that prevents us from\n        // inlining this into @Directive\n        // TODO(tbosch): find or file a bug against TypeScript for this.\n        var /** @type {?} */ directive = { selector: selector, inputs: this.inputsRename, outputs: this.outputsRename };\n        var MyClass = /** @class */ (function () {\n            function MyClass(scope, injector, elementRef) {\n                var /** @type {?} */ helper = new UpgradeHelper(injector, name, elementRef, this.directive);\n                return /** @type {?} */ (new UpgradeNg1ComponentAdapter(helper, scope, self.template, self.inputs, self.outputs, self.propertyOutputs, self.checkProperties, self.propertyMap));\n            }\n            /**\n             * @return {?}\n             */\n            MyClass.prototype.ngOnInit = /**\n             * @return {?}\n             */\n            function () {\n                /* needs to be here for ng2 to properly detect it */\n            };\n            /**\n             * @return {?}\n             */\n            MyClass.prototype.ngOnChanges = /**\n             * @return {?}\n             */\n            function () {\n                /* needs to be here for ng2 to properly detect it */\n            };\n            /**\n             * @return {?}\n             */\n            MyClass.prototype.ngDoCheck = /**\n             * @return {?}\n             */\n            function () {\n                /* needs to be here for ng2 to properly detect it */\n            };\n            /**\n             * @return {?}\n             */\n            MyClass.prototype.ngOnDestroy = /**\n             * @return {?}\n             */\n            function () {\n                /* needs to be here for ng2 to properly detect it */\n            };\n            MyClass.decorators = [\n                { type: Directive, args: [directive,] },\n            ];\n            /** @nocollapse */\n            MyClass.ctorParameters = function () { return [\n                { type: undefined, decorators: [{ type: Inject, args: [$SCOPE,] },] },\n                { type: Injector, },\n                { type: ElementRef, },\n            ]; };\n            return MyClass;\n        }());\n        function MyClass_tsickle_Closure_declarations() {\n            /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n            MyClass.decorators;\n            /**\n             * @nocollapse\n             * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n             */\n            MyClass.ctorParameters;\n            /** @type {?} */\n            MyClass.prototype.directive;\n        }\n        this.type = MyClass;\n    }\n    /**\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapterBuilder.prototype.extractBindings = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ btcIsObject = typeof /** @type {?} */ ((this.directive)).bindToController === 'object';\n        if (btcIsObject && Object.keys(/** @type {?} */ ((/** @type {?} */ ((this.directive)).scope))).length) {\n            throw new Error(\"Binding definitions on scope and controller at the same time are not supported.\");\n        }\n        var /** @type {?} */ context = (btcIsObject) ? /** @type {?} */ ((this.directive)).bindToController : /** @type {?} */ ((this.directive)).scope;\n        if (typeof context == 'object') {\n            Object.keys(context).forEach(function (propName) {\n                var /** @type {?} */ definition = context[propName];\n                var /** @type {?} */ bindingType = definition.charAt(0);\n                var /** @type {?} */ bindingOptions = definition.charAt(1);\n                var /** @type {?} */ attrName = definition.substring(bindingOptions === '?' ? 2 : 1) || propName;\n                // QUESTION: What about `=*`? Ignore? Throw? Support?\n                var /** @type {?} */ inputName = \"input_\" + attrName;\n                var /** @type {?} */ inputNameRename = inputName + \": \" + attrName;\n                var /** @type {?} */ outputName = \"output_\" + attrName;\n                var /** @type {?} */ outputNameRename = outputName + \": \" + attrName;\n                var /** @type {?} */ outputNameRenameChange = outputNameRename + \"Change\";\n                switch (bindingType) {\n                    case '@':\n                    case '<':\n                        _this.inputs.push(inputName);\n                        _this.inputsRename.push(inputNameRename);\n                        _this.propertyMap[inputName] = propName;\n                        break;\n                    case '=':\n                        _this.inputs.push(inputName);\n                        _this.inputsRename.push(inputNameRename);\n                        _this.propertyMap[inputName] = propName;\n                        _this.outputs.push(outputName);\n                        _this.outputsRename.push(outputNameRenameChange);\n                        _this.propertyMap[outputName] = propName;\n                        _this.checkProperties.push(propName);\n                        _this.propertyOutputs.push(outputName);\n                        break;\n                    case '&':\n                        _this.outputs.push(outputName);\n                        _this.outputsRename.push(outputNameRename);\n                        _this.propertyMap[outputName] = propName;\n                        break;\n                    default:\n                        var /** @type {?} */ json = JSON.stringify(context);\n                        throw new Error(\"Unexpected mapping '\" + bindingType + \"' in '\" + json + \"' in '\" + _this.name + \"' directive.\");\n                }\n            });\n        }\n    };\n    /**\n     * Upgrade ng1 components into Angular.\n     */\n    /**\n     * Upgrade ng1 components into Angular.\n     * @param {?} exportedComponents\n     * @param {?} $injector\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapterBuilder.resolve = /**\n     * Upgrade ng1 components into Angular.\n     * @param {?} exportedComponents\n     * @param {?} $injector\n     * @return {?}\n     */\n    function (exportedComponents, $injector) {\n        var /** @type {?} */ promises = Object.keys(exportedComponents).map(function (name) {\n            var /** @type {?} */ exportedComponent = exportedComponents[name];\n            exportedComponent.directive = UpgradeHelper.getDirective($injector, name);\n            exportedComponent.extractBindings();\n            return Promise\n                .resolve(UpgradeHelper.getTemplate($injector, exportedComponent.directive, true))\n                .then(function (template) { return exportedComponent.template = template; });\n        });\n        return Promise.all(promises);\n    };\n    return UpgradeNg1ComponentAdapterBuilder;\n}());\nexport { UpgradeNg1ComponentAdapterBuilder };\nfunction UpgradeNg1ComponentAdapterBuilder_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.type;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.inputs;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.inputsRename;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.outputs;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.outputsRename;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.propertyOutputs;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.checkProperties;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.propertyMap;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.directive;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.template;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapterBuilder.prototype.name;\n}\nvar UpgradeNg1ComponentAdapter = /** @class */ (function () {\n    function UpgradeNg1ComponentAdapter(helper, scope, template, inputs, outputs, propOuts, checkProperties, propertyMap) {\n        this.helper = helper;\n        this.template = template;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.propOuts = propOuts;\n        this.checkProperties = checkProperties;\n        this.propertyMap = propertyMap;\n        this.controllerInstance = null;\n        this.destinationObj = null;\n        this.checkLastValues = [];\n        this.$element = null;\n        this.directive = helper.directive;\n        this.element = helper.element;\n        this.$element = helper.$element;\n        this.componentScope = scope.$new(!!this.directive.scope);\n        var /** @type {?} */ controllerType = this.directive.controller;\n        if (this.directive.bindToController && controllerType) {\n            this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n            this.destinationObj = this.controllerInstance;\n        }\n        else {\n            this.destinationObj = this.componentScope;\n        }\n        for (var /** @type {?} */ i = 0; i < inputs.length; i++) {\n            (/** @type {?} */ (this))[inputs[i]] = null;\n        }\n        for (var /** @type {?} */ j = 0; j < outputs.length; j++) {\n            var /** @type {?} */ emitter = (/** @type {?} */ (this))[outputs[j]] = new EventEmitter();\n            this.setComponentProperty(outputs[j], (function (emitter) { return function (value) { return emitter.emit(value); }; })(emitter));\n        }\n        for (var /** @type {?} */ k = 0; k < propOuts.length; k++) {\n            this.checkLastValues.push(INITIAL_VALUE);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapter.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        // Collect contents, insert and compile template\n        var /** @type {?} */ attachChildNodes = this.helper.prepareTransclusion();\n        var /** @type {?} */ linkFn = this.helper.compileTemplate(this.template);\n        // Instantiate controller (if not already done so)\n        var /** @type {?} */ controllerType = this.directive.controller;\n        var /** @type {?} */ bindToController = this.directive.bindToController;\n        if (controllerType && !bindToController) {\n            this.controllerInstance = this.helper.buildController(controllerType, this.componentScope);\n        }\n        // Require other controllers\n        var /** @type {?} */ requiredControllers = this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n        // Hook: $onInit\n        if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n            this.controllerInstance.$onInit();\n        }\n        // Linking\n        var /** @type {?} */ link = this.directive.link;\n        var /** @type {?} */ preLink = (typeof link == 'object') && (/** @type {?} */ (link)).pre;\n        var /** @type {?} */ postLink = (typeof link == 'object') ? (/** @type {?} */ (link)).post : link;\n        var /** @type {?} */ attrs = NOT_SUPPORTED;\n        var /** @type {?} */ transcludeFn = NOT_SUPPORTED;\n        if (preLink) {\n            preLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n        }\n        linkFn(this.componentScope, /** @type {?} */ ((null)), { parentBoundTranscludeFn: attachChildNodes });\n        if (postLink) {\n            postLink(this.componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n        }\n        // Hook: $postLink\n        if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n            this.controllerInstance.$postLink();\n        }\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapter.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) {\n        var _this = this;\n        var /** @type {?} */ ng1Changes = {};\n        Object.keys(changes).forEach(function (name) {\n            var /** @type {?} */ change = changes[name];\n            _this.setComponentProperty(name, change.currentValue);\n            ng1Changes[_this.propertyMap[name]] = change;\n        });\n        if (isFunction(/** @type {?} */ ((this.destinationObj)).$onChanges)) {\n            /** @type {?} */ ((/** @type {?} */ ((this.destinationObj)).$onChanges))(ng1Changes);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapter.prototype.ngDoCheck = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ destinationObj = this.destinationObj;\n        var /** @type {?} */ lastValues = this.checkLastValues;\n        var /** @type {?} */ checkProperties = this.checkProperties;\n        var /** @type {?} */ propOuts = this.propOuts;\n        checkProperties.forEach(function (propName, i) {\n            var /** @type {?} */ value = /** @type {?} */ ((destinationObj))[propName];\n            var /** @type {?} */ last = lastValues[i];\n            if (!strictEquals(last, value)) {\n                var /** @type {?} */ eventEmitter = (/** @type {?} */ (_this))[propOuts[i]];\n                eventEmitter.emit(lastValues[i] = value);\n            }\n        });\n        if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n            this.controllerInstance.$doCheck();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapter.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n            this.controllerInstance.$onDestroy();\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    UpgradeNg1ComponentAdapter.prototype.setComponentProperty = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        /** @type {?} */ ((this.destinationObj))[this.propertyMap[name]] = value;\n    };\n    return UpgradeNg1ComponentAdapter;\n}());\nfunction UpgradeNg1ComponentAdapter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.controllerInstance;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.destinationObj;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.checkLastValues;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.directive;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.element;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.$element;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.componentScope;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.helper;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.template;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.inputs;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.outputs;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.propOuts;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.checkProperties;\n    /** @type {?} */\n    UpgradeNg1ComponentAdapter.prototype.propertyMap;\n}\n//# sourceMappingURL=upgrade_ng1_adapter.js.map","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Compiler, Injector, NgModule, NgZone, Testability } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport * as angular from \"../common/angular1\";\nimport { $$TESTABILITY, $COMPILE, $INJECTOR, $ROOT_SCOPE, COMPILER_KEY, INJECTOR_KEY, LAZY_MODULE_REF, NG_ZONE_KEY } from \"../common/constants\";\nimport { downgradeComponent } from \"../common/downgrade_component\";\nimport { downgradeInjectable } from \"../common/downgrade_injectable\";\nimport { Deferred, controllerKey, onError } from \"../common/util\";\nimport { UpgradeNg1ComponentAdapterBuilder } from \"./upgrade_ng1_adapter\";\nvar /** @type {?} */ upgradeCount = 0;\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n *\n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n *\n * ## Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n *\n * ### Example\n *\n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n *\n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n *\n *\n * \\@Component({\n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n *\n * \\@NgModule({\n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n *\n *\n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n *\n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n *\n * ```\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](guide/aot-compiler).\n */\nvar /**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n *\n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n *\n * ## Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n *\n * ### Example\n *\n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n *\n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n *\n *\n * \\@Component({\n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n *\n * \\@NgModule({\n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n *\n *\n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n *\n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n *\n * ```\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](guide/aot-compiler).\n */\nUpgradeAdapter = /** @class */ (function () {\n    function UpgradeAdapter(ng2AppModule, compilerOptions) {\n        this.ng2AppModule = ng2AppModule;\n        this.compilerOptions = compilerOptions;\n        this.idPrefix = \"NG2_UPGRADE_\" + upgradeCount++ + \"_\";\n        this.downgradedComponents = [];\n        /**\n         * An internal map of ng1 components which need to up upgraded to ng2.\n         *\n         * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n         * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n         *\n         * \\@internal\n         */\n        this.ng1ComponentsToBeUpgraded = {};\n        this.upgradedProviders = [];\n        this.moduleRef = null;\n        if (!ng2AppModule) {\n            throw new Error('UpgradeAdapter cannot be instantiated without an NgModule of the Angular app.');\n        }\n    }\n    /**\n     * Allows Angular Component to be used from AngularJS.\n     *\n     * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n     * Angular Component. The adapter will bootstrap Angular component from within the\n     * AngularJS template.\n     *\n     * ## Mental Model\n     *\n     * 1. The component is instantiated by being listed in AngularJS template. This means that the\n     *    host element is controlled by AngularJS, but the component's view will be controlled by\n     *    Angular.\n     * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n     *    syntax. This has to be done, this way because we must follow Angular components do not\n     *    declare how the attributes should be interpreted.\n     * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n     *    by way of the `ControlValueAccessor` interface from @angular/forms. Only components that\n     *    implement this interface are eligible.\n     *\n     * ## Supported Features\n     *\n     * - Bindings:\n     *   - Attribute: `<comp name=\"World\">`\n     *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n     *   - Expression:  `<comp [name]=\"username\">`\n     *   - Event:  `<comp (close)=\"doSomething()\">`\n     *   - ng-model: `<comp ng-model=\"name\">`\n     * - Content projection: yes\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n     * const module = angular.module('myExample', []);\n     * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n     *\n     * @Component({\n     *   selector: 'greet',\n     *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n     * })\n     * class Greeter {\n     *   @Input() salutation: string;\n     *   @Input() name: string;\n     * }\n     *\n     * @NgModule({\n     *   declarations: [Greeter],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML =\n     *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n     * });\n     * ```\n     */\n    /**\n     * Allows Angular Component to be used from AngularJS.\n     *\n     * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n     * Angular Component. The adapter will bootstrap Angular component from within the\n     * AngularJS template.\n     *\n     * ## Mental Model\n     *\n     * 1. The component is instantiated by being listed in AngularJS template. This means that the\n     *    host element is controlled by AngularJS, but the component's view will be controlled by\n     *    Angular.\n     * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n     *    syntax. This has to be done, this way because we must follow Angular components do not\n     *    declare how the attributes should be interpreted.\n     * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n     *    by way of the `ControlValueAccessor` interface from \\@angular/forms. Only components that\n     *    implement this interface are eligible.\n     *\n     * ## Supported Features\n     *\n     * - Bindings:\n     *   - Attribute: `<comp name=\"World\">`\n     *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n     *   - Expression:  `<comp [name]=\"username\">`\n     *   - Event:  `<comp (close)=\"doSomething()\">`\n     *   - ng-model: `<comp ng-model=\"name\">`\n     * - Content projection: yes\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n     * const module = angular.module('myExample', []);\n     * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n     *\n     * \\@Component({\n     *   selector: 'greet',\n     *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n     * })\n     * class Greeter {\n     *   \\@Input() salutation: string;\n     *   \\@Input() name: string;\n     * }\n     *\n     * \\@NgModule({\n     *   declarations: [Greeter],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML =\n     *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n     * });\n     * ```\n     * @param {?} component\n     * @return {?}\n     */\n    UpgradeAdapter.prototype.downgradeNg2Component = /**\n     * Allows Angular Component to be used from AngularJS.\n     *\n     * Use `downgradeNg2Component` to create an AngularJS Directive Definition Factory from\n     * Angular Component. The adapter will bootstrap Angular component from within the\n     * AngularJS template.\n     *\n     * ## Mental Model\n     *\n     * 1. The component is instantiated by being listed in AngularJS template. This means that the\n     *    host element is controlled by AngularJS, but the component's view will be controlled by\n     *    Angular.\n     * 2. Even thought the component is instantiated in AngularJS, it will be using Angular\n     *    syntax. This has to be done, this way because we must follow Angular components do not\n     *    declare how the attributes should be interpreted.\n     * 3. `ng-model` is controlled by AngularJS and communicates with the downgraded Angular component\n     *    by way of the `ControlValueAccessor` interface from \\@angular/forms. Only components that\n     *    implement this interface are eligible.\n     *\n     * ## Supported Features\n     *\n     * - Bindings:\n     *   - Attribute: `<comp name=\"World\">`\n     *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n     *   - Expression:  `<comp [name]=\"username\">`\n     *   - Event:  `<comp (close)=\"doSomething()\">`\n     *   - ng-model: `<comp ng-model=\"name\">`\n     * - Content projection: yes\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n     * const module = angular.module('myExample', []);\n     * module.directive('greet', adapter.downgradeNg2Component(Greeter));\n     *\n     * \\@Component({\n     *   selector: 'greet',\n     *   template: '{{salutation}} {{name}}! - <ng-content></ng-content>'\n     * })\n     * class Greeter {\n     *   \\@Input() salutation: string;\n     *   \\@Input() name: string;\n     * }\n     *\n     * \\@NgModule({\n     *   declarations: [Greeter],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML =\n     *   'ng1 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\"ng1 template: Hello world! - text\");\n     * });\n     * ```\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        this.downgradedComponents.push(component);\n        return downgradeComponent({ component: component });\n    };\n    /**\n     * Allows AngularJS Component to be used from Angular.\n     *\n     * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n     * directive. The adapter will bootstrap AngularJS component from within the Angular\n     * template.\n     *\n     * ## Mental Model\n     *\n     * 1. The component is instantiated by being listed in Angular template. This means that the\n     *    host element is controlled by Angular, but the component's view will be controlled by\n     *    AngularJS.\n     *\n     * ## Supported Features\n     *\n     * - Bindings:\n     *   - Attribute: `<comp name=\"World\">`\n     *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n     *   - Expression:  `<comp [name]=\"username\">`\n     *   - Event:  `<comp (close)=\"doSomething()\">`\n     * - Transclusion: yes\n     * - Only some of the features of\n     *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n     *   supported:\n     *   - `compile`: not supported because the host element is owned by Angular, which does\n     *     not allow modifying DOM structure during compilation.\n     *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n     *   - `controllerAs`: supported.\n     *   - `bindToController`: supported.\n     *   - `link`: supported. (NOTE: only pre-link function is supported.)\n     *   - `name`: supported.\n     *   - `priority`: ignored.\n     *   - `replace`: not supported.\n     *   - `require`: supported.\n     *   - `restrict`: must be set to 'E'.\n     *   - `scope`: supported.\n     *   - `template`: supported.\n     *   - `templateUrl`: supported.\n     *   - `terminal`: ignored.\n     *   - `transclude`: supported.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n     * const module = angular.module('myExample', []);\n     *\n     * module.directive('greet', function() {\n     *   return {\n     *     scope: {salutation: '=', name: '=' },\n     *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n     *   };\n     * });\n     *\n     * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n     *\n     * @Component({\n     *   selector: 'ng2',\n     *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n     * })\n     * class Ng2Component {\n     * }\n     *\n     * @NgModule({\n     *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML = '<ng2></ng2>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n     * });\n     * ```\n     */\n    /**\n     * Allows AngularJS Component to be used from Angular.\n     *\n     * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n     * directive. The adapter will bootstrap AngularJS component from within the Angular\n     * template.\n     *\n     * ## Mental Model\n     *\n     * 1. The component is instantiated by being listed in Angular template. This means that the\n     *    host element is controlled by Angular, but the component's view will be controlled by\n     *    AngularJS.\n     *\n     * ## Supported Features\n     *\n     * - Bindings:\n     *   - Attribute: `<comp name=\"World\">`\n     *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n     *   - Expression:  `<comp [name]=\"username\">`\n     *   - Event:  `<comp (close)=\"doSomething()\">`\n     * - Transclusion: yes\n     * - Only some of the features of\n     *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n     *   supported:\n     *   - `compile`: not supported because the host element is owned by Angular, which does\n     *     not allow modifying DOM structure during compilation.\n     *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n     *   - `controllerAs`: supported.\n     *   - `bindToController`: supported.\n     *   - `link`: supported. (NOTE: only pre-link function is supported.)\n     *   - `name`: supported.\n     *   - `priority`: ignored.\n     *   - `replace`: not supported.\n     *   - `require`: supported.\n     *   - `restrict`: must be set to 'E'.\n     *   - `scope`: supported.\n     *   - `template`: supported.\n     *   - `templateUrl`: supported.\n     *   - `terminal`: ignored.\n     *   - `transclude`: supported.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n     * const module = angular.module('myExample', []);\n     *\n     * module.directive('greet', function() {\n     *   return {\n     *     scope: {salutation: '=', name: '=' },\n     *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n     *   };\n     * });\n     *\n     * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n     *\n     * \\@Component({\n     *   selector: 'ng2',\n     *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n     * })\n     * class Ng2Component {\n     * }\n     *\n     * \\@NgModule({\n     *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML = '<ng2></ng2>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n     * });\n     * ```\n     * @param {?} name\n     * @return {?}\n     */\n    UpgradeAdapter.prototype.upgradeNg1Component = /**\n     * Allows AngularJS Component to be used from Angular.\n     *\n     * Use `upgradeNg1Component` to create an Angular component from AngularJS Component\n     * directive. The adapter will bootstrap AngularJS component from within the Angular\n     * template.\n     *\n     * ## Mental Model\n     *\n     * 1. The component is instantiated by being listed in Angular template. This means that the\n     *    host element is controlled by Angular, but the component's view will be controlled by\n     *    AngularJS.\n     *\n     * ## Supported Features\n     *\n     * - Bindings:\n     *   - Attribute: `<comp name=\"World\">`\n     *   - Interpolation:  `<comp greeting=\"Hello {{name}}!\">`\n     *   - Expression:  `<comp [name]=\"username\">`\n     *   - Event:  `<comp (close)=\"doSomething()\">`\n     * - Transclusion: yes\n     * - Only some of the features of\n     *   [Directive Definition Object](https://docs.angularjs.org/api/ng/service/$compile) are\n     *   supported:\n     *   - `compile`: not supported because the host element is owned by Angular, which does\n     *     not allow modifying DOM structure during compilation.\n     *   - `controller`: supported. (NOTE: injection of `$attrs` and `$transclude` is not supported.)\n     *   - `controllerAs`: supported.\n     *   - `bindToController`: supported.\n     *   - `link`: supported. (NOTE: only pre-link function is supported.)\n     *   - `name`: supported.\n     *   - `priority`: ignored.\n     *   - `replace`: not supported.\n     *   - `require`: supported.\n     *   - `restrict`: must be set to 'E'.\n     *   - `scope`: supported.\n     *   - `template`: supported.\n     *   - `templateUrl`: supported.\n     *   - `terminal`: ignored.\n     *   - `transclude`: supported.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module));\n     * const module = angular.module('myExample', []);\n     *\n     * module.directive('greet', function() {\n     *   return {\n     *     scope: {salutation: '=', name: '=' },\n     *     template: '{{salutation}} {{name}}! - <span ng-transclude></span>'\n     *   };\n     * });\n     *\n     * module.directive('ng2', adapter.downgradeNg2Component(Ng2Component));\n     *\n     * \\@Component({\n     *   selector: 'ng2',\n     *   template: 'ng2 template: <greet salutation=\"Hello\" [name]=\"world\">text</greet>'\n     * })\n     * class Ng2Component {\n     * }\n     *\n     * \\@NgModule({\n     *   declarations: [Ng2Component, adapter.upgradeNg1Component('greet')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML = '<ng2></ng2>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\"ng2 template: Hello world! - text\");\n     * });\n     * ```\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if ((/** @type {?} */ (this.ng1ComponentsToBeUpgraded)).hasOwnProperty(name)) {\n            return this.ng1ComponentsToBeUpgraded[name].type;\n        }\n        else {\n            return (this.ng1ComponentsToBeUpgraded[name] = new UpgradeNg1ComponentAdapterBuilder(name))\n                .type;\n        }\n    };\n    /**\n     * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n     * Use this instead of `angular.mock.module()` to load the upgrade module into\n     * the AngularJS testing injector.\n     *\n     * ### Example\n     *\n     * ```\n     * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n     *\n     * // configure the adapter with upgrade/downgrade components and services\n     * upgradeAdapter.downgradeNg2Component(MyComponent);\n     *\n     * let upgradeAdapterRef: UpgradeAdapterRef;\n     * let $compile, $rootScope;\n     *\n     * // We must register the adapter before any calls to `inject()`\n     * beforeEach(() => {\n     *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n     * });\n     *\n     * beforeEach(inject((_$compile_, _$rootScope_) => {\n     *   $compile = _$compile_;\n     *   $rootScope = _$rootScope_;\n     * }));\n     *\n     * it(\"says hello\", (done) => {\n     *   upgradeAdapterRef.ready(() => {\n     *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n     *     $rootScope.$apply();\n     *     expect(element.html()).toContain(\"Hello World\");\n     *     done();\n     *   })\n     * });\n     *\n     * ```\n     *\n     * @param modules any AngularJS modules that the upgrade module should depend upon\n     * @returns an {@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n     * run assertions once the Angular components are ready to test through AngularJS.\n     */\n    /**\n     * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n     * Use this instead of `angular.mock.module()` to load the upgrade module into\n     * the AngularJS testing injector.\n     *\n     * ### Example\n     *\n     * ```\n     * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n     *\n     * // configure the adapter with upgrade/downgrade components and services\n     * upgradeAdapter.downgradeNg2Component(MyComponent);\n     *\n     * let upgradeAdapterRef: UpgradeAdapterRef;\n     * let $compile, $rootScope;\n     *\n     * // We must register the adapter before any calls to `inject()`\n     * beforeEach(() => {\n     *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n     * });\n     *\n     * beforeEach(inject((_$compile_, _$rootScope_) => {\n     *   $compile = _$compile_;\n     *   $rootScope = _$rootScope_;\n     * }));\n     *\n     * it(\"says hello\", (done) => {\n     *   upgradeAdapterRef.ready(() => {\n     *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n     *     $rootScope.$apply();\n     *     expect(element.html()).toContain(\"Hello World\");\n     *     done();\n     *   })\n     * });\n     *\n     * ```\n     *\n     * @param {?=} modules any AngularJS modules that the upgrade module should depend upon\n     * @return {?} an {\\@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n     * run assertions once the Angular components are ready to test through AngularJS.\n     */\n    UpgradeAdapter.prototype.registerForNg1Tests = /**\n     * Registers the adapter's AngularJS upgrade module for unit testing in AngularJS.\n     * Use this instead of `angular.mock.module()` to load the upgrade module into\n     * the AngularJS testing injector.\n     *\n     * ### Example\n     *\n     * ```\n     * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n     *\n     * // configure the adapter with upgrade/downgrade components and services\n     * upgradeAdapter.downgradeNg2Component(MyComponent);\n     *\n     * let upgradeAdapterRef: UpgradeAdapterRef;\n     * let $compile, $rootScope;\n     *\n     * // We must register the adapter before any calls to `inject()`\n     * beforeEach(() => {\n     *   upgradeAdapterRef = upgradeAdapter.registerForNg1Tests(['heroApp']);\n     * });\n     *\n     * beforeEach(inject((_$compile_, _$rootScope_) => {\n     *   $compile = _$compile_;\n     *   $rootScope = _$rootScope_;\n     * }));\n     *\n     * it(\"says hello\", (done) => {\n     *   upgradeAdapterRef.ready(() => {\n     *     const element = $compile(\"<my-component></my-component>\")($rootScope);\n     *     $rootScope.$apply();\n     *     expect(element.html()).toContain(\"Hello World\");\n     *     done();\n     *   })\n     * });\n     *\n     * ```\n     *\n     * @param {?=} modules any AngularJS modules that the upgrade module should depend upon\n     * @return {?} an {\\@link UpgradeAdapterRef}, which lets you register a `ready()` callback to\n     * run assertions once the Angular components are ready to test through AngularJS.\n     */\n    function (modules) {\n        var _this = this;\n        var /** @type {?} */ windowNgMock = (/** @type {?} */ (window))['angular'].mock;\n        if (!windowNgMock || !windowNgMock.module) {\n            throw new Error('Failed to find \\'angular.mock.module\\'.');\n        }\n        this.declareNg1Module(modules);\n        windowNgMock.module(this.ng1Module.name);\n        var /** @type {?} */ upgrade = new UpgradeAdapterRef();\n        this.ng2BootstrapDeferred.promise.then(function (ng1Injector) { (/** @type {?} */ (upgrade))._bootstrapDone(_this.moduleRef, ng1Injector); }, onError);\n        return upgrade;\n    };\n    /**\n     * Bootstrap a hybrid AngularJS / Angular application.\n     *\n     * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n     * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n     * AngularJS, this bootstrap is asynchronous.\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     * const module = angular.module('myExample', []);\n     * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n     *\n     * module.directive('ng1', function() {\n     *   return {\n     *      scope: { title: '=' },\n     *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n     *   };\n     * });\n     *\n     *\n     * @Component({\n     *   selector: 'ng2',\n     *   inputs: ['name'],\n     *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n     * })\n     * class Ng2 {\n     * }\n     *\n     * @NgModule({\n     *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\n     *       \"ng2[ng1[Hello World!](transclude)](project)\");\n     * });\n     * ```\n     */\n    /**\n     * Bootstrap a hybrid AngularJS / Angular application.\n     *\n     * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n     * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n     * AngularJS, this bootstrap is asynchronous.\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     * const module = angular.module('myExample', []);\n     * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n     *\n     * module.directive('ng1', function() {\n     *   return {\n     *      scope: { title: '=' },\n     *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n     *   };\n     * });\n     *\n     *\n     * \\@Component({\n     *   selector: 'ng2',\n     *   inputs: ['name'],\n     *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n     * })\n     * class Ng2 {\n     * }\n     *\n     * \\@NgModule({\n     *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\n     *       \"ng2[ng1[Hello World!](transclude)](project)\");\n     * });\n     * ```\n     * @param {?} element\n     * @param {?=} modules\n     * @param {?=} config\n     * @return {?}\n     */\n    UpgradeAdapter.prototype.bootstrap = /**\n     * Bootstrap a hybrid AngularJS / Angular application.\n     *\n     * This `bootstrap` method is a direct replacement (takes same arguments) for AngularJS\n     * [`bootstrap`](https://docs.angularjs.org/api/ng/function/angular.bootstrap) method. Unlike\n     * AngularJS, this bootstrap is asynchronous.\n     *\n     * ### Example\n     *\n     * ```\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     * const module = angular.module('myExample', []);\n     * module.directive('ng2', adapter.downgradeNg2Component(Ng2));\n     *\n     * module.directive('ng1', function() {\n     *   return {\n     *      scope: { title: '=' },\n     *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n     *   };\n     * });\n     *\n     *\n     * \\@Component({\n     *   selector: 'ng2',\n     *   inputs: ['name'],\n     *   template: 'ng2[<ng1 [title]=\"name\">transclude</ng1>](<ng-content></ng-content>)'\n     * })\n     * class Ng2 {\n     * }\n     *\n     * \\@NgModule({\n     *   declarations: [Ng2, adapter.upgradeNg1Component('ng1')],\n     *   imports: [BrowserModule]\n     * })\n     * class MyNg2Module {}\n     *\n     * document.body.innerHTML = '<ng2 name=\"World\">project</ng2>';\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n     *   expect(document.body.textContent).toEqual(\n     *       \"ng2[ng1[Hello World!](transclude)](project)\");\n     * });\n     * ```\n     * @param {?} element\n     * @param {?=} modules\n     * @param {?=} config\n     * @return {?}\n     */\n    function (element, modules, config) {\n        var _this = this;\n        this.declareNg1Module(modules);\n        var /** @type {?} */ upgrade = new UpgradeAdapterRef();\n        // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n        var /** @type {?} */ windowAngular = (/** @type {?} */ (window /** TODO #???? */) /** TODO #???? */)['angular'];\n        windowAngular.resumeBootstrap = undefined;\n        this.ngZone.run(function () { angular.bootstrap(element, [_this.ng1Module.name], /** @type {?} */ ((config))); });\n        var /** @type {?} */ ng1BootstrapPromise = new Promise(function (resolve) {\n            if (windowAngular.resumeBootstrap) {\n                var /** @type {?} */ originalResumeBootstrap_1 = windowAngular.resumeBootstrap;\n                windowAngular.resumeBootstrap = function () {\n                    windowAngular.resumeBootstrap = originalResumeBootstrap_1;\n                    windowAngular.resumeBootstrap.apply(this, arguments);\n                    resolve();\n                };\n            }\n            else {\n                resolve();\n            }\n        });\n        Promise.all([this.ng2BootstrapDeferred.promise, ng1BootstrapPromise]).then(function (_a) {\n            var ng1Injector = _a[0];\n            /** @type {?} */ ((angular.element(element).data))(controllerKey(INJECTOR_KEY), /** @type {?} */ ((_this.moduleRef)).injector); /** @type {?} */\n            ((_this.moduleRef)).injector.get(NgZone).run(function () { (/** @type {?} */ (upgrade))._bootstrapDone(_this.moduleRef, ng1Injector); });\n        }, onError);\n        return upgrade;\n    };\n    /**\n     * Allows AngularJS service to be accessible from Angular.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * class Login { ... }\n     * class Server { ... }\n     *\n     * @Injectable()\n     * class Example {\n     *   constructor(@Inject('server') server, login: Login) {\n     *     ...\n     *   }\n     * }\n     *\n     * const module = angular.module('myExample', []);\n     * module.service('server', Server);\n     * module.service('login', Login);\n     *\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     * adapter.upgradeNg1Provider('server');\n     * adapter.upgradeNg1Provider('login', {asToken: Login});\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n     *   const example: Example = ref.ng2Injector.get(Example);\n     * });\n     *\n     * ```\n     */\n    /**\n     * Allows AngularJS service to be accessible from Angular.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * class Login { ... }\n     * class Server { ... }\n     *\n     * \\@Injectable()\n     * class Example {\n     *   constructor(\\@Inject('server') server, login: Login) {\n     *     ...\n     *   }\n     * }\n     *\n     * const module = angular.module('myExample', []);\n     * module.service('server', Server);\n     * module.service('login', Login);\n     *\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     * adapter.upgradeNg1Provider('server');\n     * adapter.upgradeNg1Provider('login', {asToken: Login});\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n     *   const example: Example = ref.ng2Injector.get(Example);\n     * });\n     *\n     * ```\n     * @param {?} name\n     * @param {?=} options\n     * @return {?}\n     */\n    UpgradeAdapter.prototype.upgradeNg1Provider = /**\n     * Allows AngularJS service to be accessible from Angular.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * class Login { ... }\n     * class Server { ... }\n     *\n     * \\@Injectable()\n     * class Example {\n     *   constructor(\\@Inject('server') server, login: Login) {\n     *     ...\n     *   }\n     * }\n     *\n     * const module = angular.module('myExample', []);\n     * module.service('server', Server);\n     * module.service('login', Login);\n     *\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     * adapter.upgradeNg1Provider('server');\n     * adapter.upgradeNg1Provider('login', {asToken: Login});\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n     *   const example: Example = ref.ng2Injector.get(Example);\n     * });\n     *\n     * ```\n     * @param {?} name\n     * @param {?=} options\n     * @return {?}\n     */\n    function (name, options) {\n        var /** @type {?} */ token = options && options.asToken || name;\n        this.upgradedProviders.push({\n            provide: token,\n            useFactory: function ($injector) { return $injector.get(name); },\n            deps: [$INJECTOR]\n        });\n    };\n    /**\n     * Allows Angular service to be accessible from AngularJS.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * class Example {\n     * }\n     *\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     *\n     * const module = angular.module('myExample', []);\n     * module.factory('example', adapter.downgradeNg2Provider(Example));\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n     *   const example: Example = ref.ng1Injector.get('example');\n     * });\n     *\n     * ```\n     */\n    /**\n     * Allows Angular service to be accessible from AngularJS.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * class Example {\n     * }\n     *\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     *\n     * const module = angular.module('myExample', []);\n     * module.factory('example', adapter.downgradeNg2Provider(Example));\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n     *   const example: Example = ref.ng1Injector.get('example');\n     * });\n     *\n     * ```\n     * @param {?} token\n     * @return {?}\n     */\n    UpgradeAdapter.prototype.downgradeNg2Provider = /**\n     * Allows Angular service to be accessible from AngularJS.\n     *\n     *\n     * ### Example\n     *\n     * ```\n     * class Example {\n     * }\n     *\n     * const adapter = new UpgradeAdapter(MyNg2Module);\n     *\n     * const module = angular.module('myExample', []);\n     * module.factory('example', adapter.downgradeNg2Provider(Example));\n     *\n     * adapter.bootstrap(document.body, ['myExample']).ready((ref) => {\n     *   const example: Example = ref.ng1Injector.get('example');\n     * });\n     *\n     * ```\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) { return downgradeInjectable(token); };\n    /**\n     * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n     * hybrid application.\n     *\n     * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n     *\n     * @param {?=} modules The AngularJS modules that this upgrade module should depend upon.\n     * @return {?} The AngularJS upgrade module that is declared by this method\n     *\n     * ### Example\n     *\n     * ```\n     * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n     * upgradeAdapter.declareNg1Module(['heroApp']);\n     * ```\n     */\n    UpgradeAdapter.prototype.declareNg1Module = /**\n     * Declare the AngularJS upgrade module for this adapter without bootstrapping the whole\n     * hybrid application.\n     *\n     * This method is automatically called by `bootstrap()` and `registerForNg1Tests()`.\n     *\n     * @param {?=} modules The AngularJS modules that this upgrade module should depend upon.\n     * @return {?} The AngularJS upgrade module that is declared by this method\n     *\n     * ### Example\n     *\n     * ```\n     * const upgradeAdapter = new UpgradeAdapter(MyNg2Module);\n     * upgradeAdapter.declareNg1Module(['heroApp']);\n     * ```\n     */\n    function (modules) {\n        var _this = this;\n        if (modules === void 0) { modules = []; }\n        var /** @type {?} */ delayApplyExps = [];\n        var /** @type {?} */ original$applyFn;\n        var /** @type {?} */ rootScopePrototype;\n        var /** @type {?} */ rootScope;\n        var /** @type {?} */ upgradeAdapter = this;\n        var /** @type {?} */ ng1Module = this.ng1Module = angular.module(this.idPrefix, modules);\n        var /** @type {?} */ platformRef = platformBrowserDynamic();\n        this.ngZone = new NgZone({ enableLongStackTrace: Zone.hasOwnProperty('longStackTraceZoneSpec') });\n        this.ng2BootstrapDeferred = new Deferred();\n        ng1Module.factory(INJECTOR_KEY, function () { return ((_this.moduleRef)).injector.get(Injector); })\n            .factory(LAZY_MODULE_REF, [\n            INJECTOR_KEY,\n            function (injector) { return (/** @type {?} */ ({ injector: injector, needsNgZone: false })); }\n        ])\n            .constant(NG_ZONE_KEY, this.ngZone)\n            .factory(COMPILER_KEY, function () { return ((_this.moduleRef)).injector.get(Compiler); })\n            .config([\n            '$provide', '$injector',\n            function (provide, ng1Injector) {\n                provide.decorator($ROOT_SCOPE, [\n                    '$delegate',\n                    function (rootScopeDelegate) {\n                        // Capture the root apply so that we can delay first call to $apply until we\n                        // bootstrap Angular and then we replay and restore the $apply.\n                        rootScopePrototype = rootScopeDelegate.constructor.prototype;\n                        if (rootScopePrototype.hasOwnProperty('$apply')) {\n                            original$applyFn = rootScopePrototype.$apply;\n                            rootScopePrototype.$apply = function (exp) { return delayApplyExps.push(exp); };\n                        }\n                        else {\n                            throw new Error('Failed to find \\'$apply\\' on \\'$rootScope\\'!');\n                        }\n                        return rootScope = rootScopeDelegate;\n                    }\n                ]);\n                if (ng1Injector.has($$TESTABILITY)) {\n                    provide.decorator($$TESTABILITY, [\n                        '$delegate',\n                        function (testabilityDelegate) {\n                            var /** @type {?} */ originalWhenStable = testabilityDelegate.whenStable;\n                            // Cannot use arrow function below because we need the context\n                            var /** @type {?} */ newWhenStable = function (callback) {\n                                originalWhenStable.call(this, function () {\n                                    var /** @type {?} */ ng2Testability = /** @type {?} */ ((upgradeAdapter.moduleRef)).injector.get(Testability);\n                                    if (ng2Testability.isStable()) {\n                                        callback.apply(this, arguments);\n                                    }\n                                    else {\n                                        ng2Testability.whenStable(newWhenStable.bind(this, callback));\n                                    }\n                                });\n                            };\n                            testabilityDelegate.whenStable = newWhenStable;\n                            return testabilityDelegate;\n                        }\n                    ]);\n                }\n            }\n        ]);\n        ng1Module.run([\n            '$injector', '$rootScope',\n            function (ng1Injector, rootScope) {\n                UpgradeNg1ComponentAdapterBuilder.resolve(_this.ng1ComponentsToBeUpgraded, ng1Injector)\n                    .then(function () {\n                    // Note: There is a bug in TS 2.4 that prevents us from\n                    // inlining this into @NgModule\n                    // TODO(tbosch): find or file a bug against TypeScript for this.\n                    var /** @type {?} */ ngModule = {\n                        providers: [\n                            { provide: $INJECTOR, useFactory: function () { return ng1Injector; } },\n                            { provide: $COMPILE, useFactory: function () { return ng1Injector.get($COMPILE); } },\n                            _this.upgradedProviders\n                        ],\n                        imports: [_this.ng2AppModule],\n                        entryComponents: _this.downgradedComponents\n                    };\n                    var DynamicNgUpgradeModule = /** @class */ (function () {\n                        function DynamicNgUpgradeModule() {\n                        }\n                        /**\n                         * @return {?}\n                         */\n                        DynamicNgUpgradeModule.prototype.ngDoBootstrap = /**\n                         * @return {?}\n                         */\n                        function () { };\n                        DynamicNgUpgradeModule.decorators = [\n                            { type: NgModule, args: [ngModule,] },\n                        ];\n                        /** @nocollapse */\n                        DynamicNgUpgradeModule.ctorParameters = function () { return []; };\n                        return DynamicNgUpgradeModule;\n                    }());\n                    function DynamicNgUpgradeModule_tsickle_Closure_declarations() {\n                        /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n                        DynamicNgUpgradeModule.decorators;\n                        /**\n                         * @nocollapse\n                         * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n                         */\n                        DynamicNgUpgradeModule.ctorParameters;\n                    }\n                    platformRef\n                        .bootstrapModule(DynamicNgUpgradeModule, [/** @type {?} */ ((_this.compilerOptions)), { ngZone: _this.ngZone }])\n                        .then(function (ref) {\n                        _this.moduleRef = ref;\n                        _this.ngZone.run(function () {\n                            if (rootScopePrototype) {\n                                rootScopePrototype.$apply = original$applyFn; // restore original $apply\n                                while (delayApplyExps.length) {\n                                    rootScope.$apply(delayApplyExps.shift());\n                                }\n                                rootScopePrototype = null;\n                            }\n                        });\n                    })\n                        .then(function () { return _this.ng2BootstrapDeferred.resolve(ng1Injector); }, onError)\n                        .then(function () {\n                        var /** @type {?} */ subscription = _this.ngZone.onMicrotaskEmpty.subscribe({ next: function () { return rootScope.$digest(); } });\n                        rootScope.$on('$destroy', function () { subscription.unsubscribe(); });\n                    });\n                })\n                    .catch(function (e) { return _this.ng2BootstrapDeferred.reject(e); });\n            }\n        ]);\n        return ng1Module;\n    };\n    return UpgradeAdapter;\n}());\n/**\n * Use `UpgradeAdapter` to allow AngularJS and Angular to coexist in a single application.\n *\n * The `UpgradeAdapter` allows:\n * 1. creation of Angular component from AngularJS component directive\n *    (See [UpgradeAdapter#upgradeNg1Component()])\n * 2. creation of AngularJS directive from Angular component.\n *    (See [UpgradeAdapter#downgradeNg2Component()])\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application.\n *\n * ## Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be upgraded to an Angular component. This creates an\n *    Angular directive, which bootstraps the AngularJS component directive in that location.\n * 6. An Angular component can be downgraded to an AngularJS component directive. This creates\n *    an AngularJS directive, which bootstraps the Angular component in that location.\n * 7. Whenever an adapter component is instantiated the host element is owned by the framework\n *    doing the instantiation. The other framework then instantiates and owns the view for that\n *    component. This implies that component bindings will always follow the semantics of the\n *    instantiation framework. The syntax is always that of Angular syntax.\n * 8. AngularJS is always bootstrapped first and owns the bottom most view.\n * 9. The new application is running in Angular zone, and therefore it no longer needs calls to\n *    `$apply()`.\n *\n * ### Example\n *\n * ```\n * const adapter = new UpgradeAdapter(forwardRef(() => MyNg2Module), myCompilerOptions);\n * const module = angular.module('myExample', []);\n * module.directive('ng2Comp', adapter.downgradeNg2Component(Ng2Component));\n *\n * module.directive('ng1Hello', function() {\n *   return {\n *      scope: { title: '=' },\n *      template: 'ng1[Hello {{title}}!](<span ng-transclude></span>)'\n *   };\n * });\n *\n *\n * \\@Component({\n *   selector: 'ng2-comp',\n *   inputs: ['name'],\n *   template: 'ng2[<ng1-hello [title]=\"name\">transclude</ng1-hello>](<ng-content></ng-content>)',\n *   directives:\n * })\n * class Ng2Component {\n * }\n *\n * \\@NgModule({\n *   declarations: [Ng2Component, adapter.upgradeNg1Component('ng1Hello')],\n *   imports: [BrowserModule]\n * })\n * class MyNg2Module {}\n *\n *\n * document.body.innerHTML = '<ng2-comp name=\"World\">project</ng2-comp>';\n *\n * adapter.bootstrap(document.body, ['myExample']).ready(function() {\n *   expect(document.body.textContent).toEqual(\n *       \"ng2[ng1[Hello World!](transclude)](project)\");\n * });\n *\n * ```\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](guide/aot-compiler).\n */\nexport { UpgradeAdapter };\nfunction UpgradeAdapter_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpgradeAdapter.prototype.idPrefix;\n    /** @type {?} */\n    UpgradeAdapter.prototype.downgradedComponents;\n    /**\n     * An internal map of ng1 components which need to up upgraded to ng2.\n     *\n     * We can't upgrade until injector is instantiated and we can retrieve the component metadata.\n     * For this reason we keep a list of components to upgrade until ng1 injector is bootstrapped.\n     *\n     * \\@internal\n     * @type {?}\n     */\n    UpgradeAdapter.prototype.ng1ComponentsToBeUpgraded;\n    /** @type {?} */\n    UpgradeAdapter.prototype.upgradedProviders;\n    /** @type {?} */\n    UpgradeAdapter.prototype.ngZone;\n    /** @type {?} */\n    UpgradeAdapter.prototype.ng1Module;\n    /** @type {?} */\n    UpgradeAdapter.prototype.moduleRef;\n    /** @type {?} */\n    UpgradeAdapter.prototype.ng2BootstrapDeferred;\n    /** @type {?} */\n    UpgradeAdapter.prototype.ng2AppModule;\n    /** @type {?} */\n    UpgradeAdapter.prototype.compilerOptions;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's $compile.\n */\nvar /**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of AngularJS's $compile.\n */\nParentInjectorPromise = /** @class */ (function () {\n    function ParentInjectorPromise(element) {\n        this.element = element;\n        this.callbacks = [];\n        /** @type {?} */ ((\n        // store the promise on the element\n        element.data))(controllerKey(INJECTOR_KEY), this);\n    }\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ParentInjectorPromise.prototype.then = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (this.injector) {\n            callback(this.injector);\n        }\n        else {\n            this.callbacks.push(callback);\n        }\n    };\n    /**\n     * @param {?} injector\n     * @return {?}\n     */\n    ParentInjectorPromise.prototype.resolve = /**\n     * @param {?} injector\n     * @return {?}\n     */\n    function (injector) {\n        this.injector = injector; /** @type {?} */\n        ((\n        // reset the element data to point to the real injector\n        this.element.data))(controllerKey(INJECTOR_KEY), injector);\n        // clean out the element to prevent memory leaks\n        this.element = /** @type {?} */ ((null));\n        // run all the queued callbacks\n        this.callbacks.forEach(function (callback) { return callback(injector); });\n        this.callbacks.length = 0;\n    };\n    return ParentInjectorPromise;\n}());\nfunction ParentInjectorPromise_tsickle_Closure_declarations() {\n    /** @type {?} */\n    ParentInjectorPromise.prototype.injector;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.callbacks;\n    /** @type {?} */\n    ParentInjectorPromise.prototype.element;\n}\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](guide/aot-compiler).\n */\nvar /**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](guide/aot-compiler).\n */\nUpgradeAdapterRef = /** @class */ (function () {\n    function UpgradeAdapterRef() {\n        this._readyFn = null;\n        this.ng1RootScope = /** @type {?} */ ((null));\n        this.ng1Injector = /** @type {?} */ ((null));\n        this.ng2ModuleRef = /** @type {?} */ ((null));\n        this.ng2Injector = /** @type {?} */ ((null));\n    }\n    /**\n     * @param {?} ngModuleRef\n     * @param {?} ng1Injector\n     * @return {?}\n     */\n    UpgradeAdapterRef.prototype._bootstrapDone = /**\n     * @param {?} ngModuleRef\n     * @param {?} ng1Injector\n     * @return {?}\n     */\n    function (ngModuleRef, ng1Injector) {\n        this.ng2ModuleRef = ngModuleRef;\n        this.ng2Injector = ngModuleRef.injector;\n        this.ng1Injector = ng1Injector;\n        this.ng1RootScope = ng1Injector.get($ROOT_SCOPE);\n        this._readyFn && this._readyFn(this);\n    };\n    /**\n     * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n     * application has been bootstrapped.\n     *\n     * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n     * require a call to `$apply()`.\n     * @param {?} fn\n     * @return {?}\n     */\n    UpgradeAdapterRef.prototype.ready = /**\n     * Register a callback function which is notified upon successful hybrid AngularJS / Angular\n     * application has been bootstrapped.\n     *\n     * The `ready` callback function is invoked inside the Angular zone, therefore it does not\n     * require a call to `$apply()`.\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._readyFn = fn; };\n    /**\n     * Dispose of running hybrid AngularJS / Angular application.\n     * @return {?}\n     */\n    UpgradeAdapterRef.prototype.dispose = /**\n     * Dispose of running hybrid AngularJS / Angular application.\n     * @return {?}\n     */\n    function () {\n        /** @type {?} */ ((this.ng1Injector)).get($ROOT_SCOPE).$destroy(); /** @type {?} */\n        ((this.ng2ModuleRef)).destroy();\n    };\n    return UpgradeAdapterRef;\n}());\n/**\n * Use `UpgradeAdapterRef` to control a hybrid AngularJS / Angular application.\n *\n * @deprecated Deprecated since v5. Use `upgrade/static` instead, which also supports\n * [Ahead-of-Time compilation](guide/aot-compiler).\n */\nexport { UpgradeAdapterRef };\nfunction UpgradeAdapterRef_tsickle_Closure_declarations() {\n    /** @type {?} */\n    UpgradeAdapterRef.prototype._readyFn;\n    /** @type {?} */\n    UpgradeAdapterRef.prototype.ng1RootScope;\n    /** @type {?} */\n    UpgradeAdapterRef.prototype.ng1Injector;\n    /** @type {?} */\n    UpgradeAdapterRef.prototype.ng2ModuleRef;\n    /** @type {?} */\n    UpgradeAdapterRef.prototype.ng2Injector;\n}\n//# sourceMappingURL=upgrade_adapter.js.map"],"names":["Version","module","Injector","Testability","TestabilityRegistry","ApplicationRef","SimpleChange","ComponentFactoryResolver","ParentInjectorPromise","NgZone","angular.element","INITIAL_VALUE","Directive","Inject","ElementRef","EventEmitter","element","angular.bootstrap","angular.module","platformBrowserDynamic","Compiler","NgModule"],"mappings":"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"}