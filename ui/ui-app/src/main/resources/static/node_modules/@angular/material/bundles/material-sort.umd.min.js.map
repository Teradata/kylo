{"version":3,"file":"material-sort.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/sort/sort-errors.ts","../../src/lib/sort/sort.ts","../../src/lib/sort/sort-header-intl.ts","../../src/lib/sort/sort-animations.ts","../../src/lib/sort/sort-header.ts","../../src/lib/sort/sort-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getSortDuplicateSortableIdError(id: string): Error {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n\n/** @docs-private */\nexport function getSortHeaderNotContainedWithinSortError(): Error {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n\n/** @docs-private */\nexport function getSortHeaderMissingIdError(): Error {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n\n/** @docs-private */\nexport function getSortInvalidDirectionError(direction: string): Error {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  isDevMode,\n  Output,\n  OnChanges,\n  OnDestroy,\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\nimport {SortDirection} from './sort-direction';\nimport {\n  getSortInvalidDirectionError,\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError\n} from './sort-errors';\nimport {Subject} from 'rxjs/Subject';\n\n/** Interface for a directive that holds sorting state consumed by `MatSortHeader`. */\nexport interface MatSortable {\n  /** The id of the column being sorted. */\n  id: string;\n\n  /** Starting sort direction. */\n  start: 'asc' | 'desc';\n\n  /** Whether to disable clearing the sorting state. */\n  disableClear: boolean;\n}\n\n/** The current sort state. */\nexport interface Sort {\n  /** The id of the column being sorted. */\n  active: string;\n\n  /** The sort direction. */\n  direction: SortDirection;\n}\n\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nexport class MatSortBase {}\nexport const _MatSortMixinBase = mixinDisabled(MatSortBase);\n\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\n@Directive({\n  selector: '[matSort]',\n  exportAs: 'matSort',\n  inputs: ['disabled: matSortDisabled']\n})\nexport class MatSort extends _MatSortMixinBase implements CanDisable, OnChanges, OnDestroy {\n  /** Collection of all registered sortables that this directive manages. */\n  sortables = new Map<string, MatSortable>();\n\n  /** Used to notify any child components listening to state changes. */\n  _stateChanges = new Subject<void>();\n\n  /** The id of the most recently sorted MatSortable. */\n  @Input('matSortActive') active: string;\n\n  /**\n   * The direction to set when an MatSortable is initially sorted.\n   * May be overriden by the MatSortable's sort start.\n   */\n  @Input('matSortStart') start: 'asc' | 'desc' = 'asc';\n\n  /** The sort direction of the currently active MatSortable. */\n  @Input('matSortDirection')\n  set direction(direction: SortDirection) {\n    if (isDevMode() && direction && direction !== 'asc' && direction !== 'desc') {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  get direction(): SortDirection { return this._direction; }\n  private _direction: SortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   * May be overriden by the MatSortable's disable clear input.\n   */\n  @Input('matSortDisableClear')\n  get disableClear() { return this._disableClear; }\n  set disableClear(v: boolean) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  /** Event emitted when the user changes either the active sort or sort direction. */\n  @Output('matSortChange') readonly sortChange = new EventEmitter<Sort>();\n\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable: MatSortable) {\n    if (!sortable.id) {\n      throw getSortHeaderMissingIdError();\n    }\n\n    if (this.sortables.has(sortable.id)) {\n      throw getSortDuplicateSortableIdError(sortable.id);\n    }\n    this.sortables.set(sortable.id, sortable);\n  }\n\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable: MatSortable) {\n    this.sortables.delete(sortable.id);\n  }\n\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable: MatSortable) {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.next({active: this.active, direction: this.direction});\n  }\n\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable: MatSortable): SortDirection {\n    if (!sortable) { return ''; }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) { nextDirectionIndex = 0; }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n}\n\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start: 'asc' | 'desc',\n                               disableClear: boolean): SortDirection[] {\n  let sortOrder: SortDirection[] = ['asc', 'desc'];\n  if (start == 'desc') { sortOrder.reverse(); }\n  if (!disableClear) { sortOrder.push(''); }\n\n  return sortOrder;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, SkipSelf, Optional} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport {SortDirection} from './sort-direction';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable()\nexport class MatSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  changes: Subject<void> = new Subject<void>();\n\n  /** ARIA label for the sorting button. */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n\n  /** A label to describe the current sort (visible only to screenreaders). */\n  sortDescriptionLabel = (id: string, direction: SortDirection) => {\n    return `Sorted by ${id} ${direction == 'asc' ? 'ascending' : 'descending'}`;\n  }\n}\n/** @docs-private */\nexport function MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: MatSortHeaderIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n\n/** @docs-private */\nexport const MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  keyframes,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n                                  AnimationCurves.STANDARD_CURVE;\n\n/** Animations used by MatSort. */\nexport const matSortAnimations: {\n  readonly indicator: AnimationTriggerMetadata;\n  readonly leftPointer: AnimationTriggerMetadata;\n  readonly rightPointer: AnimationTriggerMetadata;\n  readonly indicatorToggle: AnimationTriggerMetadata;\n} = {\n  /** Animation that moves the sort indicator. */\n  indicator: trigger('indicator', [\n    state('asc', style({transform: 'translateY(0px)'})),\n    // 10px is the height of the sort indicator, minus the width of the pointers\n    state('desc', style({transform: 'translateY(10px)'})),\n    transition('asc <=> desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: trigger('leftPointer', [\n    state('asc', style({transform: 'rotate(-45deg)'})),\n    state('desc', style({transform: 'rotate(45deg)'})),\n    transition('asc <=> desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: trigger('rightPointer', [\n    state('asc', style({transform: 'rotate(45deg)'})),\n    state('desc', style({transform: 'rotate(-45deg)'})),\n    transition('asc <=> desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that moves the indicator in and out of view when sorting is enabled/disabled. */\n  indicatorToggle: trigger('indicatorToggle', [\n    transition('void => asc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'translateY(25%)', opacity: 0}),\n      style({transform: 'none', opacity: 1})\n    ]))),\n    transition('asc => void', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'none', opacity: 1}),\n      style({transform: 'translateY(-25%)', opacity: 0})\n    ]))),\n    transition('void => desc', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'translateY(-25%)', opacity: 0}),\n      style({transform: 'none', opacity: 1})\n    ]))),\n    transition('desc => void', animate(SORT_ANIMATION_TRANSITION, keyframes([\n      style({transform: 'none', opacity: 1}),\n      style({transform: 'translateY(25%)', opacity: 0})\n    ]))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Optional,\n  ViewEncapsulation\n} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {CdkColumnDef} from '@angular/cdk/table';\nimport {Subscription} from 'rxjs/Subscription';\nimport {merge} from 'rxjs/observable/merge';\nimport {MatSort, MatSortable} from './sort';\nimport {MatSortHeaderIntl} from './sort-header-intl';\nimport {getSortHeaderNotContainedWithinSortError} from './sort-errors';\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\nimport {matSortAnimations} from './sort-animations';\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nexport class MatSortHeaderBase {}\nexport const _MatSortHeaderMixinBase = mixinDisabled(MatSortHeaderBase);\n\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[mat-sort-header]',\n  exportAs: 'matSortHeader',\n  templateUrl: 'sort-header.html',\n  styleUrls: ['sort-header.css'],\n  host: {\n    '(click)': '_handleClick()',\n    '[class.mat-sort-header-sorted]': '_isSorted()',\n    '[class.mat-sort-header-disabled]': '_isDisabled()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    matSortAnimations.indicator,\n    matSortAnimations.leftPointer,\n    matSortAnimations.rightPointer,\n    matSortAnimations.indicatorToggle\n  ]\n})\nexport class MatSortHeader extends _MatSortHeaderMixinBase implements MatSortable, CanDisable {\n  private _rerenderSubscription: Subscription;\n\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  @Input('mat-sort-header') id: string;\n\n  /** Sets the position of the arrow that displays when sorted. */\n  @Input() arrowPosition: 'before' | 'after' = 'after';\n\n  /** Overrides the sort start value of the containing MatSort for this MatSortable. */\n  @Input('start') start: 'asc' | 'desc';\n\n  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n  @Input()\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  constructor(public _intl: MatSortHeaderIntl,\n              changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _sort: MatSort,\n              @Optional() public _cdkColumnDef: CdkColumnDef) {\n\n    super();\n\n    if (!_sort) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n      .subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnInit() {\n    if (!this.id && this._cdkColumnDef) {\n      this.id = this._cdkColumnDef.name;\n    }\n\n    this._sort.register(this);\n  }\n\n  ngOnDestroy() {\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles click events on the header. */\n  _handleClick() {\n    if (!this._isDisabled()) {\n      this._sort.sort(this);\n    }\n  }\n\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatSortHeader} from './sort-header';\nimport {MatSort} from './sort';\nimport {MAT_SORT_HEADER_INTL_PROVIDER} from './sort-header-intl';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MatSort, MatSortHeader],\n  declarations: [MatSort, MatSortHeader],\n  providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n})\nexport class MatSortModule {}\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","getSortDuplicateSortableIdError","id","Error","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","getSortDirectionCycle","start","disableClear","sortOrder","reverse","push","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","parentIntl","MatSortHeaderIntl","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MatSortBase","_MatSortMixinBase","mixinDisabled","_this","sortables","Map","_stateChanges","Subject","_direction","sortChange","EventEmitter","tslib_1.__extends","MatSort","_super","defineProperty","isDevMode","_disableClear","v","coerceBooleanProperty","register","sortable","has","set","deregister","delete","sort","active","getNextSortDirection","next","sortDirectionCycle","nextDirectionIndex","indexOf","length","ngOnChanges","ngOnDestroy","complete","type","Directive","args","selector","exportAs","inputs","Input","Output","changes","sortButtonLabel","sortDescriptionLabel","Injectable","MAT_SORT_HEADER_INTL_PROVIDER","provide","deps","Optional","SkipSelf","useFactory","SORT_ANIMATION_TRANSITION","AnimationDurations","ENTERING","AnimationCurves","STANDARD_CURVE","matSortAnimations","indicator","trigger","state","style","transform","transition","animate","leftPointer","rightPointer","indicatorToggle","keyframes","opacity","MatSortHeaderBase","_MatSortHeaderMixinBase","MatSortHeader","_intl","changeDetectorRef","_sort","_cdkColumnDef","call","arrowPosition","_rerenderSubscription","merge","subscribe","markForCheck","ngOnInit","name","unsubscribe","_handleClick","_isDisabled","_isSorted","disabled","Component","template","styles","host","(click)","[class.mat-sort-header-sorted]","[class.mat-sort-header-disabled]","encapsulation","ViewEncapsulation","None","preserveWhitespaces","changeDetection","ChangeDetectionStrategy","OnPush","animations","decorators","CdkColumnDef","propDecorators","MatSortModule","NgModule","imports","CommonModule","exports","declarations","providers"],"mappings":"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"}