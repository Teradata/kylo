{"version":3,"sources":["router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","Rx","Observable","prototype","platformBrowser","this","_angular_common","_angular_core","rxjs_BehaviorSubject","rxjs_Subject","rxjs_observable_of","rxjs_operator_concatMap","rxjs_operator_map","rxjs_operator_mergeMap","rxjs_Observable","rxjs_observable_from","rxjs_operator_catch","rxjs_operator_concatAll","rxjs_operator_first","rxjs_util_EmptyError","rxjs_observable_fromPromise","rxjs_operator_every","rxjs_operator_last","rxjs_operator_mergeAll","rxjs_operator_reduce","_angular_platformBrowser","rxjs_operator_filter","__extends","d","b","__","constructor","extendStatics","Object","create","convertToParamMap","params","ParamsAsMap","navigationCancelingError","message","error","Error","NAVIGATION_CANCELING_ERROR","isNavigationCancelingError","defaultUrlMatcher","segments","segmentGroup","route","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","path","consumed","slice","validateConfig","config","parentPath","i","validateNode","getFullPath","fullPath","Array","isArray","component","outlet","PRIMARY_OUTLET","redirectTo","children","loadChildren","matcher","charAt","currentRoute","shallowEqualArrays","a","shallowEqual","k1","keys","k2","key","flatten","arr","concat","apply","last$1","forEach","map$$1","callback","prop","hasOwnProperty","waitForMap","obj","fn","of","waitHead","waitTail","res","k","mapped","map","call","r","push","concat$","concatAll","last$","last","andObservables","observables","merged$","mergeAll","every","result","wrapIntoObservable","value","ɵisObservable","ɵisPromise","fromPromise","Promise","resolve","createEmptyUrlTree","UrlTree","UrlSegmentGroup","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","root","containsQueryParams","containsSegmentGroup","equalPath","numberOfChildren","c","containsSegmentGroupHelper","containeePaths","current","next","equalSegments","as","bs","parameters","mapChildrenIntoArray","child","childOutlet","serializePaths","p","serializePath","join","serializeSegment","primary","children_1","v","encode","s","encodeURIComponent","replace","decode","decodeURIComponent","serializeParams","serializeQueryParams","strParams","name","matchSegments","str","match","SEGMENT_RE","matchQueryParams","QUERY_PARAM_RE","matchUrlQueryParamValue","QUERY_PARAM_VALUE_RE","noMatch","obs","NoMatch","absoluteRedirect","newTree","AbsoluteRedirect","namedOutletsRedirect","canLoadFails","applyRedirects","moduleInjector","configLoader","urlSerializer","urlTree","ApplyRedirects","runCanLoadGuard","canLoad","from","injectionToken","guard","get","matched","consumedSegments","lastChild","positionalParamSegments","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","createChildrenForEmptySegments","mergeTrivialChildren","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","routes","_i","routes_1","isEmptyPathRedirect","getOutlet","__assign","primarySegmentGroup","routes_2","some","undefined","findNode","node","_a","node_1","findPath","unshift","nodeChildrenAsMap","createEmptyState","rootComponent","snapshot","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","RouterState","TreeNode","ActivatedRouteSnapshot","RouterStateSnapshot","inheritedParamsDataResolve","pathToRoot","pathFromRoot","inhertingStartingFrom","parent_1","routeConfig","reduce","curr","data","_resolvedData","setRouterState","state","_routerState","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","_futureSnapshot","url","equalParamsAndUrlSegments","equalUrlParams","parentsMismatch","parent","createRouterState","routeReuseStrategy","prevState","createNode","_root","shouldReuseRoute","createOrReuseChildren","retrieve","tree","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","createUrlTree","commands","nav","computeNavigation","toRoot","startingPosition","findStartingPosition","processChildren","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","outletName","Navigation","numberOfDoubleDots","isAbsolute","cmd","cmdIdx","outlets_1","urlPart","partIndex","Position","_lastPathIndex","_urlSegment","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getPath","getOutlets","_b","startIndex","m","prefixedWith","slicedCommands","commandIndex","pathIndex","createNewSegmentGroup","outlets_2","currentCommandIndex","currentPathIndex","compare","paths","createNewSegmentChildren","stringify","closestLoadedConfig","_loadedConfig","recognize","rootComponentType","Recognizer","sortActivatedRouteSnapshots","nodes","sort","localeCompare","getChildConfig","match$1","NoMatch$1","checkOutletNameUniqueness","names","n","routeWithSameOutletName","toString","getSourceSegmentGroup","_sourceSegment","getPathIndexShift","_segmentIndexShift","split$1","containsEmptyPathMatchesWithNamedOutlets","s_1","createChildrenForEmptyPaths","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","emptyPathMatch","getOutlet$1","primarySegment","getData","getResolve","defaultErrorHandler","defaultRouterHook","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","validateCommands","attrBoolValue","routerNgProbeToken","NgProbeToken","Router","provideLocationStrategy","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","provideForRootGuard","provideRoutes","provide","ANALYZE_FOR_ENTRY_COMPONENTS","multi","useValue","ROUTES","setupRouter","ref","contexts","location","injector","loader","compiler","opts","urlHandlingStrategy","errorHandler","enableTracing","dom_1","ɵgetDOM","events","subscribe","e","logGroup","log","logGroupEnd","onSameUrlNavigation","rootRoute","routerState","getAppInitializer","appInitializer","bind","getBootstrapListener","bootstrapListener","provideRouterInitializer","RouterInitializer","APP_INITIALIZER","useFactory","deps","ROUTER_INITIALIZER","APP_BOOTSTRAP_LISTENER","useExisting","setPrototypeOf","__proto__","assign","t","arguments","RouterEvent","id","NavigationStart","_super","NavigationEnd","urlAfterRedirects","_this","NavigationCancel","reason","NavigationError","RoutesRecognized","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","ChildActivationEnd","ActivationStart","ActivationEnd","has","getAll","defineProperty","enumerable","configurable","LoadedRouterConfig","_queryParamMap","DEFAULT_SERIALIZER","serialize","_parameterMap","UrlSerializer","DefaultUrlSerializer","parse","UrlParser","parseRootSegment","parseQueryParams","parseFragment","encodeURI","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","decodeURI","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","indexOf","substr","allowRedirects","ngModule","NgModuleRef","expanded$","expandSegmentGroup","urlTrees$","rootSegmentGroup","_catch","noMatchError","mapped$","rootCandidate","expandChildren","expandSegment","routes$","processedRoutes$","expandSegmentAgainstRoute","concattedProcessedRoutes$","first$","first","_","EmptyError","noLeftoversInUrl","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","mergeMap","lineralizeSegments","newSegments","rawSegmentGroup","load","cfg","rawSlicedSegments","childConfig$","routerConfig","childModule","childConfig","expanded$_1","cs","shouldLoad","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","idx","actualSegments_1","splice","Tree","firstChild","siblings","filter","cc","futureSnapshot","_paramMap","urlSegment","lastPathIndex","_resolve","cmdWithOutlet","find","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","currRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","canDeactivate$","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","checks$","runningChecks$","concatMap","check","runResolve","futureNode","currNode","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","observable","getToken","canActivateChildGuards","reverse","extractCanActivateChild","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","runningResolvers$","resolver","token","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","config_1","processSegmentAgainstRoute","rawSegment","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","InjectionToken","RouterConfigLoader","onLoadStartListener","onLoadEndListener","parentInjector","moduleFactory$","loadModuleFactory","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","rootContexts","navigations","navigationId","Subject","navigated","hooks","beforePreactivation","afterPreactivation","onLoadStart","triggerEvent","onLoadEnd","resetConfig","currentUrlTree","rawUrlTree","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","Zone","wrap","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","extras","skipLocationChange","parseUrl","mergedTree","navigate","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","urlAndSnapshot$","appliedUrl","redirectsApplied$","preActivation","navigationIsSuccessful","beforePreactivationDone$","preactivationSetup$","evt","preactivationCheckGuards$","preactivationResolveData$","preactivationDone$","routerState$","storedState","storedUrl","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","resetStateAndUrl","ee","futureState","currState","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","activateRoutes","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","onStartLoad","onEndLoad","setUpPreloading","navigations$","processRoutes","preloadConfig","loaded$","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","useClass","ApplicationRef","Optional","SystemJsNgModuleLoader","RouterModule","forRoot","providers","SkipSelf","PlatformLocation","Inject","APP_BASE_HREF","forChild","NgModule","declarations","initNavigation","resultOfPreactivationDone","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrappedComponentRef","preloader","components","componentTypes","complete","VERSION","Version","ɵROUTER_PROVIDERS","ɵflatten","ɵa","ɵg","ɵh","ɵi","ɵd","ɵc","ɵj","ɵf","ɵb","ɵe","ɵk","ɵl"],"mappings":"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","file":"router.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('rxjs/BehaviorSubject'), require('rxjs/Subject'), require('rxjs/observable/of'), require('rxjs/operator/concatMap'), require('rxjs/operator/map'), require('rxjs/operator/mergeMap'), require('rxjs/Observable'), require('rxjs/observable/from'), require('rxjs/operator/catch'), require('rxjs/operator/concatAll'), require('rxjs/operator/first'), require('rxjs/util/EmptyError'), require('rxjs/observable/fromPromise'), require('rxjs/operator/every'), require('rxjs/operator/last'), require('rxjs/operator/mergeAll'), require('rxjs/operator/reduce'), require('@angular/platform-browser'), require('rxjs/operator/filter')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'rxjs/BehaviorSubject', 'rxjs/Subject', 'rxjs/observable/of', 'rxjs/operator/concatMap', 'rxjs/operator/map', 'rxjs/operator/mergeMap', 'rxjs/Observable', 'rxjs/observable/from', 'rxjs/operator/catch', 'rxjs/operator/concatAll', 'rxjs/operator/first', 'rxjs/util/EmptyError', 'rxjs/observable/fromPromise', 'rxjs/operator/every', 'rxjs/operator/last', 'rxjs/operator/mergeAll', 'rxjs/operator/reduce', '@angular/platform-browser', 'rxjs/operator/filter'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.Rx,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.Rx.Observable.prototype,global.ng.platformBrowser,global.Rx.Observable.prototype));\n}(this, (function (exports,_angular_common,_angular_core,rxjs_BehaviorSubject,rxjs_Subject,rxjs_observable_of,rxjs_operator_concatMap,rxjs_operator_map,rxjs_operator_mergeMap,rxjs_Observable,rxjs_observable_from,rxjs_operator_catch,rxjs_operator_concatAll,rxjs_operator_first,rxjs_util_EmptyError,rxjs_observable_fromPromise,rxjs_operator_every,rxjs_operator_last,rxjs_operator_mergeAll,rxjs_operator_reduce,_angular_platformBrowser,rxjs_operator_filter) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(id, url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a navigation starts.\n *\n * \\@stable\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    __extends(NavigationStart, _super);\n    function NavigationStart() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationStart.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation ends successfully.\n *\n * \\@stable\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    __extends(NavigationEnd, _super);\n    function NavigationEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationEnd.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation is canceled.\n *\n * \\@stable\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    __extends(NavigationCancel, _super);\n    function NavigationCancel(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationCancel.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when a navigation fails due to an unexpected error.\n *\n * \\@stable\n */\nvar NavigationError = /** @class */ (function (_super) {\n    __extends(NavigationError, _super);\n    function NavigationError(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    NavigationError.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered when routes are recognized.\n *\n * \\@stable\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    __extends(RoutesRecognized, _super);\n    function RoutesRecognized(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    RoutesRecognized.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    __extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Guard phase of routing.\n *\n * \\@experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    __extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state, shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    GuardsCheckEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * \\@experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    __extends(ResolveStart, _super);\n    function ResolveStart(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents the end of the Resolve phase of routing. See note on\n * {\\@link ResolveStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    __extends(ResolveEnd, _super);\n    function ResolveEnd(/** @docsNotRequired */\n        /** @docsNotRequired */\n        id, /** @docsNotRequired */\n        /** @docsNotRequired */\n        url, urlAfterRedirects, state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    ResolveEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * \\@whatItDoes Represents an event triggered before lazy loading a route config.\n *\n * \\@experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * \\@whatItDoes Represents an event triggered when a route has been lazy loaded.\n *\n * \\@experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(route) {\n        this.route = route;\n    }\n    /**\n     * @return {?}\n     */\n    RouteConfigLoadEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ChildActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ChildActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationEnd} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationStart.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * \\@whatItDoes Represents the start of end of the Resolve phase of routing. See note on\n * {\\@link ActivationStart} for use of this experimental API.\n *\n * \\@experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(snapshot) {\n        this.snapshot = snapshot;\n    }\n    /**\n     * @return {?}\n     */\n    ActivationEnd.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Name of the primary outlet.\n *\n * \\@stable\n */\nvar PRIMARY_OUTLET = 'primary';\n/**\n * Matrix and Query parameters.\n *\n * `ParamMap` makes it easier to work with parameters as they could have either a single value or\n * multiple value. Because this should be known by the user, calling `get` or `getAll` returns the\n * correct type (either `string` or `string[]`).\n *\n * The API is inspired by the URLSearchParams interface.\n * see https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams\n *\n * \\@stable\n * @record\n */\n\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.has = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.params.hasOwnProperty(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.get = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ParamsAsMap.prototype.getAll = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (this.has(name)) {\n            var /** @type {?} */ v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a {\\@link Params} instance to a {\\@link ParamMap}.\n *\n * \\@stable\n * @param {?} params\n * @return {?}\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\n/**\n * @param {?} message\n * @return {?}\n */\nfunction navigationCancelingError(message) {\n    var /** @type {?} */ error = Error('NavigationCancelingError: ' + message);\n    (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isNavigationCancelingError(error) {\n    return error && (/** @type {?} */ (error))[NAVIGATION_CANCELING_ERROR];\n}\n/**\n * @param {?} segments\n * @param {?} segmentGroup\n * @param {?} route\n * @return {?}\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var /** @type {?} */ parts = /** @type {?} */ ((route.path)).split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var /** @type {?} */ posParams = {};\n    // Check each config part against the actual URL\n    for (var /** @type {?} */ index = 0; index < parts.length; index++) {\n        var /** @type {?} */ part = parts[index];\n        var /** @type {?} */ segment = segments[index];\n        var /** @type {?} */ isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * See {\\@link Routes} for more details.\n * \\@stable\n * @record\n */\n\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\n/**\n * @param {?} config\n * @param {?=} parentPath\n * @return {?}\n */\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var /** @type {?} */ i = 0; i < config.length; i++) {\n        var /** @type {?} */ route = config[i];\n        var /** @type {?} */ fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\n/**\n * @param {?} route\n * @param {?} fullPath\n * @return {?}\n */\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var /** @type {?} */ exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\n/**\n * @param {?} parentPath\n * @param {?} currentRoute\n * @return {?}\n */\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction shallowEqual(a, b) {\n    var /** @type {?} */ k1 = Object.keys(a);\n    var /** @type {?} */ k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var /** @type {?} */ key;\n    for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n * @template T\n * @param {?} arr\n * @return {?}\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n * @template T\n * @param {?} a\n * @return {?}\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n * @param {?} bools\n * @return {?}\n */\n\n/**\n * @template K, V\n * @param {?} map\n * @param {?} callback\n * @return {?}\n */\nfunction forEach(map$$1, callback) {\n    for (var /** @type {?} */ prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\n/**\n * @template A, B\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs_observable_of.of({});\n    }\n    var /** @type {?} */ waitHead = [];\n    var /** @type {?} */ waitTail = [];\n    var /** @type {?} */ res = {};\n    forEach(obj, function (a, k) {\n        var /** @type {?} */ mapped = rxjs_operator_map.map.call(fn(k, a), function (r) { return res[k] = r; });\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    var /** @type {?} */ concat$ = rxjs_operator_concatAll.concatAll.call(rxjs_observable_of.of.apply(void 0, waitHead.concat(waitTail)));\n    var /** @type {?} */ last$ = rxjs_operator_last.last.call(concat$);\n    return rxjs_operator_map.map.call(last$, function () { return res; });\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n * @param {?} observables\n * @return {?}\n */\nfunction andObservables(observables) {\n    var /** @type {?} */ merged$ = rxjs_operator_mergeAll.mergeAll.call(observables);\n    return rxjs_operator_every.every.call(merged$, function (result) { return result === true; });\n}\n/**\n * @template T\n * @param {?} value\n * @return {?}\n */\nfunction wrapIntoObservable(value) {\n    if (_angular_core.ɵisObservable(value)) {\n        return value;\n    }\n    if (_angular_core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs_observable_fromPromise.fromPromise(Promise.resolve(value));\n    }\n    return rxjs_observable_of.of(/** @type {?} */ (value));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} exact\n * @return {?}\n */\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var /** @type {?} */ c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @return {?}\n */\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\n/**\n * @param {?} container\n * @param {?} containee\n * @param {?} containeePaths\n * @return {?}\n */\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var /** @type {?} */ current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var /** @type {?} */ c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var /** @type {?} */ current = containeePaths.slice(0, container.segments.length);\n        var /** @type {?} */ next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * \\@whatItDoes Represents the parsed URL.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * \\@stable\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(root, queryParams, fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlTree.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * \\@whatItDoes Represents the parsed URL segment group.\n *\n * See {\\@link UrlTree} for more information.\n *\n * \\@stable\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(segments, children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /**\n         * The parent node in the url tree\n         */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.hasChildren = /**\n     * Whether the segment has child segments\n     * @return {?}\n     */\n    function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: /**\n         * Number of child segments\n         * @return {?}\n         */\n        function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegmentGroup.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * \\@whatItDoes Represents a single URL segment.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * \\@description\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * \\@stable\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(path, parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    UrlSegment.prototype.toString = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { return serializePath(this); };\n    return UrlSegment;\n}());\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\n/**\n * @param {?} as\n * @param {?} bs\n * @return {?}\n */\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\n/**\n * @template T\n * @param {?} segment\n * @param {?} fn\n * @return {?}\n */\nfunction mapChildrenIntoArray(segment, fn) {\n    var /** @type {?} */ res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * \\@whatItDoes Serializes and deserializes a URL string into a URL tree.\n *\n * \\@description The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See {\\@link DefaultUrlSerializer} for an example of a URL serializer.\n *\n * \\@stable\n * @abstract\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * \\@whatItDoes A default implementation of the {\\@link UrlSerializer}.\n *\n * \\@description\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * \\@stable\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a {@link UrlTree} */\n    /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.parse = /**\n     * Parses a url into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a {@link UrlTree} into a url */\n    /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    DefaultUrlSerializer.prototype.serialize = /**\n     * Converts a {\\@link UrlTree} into a url\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var /** @type {?} */ segment = \"/\" + serializeSegment(tree.root, true);\n        var /** @type {?} */ query = serializeQueryParams(tree.queryParams);\n        var /** @type {?} */ fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeURI((/** @type {?} */ ((tree.fragment)))) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\n/**\n * @param {?} segment\n * @return {?}\n */\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\n/**\n * @param {?} segment\n * @param {?} root\n * @return {?}\n */\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var /** @type {?} */ primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var /** @type {?} */ children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var /** @type {?} */ children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * This method is intended for encoding *key* or *value* parts of query component. We need a custom\n * method because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\n * encoded per http://tools.ietf.org/html/rfc3986:\n *    query         = *( pchar / \"/\" / \"?\" )\n *    pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"\\@\"\n *    unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n *    pct-encoded   = \"%\" HEXDIG HEXDIG\n *    sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n *                     / \"*\" / \"+\" / \",\" / \";\" / \"=\"\n * @param {?} s\n * @return {?}\n */\nfunction encode(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';');\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n/**\n * @param {?} path\n * @return {?}\n */\nfunction serializePath(path) {\n    return \"\" + encode(path.path) + serializeParams(path.parameters);\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeParams(params) {\n    return Object.keys(params).map(function (key) { return \";\" + encode(key) + \"=\" + encode(params[key]); }).join('');\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction serializeQueryParams(params) {\n    var /** @type {?} */ strParams = Object.keys(params).map(function (name) {\n        var /** @type {?} */ value = params[name];\n        return Array.isArray(value) ? value.map(function (v) { return encode(name) + \"=\" + encode(v); }).join('&') :\n            encode(name) + \"=\" + encode(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchSegments(str) {\n    var /** @type {?} */ match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchQueryParams(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n/**\n * @param {?} str\n * @return {?}\n */\nfunction matchUrlQueryParamValue(str) {\n    var /** @type {?} */ match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseRootSegment = /**\n     * @return {?}\n     */\n    function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseFragment = /**\n     * @return {?}\n     */\n    function () {\n        return this.consumeOptional('#') ? decodeURI(this.remaining) : null;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseChildren = /**\n     * @return {?}\n     */\n    function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var /** @type {?} */ segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var /** @type {?} */ children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var /** @type {?} */ res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseSegment = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    /**\n     * @return {?}\n     */\n    UrlParser.prototype.parseMatrixParams = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    UrlParser.prototype.parseQueryParam = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        var /** @type {?} */ key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var /** @type {?} */ value = '';\n        if (this.consumeOptional('=')) {\n            var /** @type {?} */ valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var /** @type {?} */ decodedKey = decode(key);\n        var /** @type {?} */ decodedVal = decode(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var /** @type {?} */ currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    UrlParser.prototype.parseParens = /**\n     * @param {?} allowPrimary\n     * @return {?}\n     */\n    function (allowPrimary) {\n        var /** @type {?} */ segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var /** @type {?} */ path = matchSegments(this.remaining);\n            var /** @type {?} */ next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var /** @type {?} */ outletName = /** @type {?} */ ((undefined));\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var /** @type {?} */ children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.peekStartsWith = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) { return this.remaining.startsWith(str); };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.consumeOptional = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    UrlParser.prototype.capture = /**\n     * @param {?} str\n     * @return {?}\n     */\n    function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction noMatch(segmentGroup) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\n/**\n * @param {?} newTree\n * @return {?}\n */\nfunction absoluteRedirect(newTree) {\n    return new rxjs_Observable.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\n/**\n * @param {?} redirectTo\n * @return {?}\n */\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\"));\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction canLoadFails(route) {\n    return new rxjs_Observable.Observable(function (obs) {\n        return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\"));\n    });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n * @param {?} moduleInjector\n * @param {?} configLoader\n * @param {?} urlSerializer\n * @param {?} urlTree\n * @param {?} config\n * @return {?}\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(_angular_core.NgModuleRef);\n    }\n    /**\n     * @return {?}\n     */\n    ApplyRedirects.prototype.apply = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ urlTrees$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, /** @type {?} */ ((_this.urlTree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(urlTrees$, function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} tree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.match = /**\n     * @param {?} tree\n     * @return {?}\n     */\n    function (tree) {\n        var _this = this;\n        var /** @type {?} */ expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var /** @type {?} */ mapped$ = rxjs_operator_map.map.call(expanded$, function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, /** @type {?} */ ((tree.fragment)));\n        });\n        return rxjs_operator_catch._catch.call(mapped$, function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noMatchError = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createUrlTree = /**\n     * @param {?} rootCandidate\n     * @param {?} queryParams\n     * @param {?} fragment\n     * @return {?}\n     */\n    function (rootCandidate, queryParams, fragment) {\n        var /** @type {?} */ root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentGroup = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return rxjs_operator_map.map.call(this.expandChildren(ngModule, routes, segmentGroup), function (children) { return new UrlSegmentGroup([], children); });\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandChildren = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegment = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} segments\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        var /** @type {?} */ routes$ = rxjs_observable_of.of.apply(void 0, routes);\n        var /** @type {?} */ processedRoutes$ = rxjs_operator_map.map.call(routes$, function (r) {\n            var /** @type {?} */ expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return rxjs_operator_catch._catch.call(expanded$, function (e) {\n                if (e instanceof NoMatch) {\n                    return rxjs_observable_of.of(null);\n                }\n                throw e;\n            });\n        });\n        var /** @type {?} */ concattedProcessedRoutes$ = rxjs_operator_concatAll.concatAll.call(processedRoutes$);\n        var /** @type {?} */ first$ = rxjs_operator_first.first.call(concattedProcessedRoutes$, function (s) { return !!s; });\n        return rxjs_operator_catch._catch.call(first$, function (e, _) {\n            if (e instanceof rxjs_util_EmptyError.EmptyError) {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs_observable_of.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        });\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} paths\n     * @param {?} outlet\n     * @param {?} allowRedirects\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var /** @type {?} */ newTree = this.applyRedirectCommands([], /** @type {?} */ ((route.redirectTo)), {});\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            var /** @type {?} */ group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = /**\n     * @param {?} ngModule\n     * @param {?} segmentGroup\n     * @param {?} routes\n     * @param {?} route\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var /** @type {?} */ newTree = this.applyRedirectCommands(consumedSegments, /** @type {?} */ ((route.redirectTo)), /** @type {?} */ (positionalParamSegments));\n        if (/** @type {?} */ ((route.redirectTo)).startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return rxjs_operator_mergeMap.mergeMap.call(this.lineralizeSegments(route, newTree), function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = /**\n     * @param {?} ngModule\n     * @param {?} rawSegmentGroup\n     * @param {?} route\n     * @param {?} segments\n     * @return {?}\n     */\n    function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return rxjs_operator_map.map.call(this.configLoader.load(ngModule.injector, route), function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                });\n            }\n            return rxjs_observable_of.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var /** @type {?} */ rawSlicedSegments = segments.slice(lastChild);\n        var /** @type {?} */ childConfig$ = this.getChildConfig(ngModule, route);\n        return rxjs_operator_mergeMap.mergeMap.call(childConfig$, function (routerConfig) {\n            var /** @type {?} */ childModule = routerConfig.module;\n            var /** @type {?} */ childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var /** @type {?} */ expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return rxjs_operator_map.map.call(expanded$_1, function (children) { return new UrlSegmentGroup(consumedSegments, children); });\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs_observable_of.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var /** @type {?} */ expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return rxjs_operator_map.map.call(expanded$, function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            });\n        });\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    ApplyRedirects.prototype.getChildConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs_observable_of.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs_observable_of.of(route._loadedConfig);\n            }\n            return rxjs_operator_mergeMap.mergeMap.call(runCanLoadGuard(ngModule.injector, route), function (shouldLoad) {\n                if (shouldLoad) {\n                    return rxjs_operator_map.map.call(_this.configLoader.load(ngModule.injector, route), function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    });\n                }\n                return canLoadFails(route);\n            });\n        }\n        return rxjs_observable_of.of(new LoadedRouterConfig([], ngModule));\n    };\n    /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    ApplyRedirects.prototype.lineralizeSegments = /**\n     * @param {?} route\n     * @param {?} urlTree\n     * @return {?}\n     */\n    function (route, urlTree) {\n        var /** @type {?} */ res = [];\n        var /** @type {?} */ c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs_observable_of.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect(/** @type {?} */ ((route.redirectTo)));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCommands = /**\n     * @param {?} segments\n     * @param {?} redirectTo\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = /**\n     * @param {?} redirectTo\n     * @param {?} urlTree\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, urlTree, segments, posParams) {\n        var /** @type {?} */ newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createQueryParams = /**\n     * @param {?} redirectToParams\n     * @param {?} actualParams\n     * @return {?}\n     */\n    function (redirectToParams, actualParams) {\n        var /** @type {?} */ res = {};\n        forEach(redirectToParams, function (v, k) {\n            var /** @type {?} */ copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var /** @type {?} */ sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegmentGroup = /**\n     * @param {?} redirectTo\n     * @param {?} group\n     * @param {?} segments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var /** @type {?} */ updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var /** @type {?} */ children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.createSegments = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToSegments\n     * @param {?} actualSegments\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) {\n            return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments);\n        });\n    };\n    /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findPosParam = /**\n     * @param {?} redirectTo\n     * @param {?} redirectToUrlSegment\n     * @param {?} posParams\n     * @return {?}\n     */\n    function (redirectTo, redirectToUrlSegment, posParams) {\n        var /** @type {?} */ pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    ApplyRedirects.prototype.findOrReturn = /**\n     * @param {?} redirectToUrlSegment\n     * @param {?} actualSegments\n     * @return {?}\n     */\n    function (redirectToUrlSegment, actualSegments) {\n        var /** @type {?} */ idx = 0;\n        for (var _i = 0, actualSegments_1 = actualSegments; _i < actualSegments_1.length; _i++) {\n            var s = actualSegments_1[_i];\n            if (s.path === redirectToUrlSegment.path) {\n                actualSegments.splice(idx);\n                return s;\n            }\n            idx++;\n        }\n        return redirectToUrlSegment;\n    };\n    return ApplyRedirects;\n}());\n/**\n * @param {?} moduleInjector\n * @param {?} route\n * @return {?}\n */\nfunction runCanLoadGuard(moduleInjector, route) {\n    var /** @type {?} */ canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs_observable_of.of(true);\n    var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canLoad), function (injectionToken) {\n        var /** @type {?} */ guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    });\n    return andObservables(obs);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: /** @type {?} */ ([]),\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: /** @type {?} */ ((res.consumed)),\n        lastChild: /** @type {?} */ ((res.consumed.length)),\n        positionalParamSegments: /** @type {?} */ ((res.posParams)),\n    };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var /** @type {?} */ c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} routes\n * @param {?} primarySegmentGroup\n * @return {?}\n */\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n            res[getOutlet(r)] = new UrlSegmentGroup([], {});\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} segments\n * @param {?} r\n * @return {?}\n */\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.parent = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.children = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.firstChild = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.siblings = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) {\n        var /** @type {?} */ p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var /** @type {?} */ c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    Tree.prototype.pathFromRoot = /**\n     * \\@internal\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ node_1 = findNode(value, child);\n        if (node_1)\n            return node_1;\n    }\n    return null;\n}\n/**\n * @template T\n * @param {?} value\n * @param {?} node\n * @return {?}\n */\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    for (var _i = 0, _a = node.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        var /** @type {?} */ path = findPath(value, child);\n        if (path.length) {\n            path.unshift(node);\n            return path;\n        }\n    }\n    return [];\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    /**\n     * @return {?}\n     */\n    TreeNode.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n/**\n * @template T\n * @param {?} node\n * @return {?}\n */\nfunction nodeChildrenAsMap(node) {\n    var /** @type {?} */ map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the state of the router.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * See {\\@link ActivatedRoute} for more information.\n *\n * \\@stable\n */\nvar RouterState = /** @class */ (function (_super) {\n    __extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterState.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyState(urlTree, rootComponent) {\n    var /** @type {?} */ snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var /** @type {?} */ emptyUrl = new rxjs_BehaviorSubject.BehaviorSubject([new UrlSegment('', {})]);\n    var /** @type {?} */ emptyParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyData = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ emptyQueryParams = new rxjs_BehaviorSubject.BehaviorSubject({});\n    var /** @type {?} */ fragment = new rxjs_BehaviorSubject.BehaviorSubject('');\n    var /** @type {?} */ activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\n/**\n * @param {?} urlTree\n * @param {?} rootComponent\n * @return {?}\n */\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var /** @type {?} */ emptyParams = {};\n    var /** @type {?} */ emptyData = {};\n    var /** @type {?} */ emptyQueryParams = {};\n    var /** @type {?} */ fragment = '';\n    var /** @type {?} */ activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet.\n * An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(url, params, queryParams, fragment, data, outlet, component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: /**\n         * The configuration used to match this route\n         * @return {?}\n         */\n        function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = rxjs_operator_map.map.call(this.params, function (p) { return convertToParamMap(p); });\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    rxjs_operator_map.map.call(this.queryParams, function (p) { return convertToParamMap(p); });\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRoute.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * \\@internal\n * @param {?} route\n * @return {?}\n */\nfunction inheritedParamsDataResolve(route) {\n    var /** @type {?} */ pathToRoot = route.pathFromRoot;\n    var /** @type {?} */ inhertingStartingFrom = pathToRoot.length - 1;\n    while (inhertingStartingFrom >= 1) {\n        var /** @type {?} */ current = pathToRoot[inhertingStartingFrom];\n        var /** @type {?} */ parent_1 = pathToRoot[inhertingStartingFrom - 1];\n        // current route is an empty path => inherits its parent's params and data\n        if (current.routeConfig && current.routeConfig.path === '') {\n            inhertingStartingFrom--;\n            // parent is componentless => current route should inherit its params and data\n        }\n        else if (!parent_1.component) {\n            inhertingStartingFrom--;\n        }\n        else {\n            break;\n        }\n    }\n    return pathToRoot.slice(inhertingStartingFrom).reduce(function (res, curr) {\n        var /** @type {?} */ params = __assign({}, res.params, curr.params);\n        var /** @type {?} */ data = __assign({}, res.data, curr.data);\n        var /** @type {?} */ resolve = __assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, /** @type {?} */ ({ params: {}, data: {}, resolve: {} }));\n}\n/**\n * \\@whatItDoes Contains the information about a route associated with a component loaded in an\n * outlet\n * at a particular moment in time. ActivatedRouteSnapshot can also be used to traverse the router\n * state tree.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * \\@stable\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(url, params, queryParams, fragment, data, outlet, component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: /**\n         * The root of the router state\n         * @return {?}\n         */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /**\n         * The parent of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /**\n         * The first child of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /**\n         * The children of this route in the router state tree\n         * @return {?}\n         */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /**\n         * The path from the root of the router state tree to this route\n         * @return {?}\n         */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ActivatedRouteSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var /** @type {?} */ matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * \\@whatItDoes Represents the state of the router at a moment in time.\n *\n * \\@howToUse\n *\n * ```\n * \\@Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * \\@description\n * RouterStateSnapshot is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * \\@stable\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    __extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(/** @type {?} */ (_this), root);\n        return _this;\n    }\n    /**\n     * @return {?}\n     */\n    RouterStateSnapshot.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\n/**\n * @template U, T\n * @param {?} state\n * @param {?} node\n * @return {?}\n */\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction serializeNode(node) {\n    var /** @type {?} */ c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(\", \") + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n * @param {?} route\n * @return {?}\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var /** @type {?} */ currentSnapshot = route.snapshot;\n        var /** @type {?} */ nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            (/** @type {?} */ (route.queryParams)).next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            (/** @type {?} */ (route.fragment)).next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            (/** @type {?} */ (route.params)).next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            (/** @type {?} */ (route.url)).next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            (/** @type {?} */ (route.data)).next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        (/** @type {?} */ (route.data)).next(route._futureSnapshot.data);\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction equalParamsAndUrlSegments(a, b) {\n    var /** @type {?} */ equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var /** @type {?} */ parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, /** @type {?} */ ((b.parent))));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var /** @type {?} */ root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?=} prevState\n * @return {?}\n */\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var /** @type {?} */ value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var /** @type {?} */ children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var /** @type {?} */ tree = (/** @type {?} */ (routeReuseStrategy.retrieve(curr.value))).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree);\n        return tree;\n    }\n    else {\n        var /** @type {?} */ value = createActivatedRoute(curr.value);\n        var /** @type {?} */ children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\n/**\n * @param {?} curr\n * @param {?} result\n * @return {?}\n */\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var /** @type {?} */ i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\n/**\n * @param {?} routeReuseStrategy\n * @param {?} curr\n * @param {?} prevState\n * @return {?}\n */\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        for (var _i = 0, _a = prevState.children; _i < _a.length; _i++) {\n            var p = _a[_i];\n            if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                return createNode(routeReuseStrategy, child, p);\n            }\n        }\n        return createNode(routeReuseStrategy, child);\n    });\n}\n/**\n * @param {?} c\n * @return {?}\n */\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs_BehaviorSubject.BehaviorSubject(c.url), new rxjs_BehaviorSubject.BehaviorSubject(c.params), new rxjs_BehaviorSubject.BehaviorSubject(c.queryParams), new rxjs_BehaviorSubject.BehaviorSubject(c.fragment), new rxjs_BehaviorSubject.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} route\n * @param {?} urlTree\n * @param {?} commands\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var /** @type {?} */ startingPosition = findStartingPosition(nav, urlTree, route);\n    var /** @type {?} */ segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * @param {?} oldSegmentGroup\n * @param {?} newSegmentGroup\n * @param {?} urlTree\n * @param {?} queryParams\n * @param {?} fragment\n * @return {?}\n */\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var /** @type {?} */ qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\n/**\n * @param {?} current\n * @param {?} oldSegment\n * @param {?} newSegment\n * @return {?}\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var /** @type {?} */ children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var /** @type {?} */ cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    /**\n     * @return {?}\n     */\n    Navigation.prototype.toRoot = /**\n     * @return {?}\n     */\n    function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/**\n * Transforms commands to a normalized `Navigation`\n * @param {?} commands\n * @return {?}\n */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var /** @type {?} */ numberOfDoubleDots = 0;\n    var /** @type {?} */ isAbsolute = false;\n    var /** @type {?} */ res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var /** @type {?} */ outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return res.concat([{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return res.concat([cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return res.concat([cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return res.concat([cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\n/**\n * @param {?} nav\n * @param {?} tree\n * @param {?} route\n * @return {?}\n */\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var /** @type {?} */ modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var /** @type {?} */ index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\n/**\n * @param {?} group\n * @param {?} index\n * @param {?} numberOfDoubleDots\n * @return {?}\n */\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var /** @type {?} */ g = group;\n    var /** @type {?} */ ci = index;\n    var /** @type {?} */ dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = /** @type {?} */ ((g.parent));\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\n/**\n * @param {?} command\n * @return {?}\n */\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var /** @type {?} */ m = prefixedWith(segmentGroup, startIndex, commands);\n    var /** @type {?} */ slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var /** @type {?} */ g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var /** @type {?} */ outlets_2 = getOutlets(commands);\n        var /** @type {?} */ children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ currentCommandIndex = 0;\n    var /** @type {?} */ currentPathIndex = startIndex;\n    var /** @type {?} */ noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var /** @type {?} */ path = segmentGroup.segments[currentPathIndex];\n        var /** @type {?} */ curr = getPath(commands[currentCommandIndex]);\n        var /** @type {?} */ next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} startIndex\n * @param {?} commands\n * @return {?}\n */\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var /** @type {?} */ paths = segmentGroup.segments.slice(0, startIndex);\n    var /** @type {?} */ i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var /** @type {?} */ children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var /** @type {?} */ p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var /** @type {?} */ curr = getPath(commands[i]);\n        var /** @type {?} */ next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\n/**\n * @param {?} outlets\n * @return {?}\n */\nfunction createNewSegmentChildren(outlets) {\n    var /** @type {?} */ children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\n/**\n * @param {?} params\n * @return {?}\n */\nfunction stringify(params) {\n    var /** @type {?} */ res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\n/**\n * @param {?} path\n * @param {?} params\n * @param {?} segment\n * @return {?}\n */\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n    }\n    Object.defineProperty(CanActivate.prototype, \"route\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    PreActivation.prototype.initialize = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.future._root;\n        var /** @type {?} */ currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.checkGuards = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs_observable_of.of(true);\n        }\n        var /** @type {?} */ canDeactivate$ = this.runCanDeactivateChecks();\n        return rxjs_operator_mergeMap.mergeMap.call(canDeactivate$, function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs_observable_of.of(false); });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.resolveData = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs_observable_of.of(null);\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) { return _this.runResolve(check.route); });\n        return rxjs_operator_reduce.reduce.call(runningChecks$, function (_, __) { return _; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isDeactivating = /**\n     * @return {?}\n     */\n    function () { return this.canDeactivateChecks.length !== 0; };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.isActivating = /**\n     * @return {?}\n     */\n    function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupChildRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var /** @type {?} */ prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, /** @type {?} */ ((contexts)).getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    PreActivation.prototype.setupRouteGuards = /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @param {?} futurePath\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts, futurePath) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        var /** @type {?} */ context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var /** @type {?} */ shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, /** @type {?} */ ((future.routeConfig)).runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var /** @type {?} */ outlet = /** @type {?} */ ((/** @type {?} */ ((context)).outlet));\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    PreActivation.prototype.shouldRunGuardsAndResolvers = /**\n     * @param {?} curr\n     * @param {?} future\n     * @param {?} mode\n     * @return {?}\n     */\n    function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    PreActivation.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} context\n     * @return {?}\n     */\n    function (route, context) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(route);\n        var /** @type {?} */ r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canDeactivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_mergeMap.mergeMap.call(checks$, function (check) { return _this.runCanDeactivate(check.component, check.route); });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n    };\n    /**\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChecks = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ checks$ = rxjs_observable_from.from(this.canActivateChecks);\n        var /** @type {?} */ runningChecks$ = rxjs_operator_concatMap.concatMap.call(checks$, function (check) {\n            return andObservables(rxjs_observable_from.from([\n                _this.fireChildActivationStart(check.route.parent), _this.fireActivationStart(check.route),\n                _this.runCanActivateChild(check.path), _this.runCanActivate(check.route)\n            ]));\n        });\n        return rxjs_operator_every.every.call(runningChecks$, function (result) { return result === true; });\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireActivationStart = /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.fireChildActivationStart = /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs_observable_of.of(true);\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivate = /**\n     * @param {?} future\n     * @return {?}\n     */\n    function (future) {\n        var _this = this;\n        var /** @type {?} */ canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(canActivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, future);\n            var /** @type {?} */ observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return andObservables(obs);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    PreActivation.prototype.runCanActivateChild = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var /** @type {?} */ future = path[path.length - 1];\n        var /** @type {?} */ canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs_operator_map.map.call(rxjs_observable_from.from(canActivateChildGuards), function (d) {\n            var /** @type {?} */ obs = rxjs_operator_map.map.call(rxjs_observable_from.from(d.guards), function (c) {\n                var /** @type {?} */ guard = _this.getToken(c, d.node);\n                var /** @type {?} */ observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return rxjs_operator_first.first.call(observable);\n            });\n            return andObservables(obs);\n        }));\n    };\n    /**\n     * @param {?} p\n     * @return {?}\n     */\n    PreActivation.prototype.extractCanActivateChild = /**\n     * @param {?} p\n     * @return {?}\n     */\n    function (p) {\n        var /** @type {?} */ canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    PreActivation.prototype.runCanDeactivate = /**\n     * @param {?} component\n     * @param {?} curr\n     * @return {?}\n     */\n    function (component, curr) {\n        var _this = this;\n        var /** @type {?} */ canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs_observable_of.of(true);\n        var /** @type {?} */ canDeactivate$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(canDeactivate), function (c) {\n            var /** @type {?} */ guard = _this.getToken(c, curr);\n            var /** @type {?} */ observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return rxjs_operator_first.first.call(observable);\n        });\n        return rxjs_operator_every.every.call(canDeactivate$, function (result) { return result === true; });\n    };\n    /**\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.runResolve = /**\n     * @param {?} future\n     * @return {?}\n     */\n    function (future) {\n        var /** @type {?} */ resolve = future._resolve;\n        return rxjs_operator_map.map.call(this.resolveNode(resolve, future), function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = __assign({}, future.data, inheritedParamsDataResolve(future).resolve);\n            return null;\n        });\n    };\n    /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.resolveNode = /**\n     * @param {?} resolve\n     * @param {?} future\n     * @return {?}\n     */\n    function (resolve, future) {\n        var _this = this;\n        var /** @type {?} */ keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs_observable_of.of({});\n        }\n        if (keys.length === 1) {\n            var /** @type {?} */ key_1 = keys[0];\n            return rxjs_operator_map.map.call(this.getResolver(resolve[key_1], future), function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            });\n        }\n        var /** @type {?} */ data = {};\n        var /** @type {?} */ runningResolvers$ = rxjs_operator_mergeMap.mergeMap.call(rxjs_observable_from.from(keys), function (key) {\n            return rxjs_operator_map.map.call(_this.getResolver(resolve[key], future), function (value) {\n                data[key] = value;\n                return value;\n            });\n        });\n        return rxjs_operator_map.map.call(rxjs_operator_last.last.call(runningResolvers$), function () { return data; });\n    };\n    /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    PreActivation.prototype.getResolver = /**\n     * @param {?} injectionToken\n     * @param {?} future\n     * @return {?}\n     */\n    function (injectionToken, future) {\n        var /** @type {?} */ resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    PreActivation.prototype.getToken = /**\n     * @param {?} token\n     * @param {?} snapshot\n     * @return {?}\n     */\n    function (token, snapshot) {\n        var /** @type {?} */ config = closestLoadedConfig(snapshot);\n        var /** @type {?} */ injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\n/**\n * @param {?} rootComponentType\n * @param {?} config\n * @param {?} urlTree\n * @param {?} url\n * @return {?}\n */\nfunction recognize(rootComponentType, config, urlTree, url) {\n    return new Recognizer(rootComponentType, config, urlTree, url).recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n    }\n    /**\n     * @return {?}\n     */\n    Recognizer.prototype.recognize = /**\n     * @return {?}\n     */\n    function () {\n        try {\n            var /** @type {?} */ rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var /** @type {?} */ children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var /** @type {?} */ root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var /** @type {?} */ rootNode = new TreeNode(root, children);\n            var /** @type {?} */ routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs_observable_of.of(routeState);\n        }\n        catch (/** @type {?} */ e) {\n            return new rxjs_Observable.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    Recognizer.prototype.inheritParamsAndData = /**\n     * @param {?} routeNode\n     * @return {?}\n     */\n    function (routeNode) {\n        var _this = this;\n        var /** @type {?} */ route = routeNode.value;\n        var /** @type {?} */ i = inheritedParamsDataResolve(route);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentGroup = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    Recognizer.prototype.processChildren = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @return {?}\n     */\n    function (config, segmentGroup) {\n        var _this = this;\n        var /** @type {?} */ children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegment = /**\n     * @param {?} config\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (config, segmentGroup, segments, outlet) {\n        for (var _i = 0, config_1 = config; _i < config_1.length; _i++) {\n            var r = config_1[_i];\n            try {\n                return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n            }\n            catch (/** @type {?} */ e) {\n                if (!(e instanceof NoMatch$1))\n                    throw e;\n            }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n    };\n    /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.noLeftoversInUrl = /**\n     * @param {?} segmentGroup\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    Recognizer.prototype.processSegmentAgainstRoute = /**\n     * @param {?} route\n     * @param {?} rawSegment\n     * @param {?} segments\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var /** @type {?} */ snapshot;\n        var /** @type {?} */ consumedSegments = [];\n        var /** @type {?} */ rawSlicedSegments = [];\n        if (route.path === '**') {\n            var /** @type {?} */ params = segments.length > 0 ? /** @type {?} */ ((last$1(segments))).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var /** @type {?} */ result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(this.urlTree.queryParams), /** @type {?} */ ((this.urlTree.fragment)), getData(route), outlet, /** @type {?} */ ((route.component)), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var /** @type {?} */ childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var /** @type {?} */ children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var /** @type {?} */ children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return /** @type {?} */ ((route._loadedConfig)).routes;\n    }\n    return [];\n}\n/**\n * @param {?} segmentGroup\n * @param {?} route\n * @param {?} segments\n * @return {?}\n */\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var /** @type {?} */ matcher = route.matcher || defaultUrlMatcher;\n    var /** @type {?} */ res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var /** @type {?} */ posParams = {};\n    forEach(/** @type {?} */ ((res.posParams)), function (v, k) { posParams[k] = v.path; });\n    var /** @type {?} */ parameters = res.consumed.length > 0 ? __assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction checkOutletNameUniqueness(nodes) {\n    var /** @type {?} */ names = {};\n    nodes.forEach(function (n) {\n        var /** @type {?} */ routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var /** @type {?} */ p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var /** @type {?} */ c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getSourceSegmentGroup(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\n/**\n * @param {?} segmentGroup\n * @return {?}\n */\nfunction getPathIndexShift(segmentGroup) {\n    var /** @type {?} */ s = segmentGroup;\n    var /** @type {?} */ res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} slicedSegments\n * @param {?} config\n * @return {?}\n */\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var /** @type {?} */ s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var /** @type {?} */ s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @param {?} children\n * @return {?}\n */\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var /** @type {?} */ res = {};\n    for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n        var r = routes_1[_i];\n        if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = segmentGroup.segments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return __assign({}, children, res);\n}\n/**\n * @param {?} segmentGroup\n * @param {?} consumedSegments\n * @param {?} routes\n * @param {?} primarySegment\n * @return {?}\n */\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var /** @type {?} */ res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    for (var _i = 0, routes_2 = routes; _i < routes_2.length; _i++) {\n        var r = routes_2[_i];\n        if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n            var /** @type {?} */ s = new UrlSegmentGroup([], {});\n            s._sourceSegment = segmentGroup;\n            s._segmentIndexShift = consumedSegments.length;\n            res[getOutlet$1(r)] = s;\n        }\n    }\n    return res;\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} routes\n * @return {?}\n */\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\n/**\n * @param {?} segmentGroup\n * @param {?} slicedSegments\n * @param {?} r\n * @return {?}\n */\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getData(route) {\n    return route.data || {};\n}\n/**\n * @param {?} route\n * @return {?}\n */\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to customize when activated routes get reused.\n *\n * \\@experimental\n * @abstract\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldDetach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.store = /**\n     * @param {?} route\n     * @param {?} detachedTree\n     * @return {?}\n     */\n    function (route, detachedTree) { };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldAttach = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return false; };\n    /**\n     * @param {?} route\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.retrieve = /**\n     * @param {?} route\n     * @return {?}\n     */\n    function (route) { return null; };\n    /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = /**\n     * @param {?} future\n     * @param {?} curr\n     * @return {?}\n     */\n    function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@docsNotRequired\n * \\@experimental\n */\nvar ROUTES = new _angular_core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.load = /**\n     * @param {?} parentInjector\n     * @param {?} route\n     * @return {?}\n     */\n    function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var /** @type {?} */ moduleFactory$ = this.loadModuleFactory(/** @type {?} */ ((route.loadChildren)));\n        return rxjs_operator_map.map.call(moduleFactory$, function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var /** @type {?} */ module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)), module);\n        });\n    };\n    /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    RouterConfigLoader.prototype.loadModuleFactory = /**\n     * @param {?} loadChildren\n     * @return {?}\n     */\n    function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs_observable_fromPromise.fromPromise(this.loader.load(loadChildren));\n        }\n        else {\n            return rxjs_operator_mergeMap.mergeMap.call(wrapIntoObservable(loadChildren()), function (t) {\n                if (t instanceof _angular_core.NgModuleFactory) {\n                    return rxjs_observable_of.of(t);\n                }\n                else {\n                    return rxjs_observable_fromPromise.fromPromise(_this.compiler.compileModuleAsync(t));\n                }\n            });\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a way to migrate AngularJS applications to Angular.\n *\n * \\@experimental\n * @abstract\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * \\@experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return true; };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.extract = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return url; };\n    /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    DefaultUrlHandlingStrategy.prototype.merge = /**\n     * @param {?} newUrlPart\n     * @param {?} wholeUrl\n     * @return {?}\n     */\n    function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the extra options used during navigation.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * \\@internal\n * @param {?} snapshot\n * @return {?}\n */\nfunction defaultRouterHook(snapshot) {\n    return /** @type {?} */ (rxjs_observable_of.of(null));\n}\n/**\n * \\@whatItDoes Provides the navigation and url manipulation capabilities.\n *\n * See {\\@link Routes} for more details and examples.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs_BehaviorSubject.BehaviorSubject(/** @type {?} */ ((null)));\n        this.navigationId = 0;\n        this.events = new rxjs_Subject.Subject();\n        /**\n         * Error handler that is invoked when a navigation errors.\n         *\n         * See {\\@link ErrorHandler} for more information.\n         */\n        this.errorHandler = defaultErrorHandler;\n        /**\n         * Indicates if at least one navigation happened.\n         */\n        this.navigated = false;\n        /**\n         * Used by RouterModule. This allows us to\n         * pause the navigation either before preactivation or after it.\n         * \\@internal\n         */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n         * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n         */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n         * Define what the router should do if it receives a navigation request to the current URL.\n         * By default, the router will ignore this navigation. However, this prevents features such\n         * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n         * current URL. Default is 'ignore'.\n         */\n        this.onSameUrlNavigation = 'ignore';\n        var /** @type {?} */ onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(_angular_core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    Router.prototype.resetRootComponentType = /**\n     * \\@internal\n     * TODO: this should be removed once the constructor of the router made internal\n     * @param {?} rootComponentType\n     * @return {?}\n     */\n    function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    Router.prototype.initialNavigation = /**\n     * Sets up the location change listener and performs the initial navigation.\n     * @return {?}\n     */\n    function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    Router.prototype.setUpLocationChangeListener = /**\n     * Sets up the location change listener.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // Zone.current.wrap is needed because of the issue with RxJS scheduler,\n        // which does not work properly with zone.js in IE and Safari\n        if (!this.locationSubscription) {\n            this.locationSubscription = /** @type {?} */ (this.location.subscribe(Zone.current.wrap(function (change) {\n                var /** @type {?} */ rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var /** @type {?} */ source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, { replaceUrl: true }); }, 0);\n            })));\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: /**\n         * The current url\n         * @return {?}\n         */\n        function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    Router.prototype.triggerEvent = /**\n     * \\@internal\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) { (/** @type {?} */ (this.events)).next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    Router.prototype.resetConfig = /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     * @param {?} config\n     * @return {?}\n     */\n    function (config) {\n        validateConfig(config);\n        this.config = config;\n        this.navigated = false;\n    };\n    /** @docsNotRequired */\n    /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    Router.prototype.ngOnDestroy = /**\n     * \\@docsNotRequired\n     * @return {?}\n     */\n    function () { this.dispose(); };\n    /** Disposes of the router */\n    /**\n     * Disposes of the router\n     * @return {?}\n     */\n    Router.prototype.dispose = /**\n     * Disposes of the router\n     * @return {?}\n     */\n    function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = /** @type {?} */ ((null));\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    Router.prototype.createUrlTree = /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     * @param {?} commands\n     * @param {?=} navigationExtras\n     * @return {?}\n     */\n    function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (_angular_core.isDevMode() && preserveQueryParams && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var /** @type {?} */ a = relativeTo || this.routerState.root;\n        var /** @type {?} */ f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var /** @type {?} */ q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = __assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, /** @type {?} */ ((q)), /** @type {?} */ ((f)));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigateByUrl = /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     * @param {?} url\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var /** @type {?} */ urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var /** @type {?} */ mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    Router.prototype.navigate = /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     * @param {?} commands\n     * @param {?=} extras\n     * @return {?}\n     */\n    function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a {@link UrlTree} into a string */\n    /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.serializeUrl = /**\n     * Serializes a {\\@link UrlTree} into a string\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a {@link UrlTree} */\n    /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    Router.prototype.parseUrl = /**\n     * Parses a string into a {\\@link UrlTree}\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    Router.prototype.isActive = /**\n     * Returns whether the url is activated\n     * @param {?} url\n     * @param {?} exact\n     * @return {?}\n     */\n    function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var /** @type {?} */ urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    /**\n     * @param {?} params\n     * @return {?}\n     */\n    Router.prototype.removeEmptyProps = /**\n     * @param {?} params\n     * @return {?}\n     */\n    function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var /** @type {?} */ value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.processNavigations = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        rxjs_operator_concatMap.concatMap\n            .call(this.navigations, function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return /** @type {?} */ (rxjs_observable_of.of(null));\n            }\n        })\n            .subscribe(function () { });\n    };\n    /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    Router.prototype.scheduleNavigation = /**\n     * @param {?} rawUrl\n     * @param {?} source\n     * @param {?} extras\n     * @return {?}\n     */\n    function (rawUrl, source, extras) {\n        var /** @type {?} */ lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var /** @type {?} */ resolve = null;\n        var /** @type {?} */ reject = null;\n        var /** @type {?} */ promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var /** @type {?} */ id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    Router.prototype.executeScheduledNavigation = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject;\n        var /** @type {?} */ url = this.urlHandlingStrategy.extract(rawUrl);\n        var /** @type {?} */ urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);\n            })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            (/** @type {?} */ (this.events)).next(new NavigationStart(id, this.serializeUrl(url)));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);\n            })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    Router.prototype.runNavigate = /**\n     * @param {?} url\n     * @param {?} rawUrl\n     * @param {?} skipLocationChange\n     * @param {?} replaceUrl\n     * @param {?} id\n     * @param {?} precreatedState\n     * @return {?}\n     */\n    function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            (/** @type {?} */ (this.events))\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var /** @type {?} */ urlAndSnapshot$;\n            if (!precreatedState) {\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                var /** @type {?} */ redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = rxjs_operator_mergeMap.mergeMap.call(redirectsApplied$, function (appliedUrl) {\n                    return rxjs_operator_map.map.call(recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl)), function (snapshot) {\n                        (/** @type {?} */ (_this.events))\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    });\n                });\n            }\n            else {\n                urlAndSnapshot$ = rxjs_observable_of.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var /** @type {?} */ beforePreactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(urlAndSnapshot$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.beforePreactivation(p.snapshot), function () { return p; });\n            });\n            // run preactivation: guards and data resolvers\n            var /** @type {?} */ preActivation;\n            var /** @type {?} */ preactivationSetup$ = rxjs_operator_map.map.call(beforePreactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                var /** @type {?} */ moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            });\n            var /** @type {?} */ preactivationCheckGuards$ = rxjs_operator_mergeMap.mergeMap.call(preactivationSetup$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot;\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), appliedUrl, snapshot));\n                return rxjs_operator_map.map.call(preActivation.checkGuards(), function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), appliedUrl, snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                });\n            });\n            var /** @type {?} */ preactivationResolveData$ = rxjs_operator_mergeMap.mergeMap.call(preactivationCheckGuards$, function (p) {\n                if (_this.navigationId !== id)\n                    return rxjs_observable_of.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                    return rxjs_operator_map.map.call(preActivation.resolveData(), function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), p.appliedUrl, p.snapshot));\n                        return p;\n                    });\n                }\n                else {\n                    return rxjs_observable_of.of(p);\n                }\n            });\n            var /** @type {?} */ preactivationDone$ = rxjs_operator_mergeMap.mergeMap.call(preactivationResolveData$, function (p) {\n                return rxjs_operator_map.map.call(_this.hooks.afterPreactivation(p.snapshot), function () { return p; });\n            });\n            // create router state\n            // this operation has side effects => route state is being affected\n            var /** @type {?} */ routerState$ = rxjs_operator_map.map.call(preactivationDone$, function (_a) {\n                var appliedUrl = _a.appliedUrl, snapshot = _a.snapshot, shouldActivate = _a.shouldActivate;\n                if (shouldActivate) {\n                    var /** @type {?} */ state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            });\n            // applied the new router state\n            // this operation has side effects\n            var /** @type {?} */ navigationIsSuccessful;\n            var /** @type {?} */ storedState = _this.routerState;\n            var /** @type {?} */ storedUrl = _this.currentUrlTree;\n            routerState$\n                .forEach(function (_a) {\n                var appliedUrl = _a.appliedUrl, state = _a.state, shouldActivate = _a.shouldActivate;\n                if (!shouldActivate || id !== _this.navigationId) {\n                    navigationIsSuccessful = false;\n                    return;\n                }\n                _this.currentUrlTree = appliedUrl;\n                _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n                (/** @type {?} */ (_this)).routerState = state;\n                if (!skipLocationChange) {\n                    var /** @type {?} */ path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                    if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                        _this.location.replaceState(path);\n                    }\n                    else {\n                        _this.location.go(path);\n                    }\n                }\n                new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                    .activate(_this.rootContexts);\n                navigationIsSuccessful = true;\n            })\n                .then(function () {\n                if (navigationIsSuccessful) {\n                    _this.navigated = true;\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                    resolvePromise(true);\n                }\n                else {\n                    _this.resetUrlToCurrentUrlTree();\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                    resolvePromise(false);\n                }\n            }, function (e) {\n                if (isNavigationCancelingError(e)) {\n                    _this.navigated = true;\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                    resolvePromise(false);\n                }\n                else {\n                    _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                    (/** @type {?} */ (_this.events))\n                        .next(new NavigationError(id, _this.serializeUrl(url), e));\n                    try {\n                        resolvePromise(_this.errorHandler(e));\n                    }\n                    catch (/** @type {?} */ ee) {\n                        rejectPromise(ee);\n                    }\n                }\n            });\n        });\n    };\n    /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    Router.prototype.resetStateAndUrl = /**\n     * @param {?} storedState\n     * @param {?} storedUrl\n     * @param {?} rawUrl\n     * @return {?}\n     */\n    function (storedState, storedUrl, rawUrl) {\n        (/** @type {?} */ (this)).routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    /**\n     * @return {?}\n     */\n    Router.prototype.resetUrlToCurrentUrlTree = /**\n     * @return {?}\n     */\n    function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree));\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activate = /**\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (parentContexts) {\n        var /** @type {?} */ futureRoot = this.futureState._root;\n        var /** @type {?} */ currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var /** @type {?} */ childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContext\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContext) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var /** @type {?} */ componentRef = context.outlet.detach();\n            var /** @type {?} */ contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = /**\n     * @param {?} route\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (route, parentContexts) {\n        var _this = this;\n        var /** @type {?} */ context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var /** @type {?} */ children = nodeChildrenAsMap(route);\n            var /** @type {?} */ contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateChildRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var /** @type {?} */ children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    ActivateRoutes.prototype.activateRoutes = /**\n     * @param {?} futureNode\n     * @param {?} currNode\n     * @param {?} parentContexts\n     * @return {?}\n     */\n    function (futureNode, currNode, parentContexts) {\n        var /** @type {?} */ future = futureNode.value;\n        var /** @type {?} */ curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var /** @type {?} */ context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var /** @type {?} */ stored = (/** @type {?} */ (this.routeReuseStrategy.retrieve(future.snapshot)));\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var /** @type {?} */ config = parentLoadedConfig(future.snapshot);\n                    var /** @type {?} */ cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\n/**\n * @param {?} node\n * @return {?}\n */\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\n/**\n * @param {?} snapshot\n * @return {?}\n */\nfunction parentLoadedConfig(snapshot) {\n    for (var /** @type {?} */ s = snapshot.parent; s; s = s.parent) {\n        var /** @type {?} */ route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\n/**\n * @param {?} commands\n * @return {?}\n */\nfunction validateCommands(commands) {\n    for (var /** @type {?} */ i = 0; i < commands.length; i++) {\n        var /** @type {?} */ cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * \\@howToUse\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`\n *\n * When linking to this `user/:name` route, you can write:\n * `<a routerLink='/user/bob'>link to user component</a>`\n *\n * \\@description\n *\n * The RouterLink directives let you link to specific parts of your app.\n *\n * When the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {\\@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {\\@link Router#createUrlTree createUrlTree} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @deprecated 4.0.0 use `queryParamsHandling` instead.\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    RouterLink.prototype.onClick = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: ':not(a)[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['tabindex',] },] },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ElementRef, },\n    ]; };\n    RouterLink.propDecorators = {\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click',] },],\n    };\n    return RouterLink;\n}());\n/**\n * \\@whatItDoes Lets you link to specific parts of your app.\n *\n * See {\\@link RouterLink} for more information.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: /**\n         * @param {?} commands\n         * @return {?}\n         */\n        function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: /**\n         * @param {?} value\n         * @return {?}\n         */\n        function (value) {\n            if (_angular_core.isDevMode() && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.updateTargetUrlAndHref(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.onClick = /**\n     * @param {?} button\n     * @param {?} ctrlKey\n     * @param {?} metaKey\n     * @param {?} shiftKey\n     * @return {?}\n     */\n    function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var /** @type {?} */ extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = /**\n     * @return {?}\n     */\n    function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'a[routerLink]' },] },\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: _angular_common.LocationStrategy, },\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        \"target\": [{ type: _angular_core.HostBinding, args: ['attr.target',] }, { type: _angular_core.Input },],\n        \"queryParams\": [{ type: _angular_core.Input },],\n        \"fragment\": [{ type: _angular_core.Input },],\n        \"queryParamsHandling\": [{ type: _angular_core.Input },],\n        \"preserveFragment\": [{ type: _angular_core.Input },],\n        \"skipLocationChange\": [{ type: _angular_core.Input },],\n        \"replaceUrl\": [{ type: _angular_core.Input },],\n        \"href\": [{ type: _angular_core.HostBinding },],\n        \"routerLink\": [{ type: _angular_core.Input },],\n        \"preserveQueryParams\": [{ type: _angular_core.Input },],\n        \"onClick\": [{ type: _angular_core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n    };\n    return RouterLinkWithHref;\n}());\n/**\n * @param {?} s\n * @return {?}\n */\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Lets you add a CSS class to an element when the link's route becomes active.\n *\n * \\@howToUse\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * \\@description\n *\n * The RouterLinkActive directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngAfterContentInit = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: /**\n         * @param {?} data\n         * @return {?}\n         */\n        function (data) {\n            var /** @type {?} */ classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnChanges = /**\n     * @param {?} changes\n     * @return {?}\n     */\n    function (changes) { this.update(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.update = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var /** @type {?} */ hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                (/** @type {?} */ (_this)).isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    /**\n     * @param {?} router\n     * @return {?}\n     */\n    RouterLinkActive.prototype.isLinkActive = /**\n     * @param {?} router\n     * @return {?}\n     */\n    function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    /**\n     * @return {?}\n     */\n    RouterLinkActive.prototype.hasActiveLinks = /**\n     * @return {?}\n     */\n    function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: _angular_core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] },\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.ElementRef, },\n        { type: _angular_core.Renderer2, },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterLinkActive.propDecorators = {\n        \"links\": [{ type: _angular_core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n        \"linksWithHrefs\": [{ type: _angular_core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n        \"routerLinkActiveOptions\": [{ type: _angular_core.Input },],\n        \"routerLinkActive\": [{ type: _angular_core.Input },],\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) {\\@link RouterOutlet}\n *\n * \\@stable\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = /**\n     * Called when a `RouterOutlet` directive is instantiated\n     * @param {?} childName\n     * @param {?} outlet\n     * @return {?}\n     */\n    function (childName, outlet) {\n        var /** @type {?} */ context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.onOutletReAttached = /**\n     * @param {?} contexts\n     * @return {?}\n     */\n    function (contexts) { this.contexts = contexts; };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getOrCreateContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) {\n        var /** @type {?} */ context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    /**\n     * @param {?} childName\n     * @return {?}\n     */\n    ChildrenOutletContexts.prototype.getContext = /**\n     * @param {?} childName\n     * @return {?}\n     */\n    function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Acts as a placeholder that Angular dynamically fills based on the current router\n * state.\n *\n * \\@howToUse\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * \\@ngModule RouterModule\n *\n * \\@stable\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new _angular_core.EventEmitter();\n        this.deactivateEvents = new _angular_core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var /** @type {?} */ context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return /** @type {?} */ (this._activatedRoute);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    RouterOutlet.prototype.detach = /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     * @return {?}\n     */\n    function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var /** @type {?} */ cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    RouterOutlet.prototype.attach = /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     * @param {?} ref\n     * @param {?} activatedRoute\n     * @return {?}\n     */\n    function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    /**\n     * @return {?}\n     */\n    RouterOutlet.prototype.deactivate = /**\n     * @return {?}\n     */\n    function () {\n        if (this.activated) {\n            var /** @type {?} */ c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    RouterOutlet.prototype.activateWith = /**\n     * @param {?} activatedRoute\n     * @param {?} resolver\n     * @return {?}\n     */\n    function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var /** @type {?} */ snapshot = activatedRoute._futureSnapshot;\n        var /** @type {?} */ component = /** @type {?} */ (/** @type {?} */ ((snapshot.routeConfig)).component);\n        resolver = resolver || this.resolver;\n        var /** @type {?} */ factory = resolver.resolveComponentFactory(component);\n        var /** @type {?} */ childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var /** @type {?} */ injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: _angular_core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] },\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts, },\n        { type: _angular_core.ViewContainerRef, },\n        { type: _angular_core.ComponentFactoryResolver, },\n        { type: undefined, decorators: [{ type: _angular_core.Attribute, args: ['name',] },] },\n        { type: _angular_core.ChangeDetectorRef, },\n    ]; };\n    RouterOutlet.propDecorators = {\n        \"activateEvents\": [{ type: _angular_core.Output, args: ['activate',] },],\n        \"deactivateEvents\": [{ type: _angular_core.Output, args: ['deactivate',] },],\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    OutletInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * \\@whatItDoes Provides a preloading strategy.\n *\n * \\@experimental\n * @abstract\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * \\@howToUse\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * \\@experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    PreloadAllModules.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) {\n        return rxjs_operator_catch._catch.call(fn(), function () { return rxjs_observable_of.of(null); });\n    };\n    return PreloadAllModules;\n}());\n/**\n * \\@whatItDoes Provides a preloading strategy that does not preload any modules.\n *\n * \\@description\n *\n * This strategy is enabled by default.\n *\n * \\@experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    NoPreloading.prototype.preload = /**\n     * @param {?} route\n     * @param {?} fn\n     * @return {?}\n     */\n    function (route, fn) { return rxjs_observable_of.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * \\@stable\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var /** @type {?} */ onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var /** @type {?} */ onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.setUpPreloading = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ navigations$ = rxjs_operator_filter.filter.call(this.router.events, function (e) { return e instanceof NavigationEnd; });\n        this.subscription = rxjs_operator_concatMap.concatMap.call(navigations$, function () { return _this.preload(); }).subscribe(function () { });\n    };\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.preload = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ngModule = this.injector.get(_angular_core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    /**\n     * @return {?}\n     */\n    RouterPreloader.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () { this.subscription.unsubscribe(); };\n    /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterPreloader.prototype.processRoutes = /**\n     * @param {?} ngModule\n     * @param {?} routes\n     * @return {?}\n     */\n    function (ngModule, routes) {\n        var /** @type {?} */ res = [];\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            // we already have the config loaded, just recurse\n            if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                var /** @type {?} */ childConfig = route._loadedConfig;\n                res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                // no config loaded, fetch the config\n            }\n            else if (route.loadChildren && !route.canLoad) {\n                res.push(this.preloadConfig(ngModule, route));\n                // recurse into children\n            }\n            else if (route.children) {\n                res.push(this.processRoutes(ngModule, route.children));\n            }\n        }\n        return rxjs_operator_mergeAll.mergeAll.call(rxjs_observable_from.from(res));\n    };\n    /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    RouterPreloader.prototype.preloadConfig = /**\n     * @param {?} ngModule\n     * @param {?} route\n     * @return {?}\n     */\n    function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var /** @type {?} */ loaded$ = _this.loader.load(ngModule.injector, route);\n            return rxjs_operator_mergeMap.mergeMap.call(loaded$, function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            });\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router, },\n        { type: _angular_core.NgModuleFactoryLoader, },\n        { type: _angular_core.Compiler, },\n        { type: _angular_core.Injector, },\n        { type: PreloadingStrategy, },\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Contains a list of directives\n * \\@stable\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * \\@whatItDoes Is used in DI to configure the router.\n * \\@stable\n */\nvar ROUTER_CONFIGURATION = new _angular_core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * \\@docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new _angular_core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    _angular_common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            _angular_core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, _angular_common.Location, _angular_core.Injector,\n            _angular_core.NgModuleFactoryLoader, _angular_core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new _angular_core.Optional()], [RouteReuseStrategy, new _angular_core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: _angular_core.NgModuleFactoryLoader, useClass: _angular_core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\n/**\n * @return {?}\n */\nfunction routerNgProbeToken() {\n    return new _angular_core.NgProbeToken('Router', Router);\n}\n/**\n * \\@whatItDoes Adds router directives and providers.\n *\n * \\@howToUse\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@description\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n * \\@stable\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {@link ExtraOptions} for more details.\n     */\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {\\@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {\\@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {\\@link ExtraOptions} for more details.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    RouterModule.forRoot = /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see {\\@link ExtraOptions}):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see {\\@link PreloadAllModules}).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * {\\@link ExtraOptions} for more details.\n     * @param {?} routes\n     * @param {?=} config\n     * @return {?}\n     */\n    function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new _angular_core.Optional(), new _angular_core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: _angular_common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        _angular_common.PlatformLocation, [new _angular_core.Inject(_angular_common.APP_BASE_HREF), new _angular_core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: _angular_core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    RouterModule.forChild = /**\n     * Creates a module with all the router directives and a provider registering routes.\n     * @param {?} routes\n     * @return {?}\n     */\n    function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: _angular_core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] },\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n        { type: Router, decorators: [{ type: _angular_core.Optional },] },\n    ]; };\n    return RouterModule;\n}());\n/**\n * @param {?} platformLocationStrategy\n * @param {?} baseHref\n * @param {?=} options\n * @return {?}\n */\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new _angular_common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new _angular_common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * \\@whatItDoes Registers routes.\n *\n * \\@howToUse\n *\n * ```\n * \\@NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * \\@stable\n * @param {?} routes\n * @return {?}\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: _angular_core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\n/**\n * \\@whatItDoes Represents options to configure the router.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @param {?} ref\n * @param {?} urlSerializer\n * @param {?} contexts\n * @param {?} location\n * @param {?} injector\n * @param {?} loader\n * @param {?} compiler\n * @param {?} config\n * @param {?=} opts\n * @param {?=} urlHandlingStrategy\n * @param {?=} routeReuseStrategy\n * @return {?}\n */\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var /** @type {?} */ router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var /** @type {?} */ dom_1 = _angular_platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + ((/** @type {?} */ (e.constructor))).name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    return router;\n}\n/**\n * @param {?} router\n * @return {?}\n */\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs_Subject.Subject();\n    }\n    /**\n     * @return {?}\n     */\n    RouterInitializer.prototype.appInitializer = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ p = this.injector.get(_angular_common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var /** @type {?} */ resolve = /** @type {?} */ ((null));\n            var /** @type {?} */ res = new Promise(function (r) { return resolve = r; });\n            var /** @type {?} */ router = _this.injector.get(Router);\n            var /** @type {?} */ opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return /** @type {?} */ (rxjs_observable_of.of(null));\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    RouterInitializer.prototype.bootstrapListener = /**\n     * @param {?} bootstrappedComponentRef\n     * @return {?}\n     */\n    function (bootstrappedComponentRef) {\n        var /** @type {?} */ opts = this.injector.get(ROUTER_CONFIGURATION);\n        var /** @type {?} */ preloader = this.injector.get(RouterPreloader);\n        var /** @type {?} */ router = this.injector.get(Router);\n        var /** @type {?} */ ref = this.injector.get(_angular_core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next(/** @type {?} */ ((null)));\n        this.resultOfPreactivationDone.complete();\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyEnabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    /**\n     * @param {?} opts\n     * @return {?}\n     */\n    RouterInitializer.prototype.isLegacyDisabled = /**\n     * @param {?} opts\n     * @return {?}\n     */\n    function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: _angular_core.Injectable },\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: _angular_core.Injector, },\n    ]; };\n    return RouterInitializer;\n}());\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\n/**\n * @param {?} r\n * @return {?}\n */\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * \\@experimental\n */\nvar ROUTER_INITIALIZER = new _angular_core.InjectionToken('Router Initializer');\n/**\n * @return {?}\n */\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: _angular_core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: _angular_core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new _angular_core.Version('5.1.3');\n\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\nexports.ɵa = ROUTER_FORROOT_GUARD;\nexports.ɵg = RouterInitializer;\nexports.ɵh = getAppInitializer;\nexports.ɵi = getBootstrapListener;\nexports.ɵd = provideForRootGuard;\nexports.ɵc = provideLocationStrategy;\nexports.ɵj = provideRouterInitializer;\nexports.ɵf = rootRoute;\nexports.ɵb = routerNgProbeToken;\nexports.ɵe = setupRouter;\nexports.ɵk = Tree;\nexports.ɵl = TreeNode;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}