{"version":3,"sources":["compiler.umd.js"],"names":["global","factory","exports","module","define","amd","ng","compiler","this","__extends","d","b","__","constructor","extendStatics","prototype","Object","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","name","props","args","_i","arguments","length","values","apply","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","map","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","result","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","normalizeGenFileSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","srcFileSuffix","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","unescapeIdentifier","substr","unwrapResolvedMetadata","metadata","__symbolic","symbol","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modules","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isNgModule","getNgModuleMetadata","isInjectable","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","indentStr","level","half","floor","formatChain","chain","indent","line","column","postfix","next","formattedError","FORMATTED_MESSAGE","isFormattedError","shouldIgnore","metadataError","advise","METADATA_ERROR","isMetadataError","expandedMessage","REFERENCE_TO_NONEXPORTED_CLASS","VARIABLE_NOT_INITIALIZED","DESTRUCTURE_NOT_SUPPORTED","COULD_NOT_RESOLVE_TYPE","typeName","FUNCTION_CALL_NOT_SUPPORTED","REFERENCE_TO_LOCAL_SYMBOL","LAMBDA_NOT_SUPPORTED","messageAdvise","errorSummary","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","formatMetadataMessageChain","formatMetadataError","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","setPrototypeOf","__proto__","assign","t","call","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","data","first","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","Native","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","eventName","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","SkipSelf","Optional","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","ElementRef","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","cb","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION","TextAst","ngContentIndex","visitText","BoundTextAst","visitBoundText","AttrAst","visitAttr","BoundElementPropertyAst","visitElementProperty","BoundEventAst","handler","calcFullName","visitEvent","ReferenceAst","visitReference","VariableAst","visitVariable","inputs","outputs","references","visitElement","variables","visitEmbeddedTemplate","BoundDirectivePropertyAst","directiveName","templateName","visitDirectiveProperty","DirectiveAst","hostProperties","hostEvents","visitDirective","Builtin","visitNgContent","NullTemplateVisitor","RecursiveTemplateAstVisitor","visitChildren","results","jitDevMode","_f","members","assertNoMembers","JSON","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","encapsulation","template","templateUrl","htmlAst","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","rendererType","matches","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","bootstrapComponents","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","parentOf","childOf","Expansion","visitExpansion","ExpansionCase","expSourceSpan","visitExpansionCase","valueSpan","visitAttribute","startSourceSpan","visitComment","InterpolationConfig","fromArray","markers","style","TagContentType","RAW_TEXT","ESCAPABLE_RAW_TEXT","PARSABLE_DATA","NAMED_ENTITIES","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","empty","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clear","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","annotations","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","def","_dedupeBindings","bindings","names","reversedResult","binding","name_1","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","last","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","NullAstVisitor","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","elements","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","name_2","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","predicate","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","contentType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","prev","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","parent_1","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","parentEl","isClosedByChild","_getParentElementSkippingContainers","container","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","errMsg","stackIndex","splice","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","signature","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","attribute","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","childNodes","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","startIndex","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","locale","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","category","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","QueryList","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","Injector","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","viewDef","elementDef","anchorDef","textDef","directiveDef","queryDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","current","inNot","exec","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","SelectorMatcher","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","addSelectables","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","callback","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","delegate","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","hostView","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","annotation","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","getNgModuleSummary","moduleType","alreadyCollecting","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","_getTypeDescriptor","importedModuleSummary","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declarations","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","provide","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","typeOrFunc","hasUnknownDeps","parameters","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","components","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","valueType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","entries","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_parent","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","size","metas","ElementSchemaRegistry","BOOLEAN","NUMBER","STRING","OBJECT","SCHEMA","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","properties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","hasHost","shouldScope","part_1","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","pipe","getUsedPipes","createDirectiveHostPropertyAsts","elementSelector","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","bindingType","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","ns","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","report","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","templateAst","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","events","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","event","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","TypeCheckLocalResolver","defaultResolver","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","bindingCount","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","nodeFlags","nodeDef","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","bindingIndex","_preprocessUpdateExpression","checkIndex","updateRenderer","_visitElementOrTemplate","queryMatchesExpr","childCount","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","compView","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","updateDirectives","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","diDep","createUpdateStatements","allowEmptyExprs","updateBindingCount","self","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","ResolvedStaticSymbol","staticSymbolCache","errorRecorder","metadataCache","resolvedSymbols","resolvedFilePaths","importAs","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","staticSymbol","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","getImportAs","baseSymbol","baseImportAs","summarizedFileName","summarizedName","getResourcePath","getTypeArity","arity","getKnownModuleName","recordImportAs","sourceSymbol","targetSymbol","recordModuleNameForFileName","invalidateFile","symbols_1","ignoreErrorsFor","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","decorators","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","reportError","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","_originalFileMemo","getOriginalName","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","unwrappedTransformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","getSymbolByModule","containingFile","moduleNameToFileName","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","summaries","reexportSymbol","__symbol","toSummaryFileName","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","_externalIdentifierReferences","typeIndex","dirId","_createTypeCheckBlock","references_1","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","findSymbolDeclaration","refSymbol","findDeclaration","tryFindDeclaration","resolvedMetadata","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","parentPropMetadata_1","parentProp","members_1","propData","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyEagerly","simplifyLazily","simplifyNested","nestedContext","summaryMsg","simplifyCall","functionSymbol","targetFunction","targetExpression","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","scope","done","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","reportingContext","PopulatedScope","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","rootSymbol","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","instance","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","subscribe","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","_addedAotSummaries","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","_addAotSummaries","fn$$1","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","templates","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor"],"mappings":"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gCkB,UAAUU,MAE9D,OAAO,OAEJ+iC,gBAiBP9Z,kBAaJJ,iBAAgBkF,gBAAgBwd,MAC5B,gBACA,cACA,gBAEJ1iB,gBAAgBkF,gBAAgB9lB,OAAQ,YAExC4gB,gBAAgBkF,gBAAgByd,KAC5B,eAAgB,YAAa,YAAa,YAAa,SACvD,SAAU,kBAAmB,kBAAmB,WAAY,cAC5D,UAAW,aAAc,YAAa,WAAY,SAClD,aAAc,gBAAiB,YAAa,eAAgB,cAEhE3iB,gBAAgBkF,gBAAgB0d,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA;;;;;;;AAiBJ,GAAIwnD,uBAAuC,WACvC,QAASA,0BAET,MAAOA,0BAcPC,QAAU,UACVC,OAAS,SACTC,OAAS,SACTC,OAAS,SA2CTC,QACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBA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","file":"compiler.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('@angular/compiler', ['exports'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.compiler = {})));\n}(this, (function (exports) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Attention:\n// This file duplicates types and values from @angular/core\n// so that we are able to make @angular/compiler independent of @angular/core.\n// This is important to prevent a build cycle, as @angular/core needs to\n// be compiled with the compiler.\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = /** @class */ (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.1.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = /** @class */ (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = /** @class */ (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = /** @class */ (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = /** @class */ (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = /** @class */ (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = /** @class */ (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = /** @class */ (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = /** @class */ (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = /** @class */ (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = /** @class */ (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = /** @class */ (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = /** @class */ (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = /** @class */ (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = /** @class */ (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = /** @class */ (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CompilerConfig = /** @class */ (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = /** @class */ (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = /** @class */ (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = /** @class */ (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = /** @class */ (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = /** @class */ (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = /** @class */ (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = /** @class */ (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = /** @class */ (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = /** @class */ (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = /** @class */ (function () {\n    function AstPath(path, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = /** @class */ (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = /** @class */ (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = /** @class */ (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = /** @class */ (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = /** @class */ (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = /** @class */ (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path = [];\n    var /** @type {?} */ visitor = new /** @class */ (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf(ast);\n            if (span.start <= position && position < span.end) {\n                path.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = /** @class */ (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar StyleWithImports = /** @class */ (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = /** @class */ (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = /** @class */ (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = /** @class */ (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = /** @class */ (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = /** @class */ (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = /** @class */ (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = /** @class */ (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParserError = /** @class */ (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = /** @class */ (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = /** @class */ (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = /** @class */ (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = /** @class */ (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = /** @class */ (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = /** @class */ (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = /** @class */ (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = /** @class */ (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = /** @class */ (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = /** @class */ (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = /** @class */ (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = /** @class */ (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = /** @class */ (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = /** @class */ (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = /** @class */ (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = /** @class */ (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = /** @class */ (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = /** @class */ (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = /** @class */ (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = /** @class */ (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = /** @class */ (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = /** @class */ (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = /** @class */ (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = /** @class */ (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = /** @class */ (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = /** @class */ (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = /** @class */ (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = /** @class */ (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = /** @class */ (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = /** @class */ (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = /** @class */ (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = /** @class */ (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = /** @class */ (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = /** @class */ (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = /** @class */ (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? this.msg + \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" :\n            this.msg;\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = /** @class */ (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = /** @class */ (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = /** @class */ (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = /** @class */ (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = /** @class */ (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = /** @class */ (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = /** @class */ (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = /** @class */ (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = /** @class */ (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = /** @class */ (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = /** @class */ (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Message = /** @class */ (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = /** @class */ (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = /** @class */ (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = /** @class */ (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = /** @class */ (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = /** @class */ (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = /** @class */ (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = /** @class */ (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = /** @class */ (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = /** @class */ (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n */\nvar PlaceholderRegistry = /** @class */ (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = /** @class */ (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = /** @class */ (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = /** @class */ (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = /** @class */ (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = /** @class */ (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = /** @class */ (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = /** @class */ (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = /** @class */ (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = /** @class */ (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = /** @class */ (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = /** @class */ (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = /** @class */ (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = /** @class */ (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = /** @class */ (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = /** @class */ (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = /** @class */ (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = /** @class */ (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = /** @class */ (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = /** @class */ (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = /** @class */ (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = /** @class */ (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = /** @class */ (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = /** @class */ (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = /** @class */ (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = /** @class */ (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = /** @class */ (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = /** @class */ (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = /** @class */ (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + normalizeGenFileSuffix(urlWithSuffix[1]);\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path.endsWith('.d.ts')) {\n        return [path.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path.substring(0, lastDot), path.substring(lastDot)];\n    }\n    return [path, ''];\n}\n/**\n * @param {?} srcFileSuffix\n * @return {?}\n */\nfunction normalizeGenFileSuffix(srcFileSuffix) {\n    return srcFileSuffix === '.tsx' ? '.ts' : srcFileSuffix;\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CORE = '@angular/core';\nvar Identifiers = /** @class */ (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' + //\":not(\"\n    '([-\\\\w]+)|' + // \"tag\"\n    '(?:\\\\.([-\\\\w]+))|' + // \".class\"\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' + // \"[name]\", \"[name=value]\",\n    '(\\\\))|' + // \")\"\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = /** @class */ (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = /** @class */ (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = /** @class */ (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = /** @class */ (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = /** @class */ (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, alreadyCollecting) {\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false, alreadyCollecting);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @param {?=} alreadyCollecting\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound, alreadyCollecting) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        if (alreadyCollecting === void 0) { alreadyCollecting = null; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    if (!alreadyCollecting)\n                        alreadyCollecting = new Set();\n                    if (alreadyCollecting.has(importedModuleType)) {\n                        _this._reportError(syntaxError(_this._getTypeDescriptor(importedModuleType) + \" '\" + stringifyType(importedType) + \"' is imported recursively by the module '\" + stringifyType(moduleType) + \"'.\"), moduleType);\n                        return;\n                    }\n                    alreadyCollecting.add(importedModuleType);\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType, alreadyCollecting);\n                    alreadyCollecting.delete(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                if (!alreadyCollecting)\n                    alreadyCollecting = new Set();\n                if (alreadyCollecting.has(exportedType)) {\n                    _this._reportError(syntaxError(_this._getTypeDescriptor(exportedType) + \" '\" + stringify(exportedType) + \"' is exported recursively by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                alreadyCollecting.add(exportedType);\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType, alreadyCollecting);\n                alreadyCollecting.delete(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (isValidType(type)) {\n            if (this.isDirective(type)) {\n                return 'directive';\n            }\n            if (this.isPipe(type)) {\n                return 'pipe';\n            }\n            if (this.isNgModule(type)) {\n                return 'module';\n            }\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = /** @class */ (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = /** @class */ (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = /** @class */ (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = /** @class */ (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = /** @class */ (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = /** @class */ (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = /** @class */ (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = /** @class */ (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = /** @class */ (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = /** @class */ (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = /** @class */ (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = /** @class */ (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = /** @class */ (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = /** @class */ (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = /** @class */ (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = /** @class */ (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = /** @class */ (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = /** @class */ (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = /** @class */ (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = /** @class */ (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = /** @class */ (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = /** @class */ (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = /** @class */ (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = /** @class */ (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = /** @class */ (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = /** @class */ (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = /** @class */ (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = /** @class */ (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = /** @class */ (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = /** @class */ (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = /** @class */ (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = /** @class */ (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = /** @class */ (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = /** @class */ (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = /** @class */ (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = /** @class */ (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = /** @class */ (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = /** @class */ (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = /** @class */ (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = /** @class */ (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = /** @class */ (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = /** @class */ (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = /** @class */ (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = /** @class */ (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = /** @class */ (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = /** @class */ (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = /** @class */ (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = /** @class */ (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = /** @class */ (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = /** @class */ (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = /** @class */ (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = /** @class */ (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = /** @class */ (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = /** @class */ (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = /** @class */ (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = /** @class */ (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = /** @class */ (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = /** @class */ (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = /** @class */ (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = /** @class */ (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = /** @class */ (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = /** @class */ (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = /** @class */ (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = /** @class */ (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = /** @class */ (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT;\n                            break;\n                        default:\n                            type[property] = STRING;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n *\n * Please make sure to keep to edits in sync with the source file.\n *\n * Source:\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n *\n * The original file level comment is reproduced below\n */\n/*\n  This is a limited shim for ShadowDOM css styling.\n  https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/shadow/index.html#styles\n\n  The intention here is to support only the styling features which can be\n  relatively simply implemented. The goal is to allow users to avoid the\n  most obvious pitfalls and do so without compromising performance significantly.\n  For ShadowDOM styling that's not covered here, a set of best practices\n  can be provided that should allow users to accomplish more complex styling.\n\n  The following is a list of specific ShadowDOM styling features and a brief\n  discussion of the approach used to shim.\n\n  Shimmed features:\n\n  * :host, :host-context: ShadowDOM allows styling of the shadowRoot's host\n  element using the :host rule. To shim this feature, the :host styles are\n  reformatted and prefixed with a given scope name and promoted to a\n  document level stylesheet.\n  For example, given a scope name of .foo, a rule like this:\n\n    :host {\n        background: red;\n      }\n    }\n\n  becomes:\n\n    .foo {\n      background: red;\n    }\n\n  * encapsulation: Styles defined within ShadowDOM, apply only to\n  dom inside the ShadowDOM. Polymer uses one of two techniques to implement\n  this feature.\n\n  By default, rules are prefixed with the host element tag name\n  as a descendant selector. This ensures styling does not leak out of the 'top'\n  of the element's ShadowDOM. For example,\n\n  div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n  x-foo div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n\n  Alternatively, if WebComponents.ShadowCSS.strictStyling is set to true then\n  selectors are scoped by adding an attribute selector suffix to each\n  simple selector that contains the host element tag name. Each element\n  in the element's ShadowDOM template is also given the scope attribute.\n  Thus, these rules match only elements that have the scope attribute.\n  For example, given a scope name of x-foo, a rule like this:\n\n    div {\n      font-weight: bold;\n    }\n\n  becomes:\n\n    div[x-foo] {\n      font-weight: bold;\n    }\n\n  Note that elements that are dynamically added to a scope must have the scope\n  selector added to them manually.\n\n  * upper/lower bound encapsulation: Styles which are defined outside a\n  shadowRoot should not cross the ShadowDOM boundary and should not apply\n  inside a shadowRoot.\n\n  This styling behavior is not emulated. Some possible ways to do this that\n  were rejected due to complexity and/or performance concerns include: (1) reset\n  every possible property for every possible selector for a given scope name;\n  (2) re-implement css in javascript.\n\n  As an alternative, users should make sure to use selectors\n  specific to the scope in which they are working.\n\n  * ::distributed: This behavior is not emulated. It's often not necessary\n  to style the contents of a specific insertion point and instead, descendants\n  of the host element can be styled selectively. Users can also create an\n  extra node around an insertion point and style that node's contents\n  via descendent selectors. For example, with a shadowRoot like this:\n\n    <style>\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <content></content>\n\n  could become:\n\n    <style>\n      / *@polyfill .content-container div * /\n      ::content(div) {\n        background: red;\n      }\n    </style>\n    <div class=\"content-container\">\n      <content></content>\n    </div>\n\n  Note the use of @polyfill in the comment above a ShadowDOM specific style\n  declaration. This is a directive to the styling shim to use the selector\n  in comments in lieu of the next selector when running under polyfill.\n*/\nvar ShadowCss = /** @class */ (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        // If a selector appears before :host it should not be shimmed as it\n        // matches on ancestor elements and not on elements in the host's shadow\n        // `:host-context(div)` is transformed to\n        // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n        // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n        // Historically `component-tag:host` was matching the component so we also want to preserve\n        // this behavior to avoid breaking legacy apps (it should not match).\n        // The behavior should be:\n        // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n        // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n        //   `:host-context(tag)`)\n        var /** @type {?} */ hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1;\n        // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n        var /** @type {?} */ shouldScope = !hasHost;\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part_1 = selector.slice(startIndex, res.index).trim();\n            shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n            var /** @type {?} */ scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        var /** @type {?} */ part = selector.substring(startIndex);\n        shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n        scopedSelector += shouldScope ? _scopeSelectorPart(part) : part;\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = /** @class */ (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = /** @class */ (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = /** @class */ (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = /** @class */ (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = /** @class */ (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = /** @class */ (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = /** @class */ (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = /** @class */ (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = /** @class */ (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = /** @class */ (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = /** @class */ (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = /** @class */ (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = /** @class */ (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = /** @class */ (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = /** @class */ (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = /** @class */ (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = /** @class */ (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = /** @class */ (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = /** @class */ (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = /** @class */ (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = /** @class */ (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = /** @class */ (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = /** @class */ (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = /** @class */ (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = /** @class */ (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = /** @class */ (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = /** @class */ (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = /** @class */ (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar TypeCheckLocalResolver = /** @class */ (function () {\n    function TypeCheckLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    TypeCheckLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            // References to the event should not be type-checked.\n            // TODO(chuckj): determine a better type for the event.\n            return variable(DYNAMIC_VAR_NAME);\n        }\n        return null;\n    };\n    return TypeCheckLocalResolver;\n}());\nvar defaultResolver = new TypeCheckLocalResolver();\nvar ViewBuilder = /** @class */ (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : defaultResolver;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = /** @class */ (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = /** @class */ (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = /** @class */ (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE : /** @type {?} */\n            ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = /** @class */ (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = /** @class */ (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = /** @class */ (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ResolvedStaticSymbol = /** @class */ (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = /** @class */ (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(staticSymbol));\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = unwrapResolvedMetadata(this.resolveSymbol(resolvedSymbol.metadata));\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = unwrapResolvedMetadata(baseResolvedSymbol.metadata);\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ _originalFileMemo;\n        var /** @type {?} */ getOriginalName = function () {\n            if (!_originalFileMemo) {\n                // Guess what hte original file name is from the reference. If it has a `.d.ts` extension\n                // replace it with `.ts`. If it already has `.ts` just leave it in place. If it doesn't have\n                // .ts or .d.ts, append `.ts'. Also, if it is in `node_modules`, trim the `node_module`\n                // location as it is not important to finding the file.\n                _originalFileMemo =\n                    topLevelPath.replace(/((\\.ts)|(\\.d\\.ts)|)$/, '.ts').replace(/^.*node_modules[/\\\\]/, '');\n            }\n            return _originalFileMemo;\n        };\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = /** @class */ (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\",\n                                line: map[\"line\"],\n                                character: map[\"character\"],\n                                fileName: getOriginalName()\n                            };\n                        }\n                        return {\n                            __symbolic: 'resolved',\n                            symbol: self.getStaticSymbol(filePath, name_1),\n                            line: map[\"line\"],\n                            character: map[\"character\"],\n                            fileName: getOriginalName()\n                        };\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else if (symbolic === 'error') {\n                    return __assign({}, map, { fileName: getOriginalName() });\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        var /** @type {?} */ unwrappedTransformedMeta = unwrapResolvedMetadata(transformedMeta);\n        if (unwrappedTransformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, unwrappedTransformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md && md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction unwrapResolvedMetadata(metadata) {\n    if (metadata && metadata.__symbolic === 'resolved') {\n        return metadata.symbol;\n    }\n    return metadata;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = /** @class */ (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = /** @class */ (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = /** @class */ (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = /** @class */ (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && unwrapResolvedMetadata(metadata.expression) instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        unwrapResolvedMetadata(metadata.expression.expression) instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = /** @class */ (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(file.fileName, true)[1]);\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }), _this._externalIdentifierReferences([Identifiers.TemplateRef, Identifiers.ElementRef]));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} references\n     * @return {?}\n     */\n    AotCompiler.prototype._externalIdentifierReferences = /**\n     * @param {?} references\n     * @return {?}\n     */\n    function (references) {\n        var /** @type {?} */ result = [];\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            var /** @type {?} */ token = createTokenForExternalReference(this._reflector, reference);\n            if (token.identifier) {\n                result.push(token.identifier.reference);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = normalizeGenFileSuffix(splitTypescriptSuffix(srcFileUrl, true)[1]);\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isNgModule(symbol)) {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = /** @class */ (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar FORMATTED_MESSAGE = 'ngFormattedMessage';\n/**\n * @param {?} level\n * @return {?}\n */\nfunction indentStr(level) {\n    if (level <= 0)\n        return '';\n    if (level < 6)\n        return ['', ' ', '  ', '   ', '    ', '     '][level];\n    var /** @type {?} */ half = indentStr(Math.floor(level / 2));\n    return half + half + (level % 2 === 1 ? ' ' : '');\n}\n/**\n * @param {?} chain\n * @param {?=} indent\n * @return {?}\n */\nfunction formatChain(chain, indent) {\n    if (indent === void 0) { indent = 0; }\n    if (!chain)\n        return '';\n    var /** @type {?} */ position = chain.position ?\n        chain.position.fileName + \"(\" + (chain.position.line + 1) + \",\" + (chain.position.column + 1) + \")\" :\n        '';\n    var /** @type {?} */ prefix = position && indent === 0 ? position + \": \" : '';\n    var /** @type {?} */ postfix = position && indent !== 0 ? \" at \" + position : '';\n    var /** @type {?} */ message = \"\" + prefix + chain.message + postfix;\n    return \"\" + indentStr(indent) + message + ((chain.next && ('\\n' + formatChain(chain.next, indent + 2))) || '');\n}\n/**\n * @param {?} chain\n * @return {?}\n */\nfunction formattedError(chain) {\n    var /** @type {?} */ message = formatChain(chain) + '.';\n    var /** @type {?} */ error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[FORMATTED_MESSAGE] = true;\n    error.chain = chain;\n    error.position = chain.position;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isFormattedError(error) {\n    return !!(/** @type {?} */ (error))[FORMATTED_MESSAGE];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = /** @class */ (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol) {\n            var /** @type {?} */ resolvedMetadata = resolvedSymbol.metadata;\n            if (resolvedMetadata && resolvedMetadata.__symbolic === 'resolved') {\n                resolvedMetadata = resolvedMetadata.symbol;\n            }\n            if (resolvedMetadata instanceof StaticSymbol) {\n                return this.findSymbolDeclaration(resolvedSymbol.metadata);\n            }\n        }\n        return symbol;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(formatMetadataError(metadataError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator\", undefined, \"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class\"), type), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        var /** @type {?} */ rootContext = context;\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyEagerly(value) {\n                return simplifyInContext(context, value, depth, 0);\n            }\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyLazily(value) {\n                return simplifyInContext(context, value, depth, references + 1);\n            }\n            /**\n             * @param {?} nestedContext\n             * @param {?} value\n             * @return {?}\n             */\n            function simplifyNested(nestedContext, value) {\n                if (nestedContext === context) {\n                    // If the context hasn't changed let the exception propagate unmodified.\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                try {\n                    return simplifyInContext(nestedContext, value, depth + 1, references);\n                }\n                catch (/** @type {?} */ e) {\n                    if (isMetadataError(e)) {\n                        // Propagate the message text up but add a message to the chain that explains how we got\n                        // here.\n                        // e.chain implies e.symbol\n                        var /** @type {?} */ summaryMsg = e.chain ? 'references \\'' + /** @type {?} */ ((e.symbol)).name + '\\'' : errorSummary(e);\n                        var /** @type {?} */ summary = \"'\" + nestedContext.name + \"' \" + summaryMsg;\n                        var /** @type {?} */ chain = { message: summary, position: e.position, next: e.chain };\n                        // TODO(chuckj): retrieve the position information indirectly from the collectors node\n                        // map if the metadata is from a .ts file.\n                        self.error({\n                            message: e.message,\n                            advise: e.advise,\n                            context: e.context, chain: chain,\n                            symbol: nestedContext\n                        }, context);\n                    }\n                    else {\n                        // It is probably an internal error.\n                        throw e;\n                    }\n                }\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @param {?} targetExpression\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args, targetExpression) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        self.error({\n                            message: 'Recursion is not supported',\n                            summary: \"called '\" + functionSymbol.name + \"' recursively\",\n                            value: targetFunction\n                        }, functionSymbol);\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyNested(context, arg); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyNested(functionSymbol, value_1);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                var /** @type {?} */ position = undefined;\n                if (targetExpression && targetExpression.__symbolic == 'resolved') {\n                    var /** @type {?} */ line = targetExpression.line;\n                    var /** @type {?} */ character = targetExpression.character;\n                    var /** @type {?} */ fileName = targetExpression.fileName;\n                    if (fileName != null && line != null && character != null) {\n                        position = { fileName: fileName, line: line, column: character };\n                    }\n                }\n                self.error({\n                    message: FUNCTION_CALL_NOT_SUPPORTED,\n                    context: functionSymbol,\n                    value: targetFunction, position: position\n                }, context);\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyEagerly(item.expression);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyNested(staticSymbol, declarationValue);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyEagerly(expression['expression']);\n                                var /** @type {?} */ index = simplifyEagerly(expression['index']);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyNested(selectContext, declarationValue);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyNested(selectContext, selectTarget[member]);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references, as symbol references have\n                                // been converted into 'resolved'\n                                // in the StaticSymbolResolver.\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'resolved':\n                                try {\n                                    return simplify(expression.symbol);\n                                }\n                                catch (/** @type {?} */ e) {\n                                    // If an error is reported evaluating the symbol record the position of the\n                                    // reference in the error so it can\n                                    // be reported in the error message generated from the exception.\n                                    if (isMetadataError(e) && expression.fileName != null &&\n                                        expression.line != null && expression.character != null) {\n                                        e.position = {\n                                            fileName: expression.fileName,\n                                            line: expression.line,\n                                            column: expression.character\n                                        };\n                                    }\n                                    throw e;\n                                }\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions.map(function (arg) { return simplifyNested(context, arg); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions, expression['expression']);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = expression.message;\n                                if (expression['line'] != null) {\n                                    self.error({\n                                        message: message,\n                                        context: expression.context,\n                                        value: expression,\n                                        position: {\n                                            fileName: expression['fileName'],\n                                            line: expression['line'],\n                                            column: expression['character']\n                                        }\n                                    }, context);\n                                }\n                                else {\n                                    self.error({ message: message, context: expression.context }, context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyLazily(value);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            return simplify(value);\n        }\n        var /** @type {?} */ result;\n        try {\n            result = simplifyInContext(context, value, 0, 0);\n        }\n        catch (/** @type {?} */ e) {\n            if (this.errorRecorder) {\n                this.reportError(e, context);\n            }\n            else {\n                throw formatMetadataError(e, context);\n            }\n        }\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path) {\n        if (this.errorRecorder) {\n            this.errorRecorder(formatMetadataError(error, context), (context && context.filePath) || path);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    StaticReflector.prototype.error = /**\n     * @param {?} __0\n     * @param {?} reportingContext\n     * @return {?}\n     */\n    function (_a, reportingContext) {\n        var message = _a.message, summary = _a.summary, advise = _a.advise, position = _a.position, context = _a.context, value = _a.value, symbol = _a.symbol, chain = _a.chain;\n        this.reportError(metadataError(message, summary, advise, position, symbol, context, chain), reportingContext);\n    };\n    return StaticReflector;\n}());\nvar METADATA_ERROR = 'ngMetadataError';\n/**\n * @param {?} message\n * @param {?=} summary\n * @param {?=} advise\n * @param {?=} position\n * @param {?=} symbol\n * @param {?=} context\n * @param {?=} chain\n * @return {?}\n */\nfunction metadataError(message, summary, advise, position, symbol, context, chain) {\n    var /** @type {?} */ error = /** @type {?} */ (syntaxError(message));\n    (/** @type {?} */ (error))[METADATA_ERROR] = true;\n    if (advise)\n        error.advise = advise;\n    if (position)\n        error.position = position;\n    if (summary)\n        error.summary = summary;\n    if (context)\n        error.context = context;\n    if (chain)\n        error.chain = chain;\n    if (symbol)\n        error.symbol = symbol;\n    return error;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isMetadataError(error) {\n    return !!(/** @type {?} */ (error))[METADATA_ERROR];\n}\nvar REFERENCE_TO_NONEXPORTED_CLASS = 'Reference to non-exported class';\nvar VARIABLE_NOT_INITIALIZED = 'Variable not initialized';\nvar DESTRUCTURE_NOT_SUPPORTED = 'Destructuring not supported';\nvar COULD_NOT_RESOLVE_TYPE = 'Could not resolve type';\nvar FUNCTION_CALL_NOT_SUPPORTED = 'Function call not supported';\nvar REFERENCE_TO_LOCAL_SYMBOL = 'Reference to a local symbol';\nvar LAMBDA_NOT_SUPPORTED = 'Lambda not supported';\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction expandedMessage(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"References to a non-exported class are not supported in decorators but \" + context.className + \" was referenced.\";\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'Only initialized variables and constants can be referenced in decorators because the value of this variable is needed by the template compiler';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Referencing an exported destructured variable or constant is not supported in decorators and this value is needed by the template compiler';\n        case COULD_NOT_RESOLVE_TYPE:\n            if (context && context.typeName) {\n                return \"Could not resolve type \" + context.typeName;\n            }\n            break;\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (context && context.name) {\n                return \"Function calls are not supported in decorators but '\" + context.name + \"' was called\";\n            }\n            return 'Function calls are not supported in decorators';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Reference to a local (non-exported) symbols are not supported in decorators but '\" + context.name + \"' was referenced\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Function expressions are not supported in decorators\";\n    }\n    return message;\n}\n/**\n * @param {?} message\n * @param {?} context\n * @return {?}\n */\nfunction messageAdvise(message, context) {\n    switch (message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (context && context.className) {\n                return \"Consider exporting '\" + context.className + \"'\";\n            }\n            break;\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'Consider simplifying to avoid destructuring';\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (context && context.name) {\n                return \"Consider exporting '\" + context.name + \"'\";\n            }\n            break;\n        case LAMBDA_NOT_SUPPORTED:\n            return \"Consider changing the function expression into an exported function\";\n    }\n    return undefined;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction errorSummary(error) {\n    if (error.summary) {\n        return error.summary;\n    }\n    switch (error.message) {\n        case REFERENCE_TO_NONEXPORTED_CLASS:\n            if (error.context && error.context.className) {\n                return \"references non-exported class \" + error.context.className;\n            }\n            break;\n        case VARIABLE_NOT_INITIALIZED:\n            return 'is not initialized';\n        case DESTRUCTURE_NOT_SUPPORTED:\n            return 'is a destructured variable';\n        case COULD_NOT_RESOLVE_TYPE:\n            return 'could not be resolved';\n        case FUNCTION_CALL_NOT_SUPPORTED:\n            if (error.context && error.context.name) {\n                return \"calls '\" + error.context.name + \"'\";\n            }\n            return \"calls a function\";\n        case REFERENCE_TO_LOCAL_SYMBOL:\n            if (error.context && error.context.name) {\n                return \"references local variable \" + error.context.name;\n            }\n            return \"references a local variable\";\n    }\n    return 'contains the error';\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = /** @class */ (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = /** @class */ (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} chain\n * @param {?} advise\n * @return {?}\n */\nfunction formatMetadataMessageChain(chain, advise) {\n    var /** @type {?} */ expanded = expandedMessage(chain.message, chain.context);\n    var /** @type {?} */ nesting = chain.symbol ? \" in '\" + chain.symbol.name + \"'\" : '';\n    var /** @type {?} */ message = \"\" + expanded + nesting;\n    var /** @type {?} */ position = chain.position;\n    var /** @type {?} */ next = chain.next ?\n        formatMetadataMessageChain(chain.next, advise) :\n        advise ? { message: advise } : undefined;\n    return { message: message, position: position, next: next };\n}\n/**\n * @param {?} e\n * @param {?} context\n * @return {?}\n */\nfunction formatMetadataError(e, context) {\n    if (isMetadataError(e)) {\n        // Produce a formatted version of the and leaving enough information in the original error\n        // to recover the formatting information to eventually produce a diagnostic error message.\n        var /** @type {?} */ position = e.position;\n        var /** @type {?} */ chain = {\n            message: \"Error during template compile of '\" + context.name + \"'\",\n            position: position,\n            next: { message: e.message, next: e.chain, context: e.context, symbol: e.symbol }\n        };\n        var /** @type {?} */ advise = e.advise || messageAdvise(e.message, e.context);\n        return formattedError(formatMetadataMessageChain(chain, advise));\n    }\n    return e;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = /** @class */ (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ rootSymbol = staticSymbol.members.length ?\n            this.staticSymbolCache.get(staticSymbol.filePath, staticSymbol.name) :\n            staticSymbol;\n        var /** @type {?} */ summary = this.summaryCache.get(rootSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return (rootSymbol === staticSymbol && summary) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = /** @class */ (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = /** @class */ (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = /** @class */ (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = /** @class */ (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = /** @class */ (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = /** @class */ (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = /** @class */ (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = /** @class */ (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n        this._addedAotSummaries = new Set();\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        this.clearCache();\n        this._addAotSummaries(summaries);\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    JitCompiler.prototype._addAotSummaries = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn$$1) {\n        if (this._addedAotSummaries.has(fn$$1)) {\n            return;\n        }\n        this._addedAotSummaries.add(fn$$1);\n        var /** @type {?} */ summaries = fn$$1();\n        for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n            var /** @type {?} */ entry = summaries[i];\n            if (typeof entry === 'function') {\n                this._addAotSummaries(entry);\n            }\n            else {\n                var /** @type {?} */ summary = /** @type {?} */ (entry);\n                this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n            }\n        }\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        // Note: don't clear the _addedAotSummaries, as they don't change!\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = /** @class */ (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = /** @class */ (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = /** @class */ (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path = path.replace(/^\\/+/, '');\n            return prefix + \"/\" + path;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' + // scheme - ignore special characters\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' + // userInfo\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' + // domain - restrict to letters,\n    '(?::([0-9]+))?' + // port\n    ')?' +\n    '([^?#]+)?' + // path\n    '(?:\\\\?([^#]*))?' + // query\n    '(?:#(.*))?' + // fragment\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path) {\n    if (path == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path[path.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path = parts[_ComponentIndex.Path];\n    path = path == null ? '' : _removeDotSegments(path);\n    parts[_ComponentIndex.Path] = path;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path = baseParts[_ComponentIndex.Path];\n    if (path == null)\n        path = '/';\n    var /** @type {?} */ index = path.lastIndexOf('/');\n    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = /** @class */ (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = /** @class */ (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\nexports.core = core;\nexports.CompilerConfig = CompilerConfig;\nexports.preserveWhitespacesDefault = preserveWhitespacesDefault;\nexports.isLoweredSymbol = isLoweredSymbol;\nexports.createLoweredSymbol = createLoweredSymbol;\nexports.Identifiers = Identifiers;\nexports.JitCompiler = JitCompiler;\nexports.DirectiveResolver = DirectiveResolver;\nexports.PipeResolver = PipeResolver;\nexports.NgModuleResolver = NgModuleResolver;\nexports.DEFAULT_INTERPOLATION_CONFIG = DEFAULT_INTERPOLATION_CONFIG;\nexports.InterpolationConfig = InterpolationConfig;\nexports.NgModuleCompiler = NgModuleCompiler;\nexports.AssertNotNull = AssertNotNull;\nexports.BinaryOperator = BinaryOperator;\nexports.BinaryOperatorExpr = BinaryOperatorExpr;\nexports.BuiltinMethod = BuiltinMethod;\nexports.BuiltinVar = BuiltinVar;\nexports.CastExpr = CastExpr;\nexports.ClassStmt = ClassStmt;\nexports.CommaExpr = CommaExpr;\nexports.CommentStmt = CommentStmt;\nexports.ConditionalExpr = ConditionalExpr;\nexports.DeclareFunctionStmt = DeclareFunctionStmt;\nexports.DeclareVarStmt = DeclareVarStmt;\nexports.ExpressionStatement = ExpressionStatement;\nexports.ExternalExpr = ExternalExpr;\nexports.ExternalReference = ExternalReference;\nexports.FunctionExpr = FunctionExpr;\nexports.IfStmt = IfStmt;\nexports.InstantiateExpr = InstantiateExpr;\nexports.InvokeFunctionExpr = InvokeFunctionExpr;\nexports.InvokeMethodExpr = InvokeMethodExpr;\nexports.LiteralArrayExpr = LiteralArrayExpr;\nexports.LiteralExpr = LiteralExpr;\nexports.LiteralMapExpr = LiteralMapExpr;\nexports.NotExpr = NotExpr;\nexports.ReadKeyExpr = ReadKeyExpr;\nexports.ReadPropExpr = ReadPropExpr;\nexports.ReadVarExpr = ReadVarExpr;\nexports.ReturnStatement = ReturnStatement;\nexports.ThrowStmt = ThrowStmt;\nexports.TryCatchStmt = TryCatchStmt;\nexports.WriteKeyExpr = WriteKeyExpr;\nexports.WritePropExpr = WritePropExpr;\nexports.WriteVarExpr = WriteVarExpr;\nexports.StmtModifier = StmtModifier;\nexports.Statement = Statement;\nexports.collectExternalReferences = collectExternalReferences;\nexports.EmitterVisitorContext = EmitterVisitorContext;\nexports.ViewCompiler = ViewCompiler;\nexports.getParseErrors = getParseErrors;\nexports.isSyntaxError = isSyntaxError;\nexports.syntaxError = syntaxError;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.TextAst = TextAst;\nexports.BoundTextAst = BoundTextAst;\nexports.AttrAst = AttrAst;\nexports.BoundElementPropertyAst = BoundElementPropertyAst;\nexports.BoundEventAst = BoundEventAst;\nexports.ReferenceAst = ReferenceAst;\nexports.VariableAst = VariableAst;\nexports.ElementAst = ElementAst;\nexports.EmbeddedTemplateAst = EmbeddedTemplateAst;\nexports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;\nexports.DirectiveAst = DirectiveAst;\nexports.ProviderAst = ProviderAst;\nexports.ProviderAstType = ProviderAstType;\nexports.NgContentAst = NgContentAst;\nexports.PropertyBindingType = PropertyBindingType;\nexports.NullTemplateVisitor = NullTemplateVisitor;\nexports.RecursiveTemplateAstVisitor = RecursiveTemplateAstVisitor;\nexports.templateVisitAll = templateVisitAll;\nexports.identifierName = identifierName;\nexports.identifierModuleUrl = identifierModuleUrl;\nexports.viewClassName = viewClassName;\nexports.rendererTypeName = rendererTypeName;\nexports.hostViewClassName = hostViewClassName;\nexports.componentFactoryName = componentFactoryName;\nexports.CompileSummaryKind = CompileSummaryKind;\nexports.tokenName = tokenName;\nexports.tokenReference = tokenReference;\nexports.CompileStylesheetMetadata = CompileStylesheetMetadata;\nexports.CompileTemplateMetadata = CompileTemplateMetadata;\nexports.CompileDirectiveMetadata = CompileDirectiveMetadata;\nexports.CompilePipeMetadata = CompilePipeMetadata;\nexports.CompileNgModuleMetadata = CompileNgModuleMetadata;\nexports.TransitiveCompileNgModuleMetadata = TransitiveCompileNgModuleMetadata;\nexports.ProviderMeta = ProviderMeta;\nexports.flatten = flatten;\nexports.templateSourceUrl = templateSourceUrl;\nexports.sharedStylesheetJitUrl = sharedStylesheetJitUrl;\nexports.ngModuleJitUrl = ngModuleJitUrl;\nexports.templateJitUrl = templateJitUrl;\nexports.createAotUrlResolver = createAotUrlResolver;\nexports.createAotCompiler = createAotCompiler;\nexports.AotCompiler = AotCompiler;\nexports.analyzeNgModules = analyzeNgModules;\nexports.analyzeAndValidateNgModules = analyzeAndValidateNgModules;\nexports.analyzeFile = analyzeFile;\nexports.mergeAnalyzedFiles = mergeAnalyzedFiles;\nexports.GeneratedFile = GeneratedFile;\nexports.toTypeScript = toTypeScript;\nexports.formattedError = formattedError;\nexports.isFormattedError = isFormattedError;\nexports.StaticReflector = StaticReflector;\nexports.StaticSymbol = StaticSymbol;\nexports.StaticSymbolCache = StaticSymbolCache;\nexports.ResolvedStaticSymbol = ResolvedStaticSymbol;\nexports.StaticSymbolResolver = StaticSymbolResolver;\nexports.unescapeIdentifier = unescapeIdentifier;\nexports.unwrapResolvedMetadata = unwrapResolvedMetadata;\nexports.AotSummaryResolver = AotSummaryResolver;\nexports.AstPath = AstPath;\nexports.SummaryResolver = SummaryResolver;\nexports.JitSummaryResolver = JitSummaryResolver;\nexports.CompileReflector = CompileReflector;\nexports.createUrlResolverWithoutPackagePrefix = createUrlResolverWithoutPackagePrefix;\nexports.createOfflineCompileUrlResolver = createOfflineCompileUrlResolver;\nexports.UrlResolver = UrlResolver;\nexports.getUrlScheme = getUrlScheme;\nexports.ResourceLoader = ResourceLoader;\nexports.ElementSchemaRegistry = ElementSchemaRegistry;\nexports.Extractor = Extractor;\nexports.I18NHtmlParser = I18NHtmlParser;\nexports.MessageBundle = MessageBundle;\nexports.Serializer = Serializer;\nexports.Xliff = Xliff;\nexports.Xliff2 = Xliff2;\nexports.Xmb = Xmb;\nexports.Xtb = Xtb;\nexports.DirectiveNormalizer = DirectiveNormalizer;\nexports.ParserError = ParserError;\nexports.ParseSpan = ParseSpan;\nexports.AST = AST;\nexports.Quote = Quote;\nexports.EmptyExpr = EmptyExpr;\nexports.ImplicitReceiver = ImplicitReceiver;\nexports.Chain = Chain;\nexports.Conditional = Conditional;\nexports.PropertyRead = PropertyRead;\nexports.PropertyWrite = PropertyWrite;\nexports.SafePropertyRead = SafePropertyRead;\nexports.KeyedRead = KeyedRead;\nexports.KeyedWrite = KeyedWrite;\nexports.BindingPipe = BindingPipe;\nexports.LiteralPrimitive = LiteralPrimitive;\nexports.LiteralArray = LiteralArray;\nexports.LiteralMap = LiteralMap;\nexports.Interpolation = Interpolation;\nexports.Binary = Binary;\nexports.PrefixNot = PrefixNot;\nexports.NonNullAssert = NonNullAssert;\nexports.MethodCall = MethodCall;\nexports.SafeMethodCall = SafeMethodCall;\nexports.FunctionCall = FunctionCall;\nexports.ASTWithSource = ASTWithSource;\nexports.TemplateBinding = TemplateBinding;\nexports.NullAstVisitor = NullAstVisitor;\nexports.RecursiveAstVisitor = RecursiveAstVisitor;\nexports.AstTransformer = AstTransformer;\nexports.visitAstChildren = visitAstChildren;\nexports.TokenType = TokenType;\nexports.Lexer = Lexer;\nexports.Token = Token;\nexports.EOF = EOF;\nexports.isIdentifier = isIdentifier;\nexports.isQuote = isQuote;\nexports.SplitInterpolation = SplitInterpolation;\nexports.TemplateBindingParseResult = TemplateBindingParseResult;\nexports.Parser = Parser;\nexports._ParseAST = _ParseAST;\nexports.ERROR_COMPONENT_TYPE = ERROR_COMPONENT_TYPE;\nexports.CompileMetadataResolver = CompileMetadataResolver;\nexports.Text = Text;\nexports.Expansion = Expansion;\nexports.ExpansionCase = ExpansionCase;\nexports.Attribute = Attribute$1;\nexports.Element = Element;\nexports.Comment = Comment;\nexports.visitAll = visitAll;\nexports.RecursiveVisitor = RecursiveVisitor;\nexports.findNode = findNode;\nexports.ParseTreeResult = ParseTreeResult;\nexports.TreeError = TreeError;\nexports.HtmlParser = HtmlParser;\nexports.HtmlTagDefinition = HtmlTagDefinition;\nexports.getHtmlTagDefinition = getHtmlTagDefinition;\nexports.TagContentType = TagContentType;\nexports.splitNsName = splitNsName;\nexports.isNgContainer = isNgContainer;\nexports.isNgContent = isNgContent;\nexports.isNgTemplate = isNgTemplate;\nexports.getNsPrefix = getNsPrefix;\nexports.mergeNsAndName = mergeNsAndName;\nexports.NAMED_ENTITIES = NAMED_ENTITIES;\nexports.NGSP_UNICODE = NGSP_UNICODE;\nexports.debugOutputAstAsTypeScript = debugOutputAstAsTypeScript;\nexports.TypeScriptEmitter = TypeScriptEmitter;\nexports.ParseLocation = ParseLocation;\nexports.ParseSourceFile = ParseSourceFile;\nexports.ParseSourceSpan = ParseSourceSpan;\nexports.ParseErrorLevel = ParseErrorLevel;\nexports.ParseError = ParseError;\nexports.typeSourceSpan = typeSourceSpan;\nexports.DomElementSchemaRegistry = DomElementSchemaRegistry;\nexports.CssSelector = CssSelector;\nexports.SelectorMatcher = SelectorMatcher;\nexports.SelectorListContext = SelectorListContext;\nexports.SelectorContext = SelectorContext;\nexports.StylesCompileDependency = StylesCompileDependency;\nexports.CompiledStylesheet = CompiledStylesheet;\nexports.StyleCompiler = StyleCompiler;\nexports.TemplateParseError = TemplateParseError;\nexports.TemplateParseResult = TemplateParseResult;\nexports.TemplateParser = TemplateParser;\nexports.splitClasses = splitClasses;\nexports.createElementCssSelector = createElementCssSelector;\nexports.removeSummaryDuplicates = removeSummaryDuplicates;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=compiler.umd.js.map\n"]}