{"version":3,"sources":["core.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","core","Rx","Observable","prototype","this","rxjs_Observable","rxjs_observable_merge","rxjs_operator_share","rxjs_Subject","__extends","d","b","__","constructor","extendStatics","Object","create","makeDecorator","name","props","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","call","annotationInstance","TypeDecorator","cls","hasOwnProperty","ANNOTATIONS","defineProperty","value","push","makeMetadataCtor","ngMetadataName","annotationCls","args","_i","arguments","length","values","apply","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","index","parameters","PARAMETERS","_a","bind","concat","annotation","makePropDecorator","PropDecoratorFactory","decoratorInstance","target","meta","PROP_METADATA","unshift","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ChangeDetectionStrategy","Default","getSymbolIterator","_symbolIterator","Symbol_1","_global","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","current","looseIdentical","a","isNaN","stringify","token","Array","map","join","overriddenName","res","toString","newLineIndex","indexOf","substring","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","type","resolveProvider","provider","deps","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE","useValue","useFactory","useExisting","useClass","staticError","multiProviderMixError","recursivelyProcessProviders","records","resolvedProvider","multi","multiProvider","get","MULTI_PROVIDER_FN","set","options","record","tryResolveToken","parent","notFoundValue","resolveToken","e","Error","path","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","undefined","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","j","annotations","Optional","SkipSelf","Self","Inject","formatError","text","obj","charAt","substr","context","parts","JSON","replace","NEW_LINE","getDebugContext","error","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","console","wrappedError","message","originalError","msg","findFirstClosedCycle","constructResolvingPath","slice","reverse","k","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","params","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","v","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","ctor","parentProto","getPrototypeOf","resolveReflectiveFactory","factoryFn","resolvedDeps","reflector","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","providers","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","from","normalizedProvidersMap","existing","id","resolvedFactories","forEach","Type","dependencies","params_1","t","_extractToken","some","p","metadata","optional","isArray","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise","then","isObservable","subscribe","_appIdRandomProviderFactory","_randomChar","String","fromCharCode","Math","floor","random","_throwError","noComponentFactoryError","component","ERROR_COMPONENT","detectWTF","wtf","trace","events","createScope","flags","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","noopScope","arg0","arg1","noop","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","source","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","setTestabilityGetter","getter","_testabilityGetter","enableProdMode","_runModeLocked","_devMode","isDevMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","createPlatformFactory","parentPlatformFactory","marker","extraProviders","platform","getPlatform","assertPlatform","requiredToken","destroyPlatform","destroy","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","result","catch","optionsReducer","dst","objs","reduce","__assign","remove","list","el","splice","registerModuleFactory","moduleFactories","moduleType","getModuleFactory","flatten","flat","item","flatItem","checkNotEmpty","modulePath","exportName","asNativeElements","debugEls","nativeElement","_queryElementChildren","element","predicate","matches","childNodes","node","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","delete","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","next","item2","done","iterateListLike","o","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","shiftInitState","view","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","err","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","unwrapValue","nodeIdx","bindingIdx","WrappedValue","wrapped","globalBindingIdx","def","bindingIndex","oldValues","createRendererType2","UNDEFINED_RENDERER_TYPE_ID","styles","encapsulation","data","resolveRendererType2","isFilled","ViewEncapsulation","None","_renderCompCount","EMPTY_RENDERER_TYPE_ID","checkBinding","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","root","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","references","valueType","splitDepsDsl","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","match","NS_PREFIX_RE","calcBindingFlags","bindings","interpolate","valueCount","constAndInterp","_toStringWithNull","inlineInterpolate","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","anchorDef","templateFactory","outputIndex","checkIndex","childFlags","directChildFlags","childMatchedQueries","outputs","ns","attrs","template","componentProvider","publicProviders","allProviders","query","ngContent","elementDef","namespaceAndName","fixedAttrs","_b","bindingDefs","_c","namespaceAndName_1","suffixOrSecurityContext","_d","ns_1","name_1","securityContext","suffix","nonMinifiedName","outputDefs","_e","createElement","elDef","rootSelectorOrNode","selectorOrNode","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext","STYLE","unit","setStyle","removeStyle","setProperty","moduleProvideDef","moduleDef","providersByKey","initNgModule","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","depDef","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providerDef","providerInstance","UNDEFINED_VALUE","ngModule","injectable","_createClass","_callFactory","len","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","arr","pop","createComponentFactory","selector","componentType","viewDefFactory","inputs","ngContentSelectors","ComponentFactory_","getComponentViewDefinitionFactory","componentFactory","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","nodeValue","createRendererV1","RendererAdapter","createNgModuleRef","bootstrapComponents","NgModuleRef_","directiveDef","prop","pipeDef","depDefs","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","directive","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryDef","bindingType","filterId","createQuery","QueryList","queryIds","nodeMatchedQueries","tplDef","end","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","calcQueryValues","reset","notify","boundValue","notifyOnChanges","getQueryValue","embeddedView","dvc","projectedView","queryValueType","ngContentDef","appendNgContent","purePipeDef","argCount","_pureExpressionDef","pureArrayDef","pureObjectDef","propToIndex","nbKeys","propertyNames","createPureExpression","checkAndUpdatePureExpressionInline","pipe","transform","checkAndUpdatePureExpressionDynamic","textDef","staticText","prefix","createText","checkAndUpdateTextInline","_addInterpolationPart","setValue","checkAndUpdateTextDynamic","updateDirectives","updateRenderer","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","lastRenderRootNode","validateNode","isPrivateService","isComponent","isNgContainer","newParent","rootNodeFlags","bindingCount","outputCount","nodeCount","parentEnd","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","disposables","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","checkAndUpdateView","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","overrideComponentView","clearOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","viewDef$$1","viewDefOverrides","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","comp","compFactory","hostViewDef","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","has","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","attr","camelCaseToDashCase","input","CAMEL_CASE_REGEXP","m","toLowerCase","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","createNgModuleFactory","ngModuleType","defFactory","NgModuleFactory_","trigger$1","definitions","animate$1","timings","group$1","steps","sequence$1","style$1","tokens","offset","state$1","keyframes$1","transition$1","stateChangeExpr","expr","animation","trigger$$1","animate$$1","group$$1","sequence$$1","style$$1","state$$1","keyframes$$1","transition$$1","setPrototypeOf","__proto__","assign","s","n","_desc","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","OnPush","ChangeDetectorStatus","CheckOnce","Checked","CheckAlways","Detached","Errored","Destroyed","Directive","dir","Component","c","changeDetection","Pipe","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","NgModule","Emulated","Version","full","major","split","minor","patch","VERSION","Injectable","Host","__window","window","__self","WorkerGlobalScope","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_console","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","newKey","Function","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","decorators","getOwnMetadata","fill","_ownAnnotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","setter","method","functionBody","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","identifier","UNDEFINED","ReflectiveInjector","resolve","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","stack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","Promise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","ModuleWithComponentFactories","ngModuleFactory","componentFactories","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","ComponentFactoryBoundToModule","_super","NgModuleRef","NgModuleFactory","wtfEnabled","wtfCreateScope","wtfLeave","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","setTimeout","Subject","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","NgProbeToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","moduleRef","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","observer","stableSub","unstableSub","merge","share","componentOrFactory","compRef","_unloadComponent","location","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","RenderComponentType","templateUrl","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererStyleFlags2","Important","DashCase","Renderer2","NgModuleFactoryLoader","_results","filter","find","toArray","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","loadFactory","loadAndCompile","System","import","factoryClassSuffix","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","EventListener","DebugNode","_debugContext","addChild","listeners","providerTokens","attributes","classes","child","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","ValueUnwrapper","hasWrappedValue","unwrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","add","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","MissingTranslationStrategy","Warning","Ignore","ApplicationModule","NONE","HTML","SCRIPT","URL","RESOURCE_URL","DebugContext","WeakMap","EMPTY_ARRAY","EMPTY_MAP","EMPTY_CONTEXT","_inputs","_outputs","inputsArr","templateName","outputsArr","componentNodeIndex","ComponentRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs","begin","reattach","vcRef","_parentView","createViewRoot","createTemplateAnchor","parentElement","comment","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","fullName","style","_ngModuleDefFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵValueUnwrapper","ɵdevModeEqual","ɵisListLikeIterable","ɵChangeDetectorStatus","ɵisDefaultChangeDetectionStrategy","ɵConsole","ɵComponentFactory","ɵCodegenComponentFactoryResolver","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵregisterModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","ɵccf","ɵcmf","ɵcrt","ɵdid","ɵeld","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","ɵinterpolate","ɵmod","ɵmpd","ɵncd","ɵnov","ɵpid","ɵprd","ɵpad","ɵpod","ɵppd","ɵqud","ɵted","ɵunv","ɵvid","AUTO_STYLE","trigger","group","sequence","keyframes","transition","ɵx","ɵy","ɵbc","ɵz","ɵbb","ɵba","ɵbd","ɵw","ɵk","ɵl","ɵm","ɵf","ɵg","ɵh","ɵi","ɵj","ɵb","ɵc","ɵd","ɵe","ɵn","ɵp","ɵo","ɵs","ɵq","ɵr","ɵa","ɵt","ɵu"],"mappings":"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","file":"core.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs/Observable'), require('rxjs/observable/merge'), require('rxjs/operator/share'), require('rxjs/Subject')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs/Observable', 'rxjs/observable/merge', 'rxjs/operator/share', 'rxjs/Subject'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.core = {}),global.Rx,global.Rx.Observable,global.Rx.Observable.prototype,global.Rx));\n}(this, (function (exports,rxjs_Observable,rxjs_observable_merge,rxjs_operator_share,rxjs_Subject) { 'use strict';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.3\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makePropDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ decoratorInstance = new ((_a = (/** @type {?} */ (PropDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        return function PropDecorator(target, name) {\n            var /** @type {?} */ constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                (/** @type {?} */ (constructor))[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (PropDecoratorFactory)).annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {\\@link ContentChildren}, {\\@link ContentChild}, {\\@link ViewChildren}, {\\@link ViewChild} for\n * more information.\n *\n * \\@stable\n * @abstract\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * Type of the ContentChildren decorator / constructor function.\n *\n * See {\\@link ContentChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChildren decorator and metadata.\n *\n *  \\@stable\n *  \\@Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * Type of the ContentChild decorator / constructor function.\n *\n *\n * \\@stable\n * @record\n */\n\n/**\n * ContentChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChildren decorator / constructor function.\n *\n * See {\\@link ViewChildren}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChildren decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * Type of the ViewChild decorator / constructor function.\n *\n * See {\\@link ViewChild}\n *\n * \\@stable\n * @record\n */\n\n/**\n * ViewChild decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\n/** @enum {number} */\nvar ChangeDetectorStatus = {\n    /**\n       * `CheckOnce` means that after calling detectChanges the mode of the change detector\n       * will become `Checked`.\n       */\n    CheckOnce: 0,\n    /**\n       * `Checked` means that the change detector should be skipped until its mode changes to\n       * `CheckOnce`.\n       */\n    Checked: 1,\n    /**\n       * `CheckAlways` means that after calling detectChanges the mode of the change detector\n       * will remain `CheckAlways`.\n       */\n    CheckAlways: 2,\n    /**\n       * `Detached` means that the change detector sub tree is not a part of the main tree and\n       * should be skipped.\n       */\n    Detached: 3,\n    /**\n       * `Errored` means that the change detector encountered an error checking a binding\n       * or calling a directive lifecycle method and is now in an inconsistent state. Change\n       * detectors in this state will no longer detect changes.\n       */\n    Errored: 4,\n    /**\n       * `Destroyed` means that the change detector is destroyed.\n       */\n    Destroyed: 5,\n};\nChangeDetectorStatus[ChangeDetectorStatus.CheckOnce] = \"CheckOnce\";\nChangeDetectorStatus[ChangeDetectorStatus.Checked] = \"Checked\";\nChangeDetectorStatus[ChangeDetectorStatus.CheckAlways] = \"CheckAlways\";\nChangeDetectorStatus[ChangeDetectorStatus.Detached] = \"Detached\";\nChangeDetectorStatus[ChangeDetectorStatus.Errored] = \"Errored\";\nChangeDetectorStatus[ChangeDetectorStatus.Destroyed] = \"Destroyed\";\n/**\n * @param {?} changeDetectionStrategy\n * @return {?}\n */\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === ChangeDetectionStrategy.Default;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the Input decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Input decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the Output decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Output decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Type of the HostBinding decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostBinding decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * Type of the HostListener decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * HostListener decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a module that also includes the providers.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Interface for schema definitions in \\@NgModules.\n *\n * \\@experimental\n * @record\n */\n\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * \\@stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * \\@experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar ViewEncapsulation = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION = new Version('5.1.3');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = /** @class */ (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new StaticInjector(providers, parent);\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        this.parent = parent;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            e.message = formatError('\\n' + e.message, tokenPath);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction formatError(text, obj) {\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n * @param {?} obj\n * @return {?}\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * \\@experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var /** @type {?} */ i = 0; i < factories.length; i++) {\n            var /** @type {?} */ factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @param {?} rangeType\n * @param {?} action\n * @return {?}\n */\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\n/**\n * @param {?} range\n * @return {?}\n */\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * \\@experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * \\@experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(rxjs_Subject.Subject));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {\\@link GetTestability} implementation used by the Angular testing framework.\n * \\@experimental\n * @param {?} getter\n * @return {?}\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * \\@stable\n * @return {?}\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * \\@experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ marker = new InjectionToken(\"Platform: \" + name);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                createPlatform(Injector.create(providers.concat(extraProviders).concat({ provide: marker, useValue: true })));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create([{ provide: NgZone, useValue: ngZone }], _this.injector);\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new rxjs_Observable.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new rxjs_Observable.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            rxjs_observable_merge.merge(isCurrentlyStable, rxjs_operator_share.share.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for Zone\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n * @abstract\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {\\@link Renderer#setElementProperty setElementProperty} or\n * {\\@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n * @abstract\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/** @enum {number} */\nvar RendererStyleFlags2 = {\n    Important: 1,\n    DashCase: 2,\n};\nRendererStyleFlags2[RendererStyleFlags2.Important] = \"Important\";\nRendererStyleFlags2[RendererStyleFlags2.DashCase] = \"DashCase\";\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * \\@stable\n * @abstract\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * \\@experimental\n * @param {?} id\n * @param {?} factory\n * @return {?}\n */\nfunction registerModuleFactory(id, factory) {\n    var /** @type {?} */ existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n/**\n * @return {?}\n */\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * \\@experimental\n * @param {?} id\n * @return {?}\n */\nfunction getModuleFactory(id) {\n    var /** @type {?} */ factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * \\@experimental\n * @abstract\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * \\@experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.load = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var /** @type {?} */ offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadAndCompile = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _this = this;\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    SystemJsNgModuleLoader.prototype.loadFactory = /**\n     * @param {?} path\n     * @return {?}\n     */\n    function (path) {\n        var _a = path.split(_SEPARATOR), module = _a[0], exportName = _a[1];\n        var /** @type {?} */ factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\n/**\n * @param {?} value\n * @param {?} modulePath\n * @param {?} exportName\n * @return {?}\n */\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = /** @class */ (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * \\@experimental\n * @param {?} debugEls\n * @return {?}\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Helper class for unwrapping WrappedValue s\n */\nvar ValueUnwrapper = /** @class */ (function () {\n    function ValueUnwrapper() {\n        this.hasWrappedValue = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.unwrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (value instanceof WrappedValue) {\n            this.hasWrappedValue = true;\n            return value.wrapped;\n        }\n        return value;\n    };\n    /**\n     * @return {?}\n     */\n    ValueUnwrapper.prototype.reset = /**\n     * @return {?}\n     */\n    function () { this.hasWrappedValue = false; };\n    return ValueUnwrapper;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ? /** @type {?} */\n                ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {\\@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {\\@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {\\@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '\\@angular/core';\n * import { platformBrowserDynamic } from '\\@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @param {?} view\n * @param {?} priorInitState\n * @param {?} newInitState\n * @return {?}\n */\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var /** @type {?} */ state = view.state;\n    var /** @type {?} */ initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n/**\n * @param {?} view\n * @param {?} initState\n * @param {?} index\n * @return {?}\n */\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    overrideComponentView: /** @type {?} */ ((undefined)),\n    clearOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} nodeIdx\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (value instanceof WrappedValue) {\n        value = value.wrapped;\n        var /** @type {?} */ globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var /** @type {?} */ oldValue = view.oldValues[globalBindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n/**\n * @param {?} values\n * @return {?}\n */\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\n/**\n * @param {?=} type\n * @return {?}\n */\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var /** @type {?} */ isFilled = ((type.encapsulation != null && type.encapsulation !== ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} queryId\n * @return {?}\n */\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\n/**\n * @param {?} matchedQueriesDsl\n * @return {?}\n */\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var /** @type {?} */ matchedQueries = {};\n    var /** @type {?} */ matchedQueryIds = 0;\n    var /** @type {?} */ references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var queryId = _a[0], valueType = _a[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\n/**\n * @param {?} deps\n * @return {?}\n */\nfunction splitDepsDsl(deps) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} bindings\n * @return {?}\n */\nfunction calcBindingFlags(bindings) {\n    var /** @type {?} */ flags = 0;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\n/**\n * @param {?} valueCount\n * @param {?} constAndInterp\n * @return {?}\n */\nfunction interpolate(valueCount, constAndInterp) {\n    var /** @type {?} */ result = '';\n    for (var /** @type {?} */ i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\n/**\n * @param {?} valueCount\n * @param {?} c0\n * @param {?} a1\n * @param {?} c1\n * @param {?=} a2\n * @param {?=} c2\n * @param {?=} a3\n * @param {?=} c3\n * @param {?=} a4\n * @param {?=} c4\n * @param {?=} a5\n * @param {?=} c5\n * @param {?=} a6\n * @param {?=} c6\n * @param {?=} a7\n * @param {?=} c7\n * @param {?=} a8\n * @param {?=} c8\n * @param {?=} a9\n * @param {?=} c9\n * @return {?}\n */\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY = [];\nvar EMPTY_MAP = {};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?=} handleEvent\n * @param {?=} templateFactory\n * @return {?}\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} ngContentIndex\n * @param {?} childCount\n * @param {?} namespaceAndName\n * @param {?=} fixedAttrs\n * @param {?=} bindings\n * @param {?=} outputs\n * @param {?=} handleEvent\n * @param {?=} componentView\n * @param {?=} componentRendererType\n * @return {?}\n */\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var /** @type {?} */ ns = /** @type {?} */ ((null));\n    var /** @type {?} */ name = /** @type {?} */ ((null));\n    if (namespaceAndName) {\n        _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var /** @type {?} */ bindingDefs = new Array(bindings.length);\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var _c = bindings[i], bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = splitNamespace(namespaceAndName_1), ns_1 = _d[0], name_1 = _d[1];\n        var /** @type {?} */ securityContext = /** @type {?} */ ((undefined));\n        var /** @type {?} */ suffix = /** @type {?} */ ((undefined));\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = /** @type {?} */ (suffixOrSecurityContext);\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var /** @type {?} */ outputDefs = new Array(outputs.length);\n    for (var /** @type {?} */ i = 0; i < outputs.length; i++) {\n        var _e = outputs[i], target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: /** @type {?} */ (target), eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var /** @type {?} */ attrs = /** @type {?} */ (fixedAttrs.map(function (_a) {\n        var namespaceAndName = _a[0], value = _a[1];\n        var _b = splitNamespace(namespaceAndName), ns = _b[0], name = _b[1];\n        return [ns, name, value];\n    }));\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} flags\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\n/**\n * @param {?} providers\n * @return {?}\n */\nfunction moduleDef(providers) {\n    var /** @type {?} */ providersByKey = {};\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers\n    };\n}\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n/**\n * @param {?} selector\n * @param {?} componentType\n * @param {?} viewDefFactory\n * @param {?} inputs\n * @param {?} outputs\n * @param {?} ngContentSelectors\n * @return {?}\n */\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\n/**\n * @param {?} componentFactory\n * @return {?}\n */\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return (/** @type {?} */ (componentFactory)).viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction nodeValue(view, index) {\n    var /** @type {?} */ def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n        return /** @type {?} */ ((def.element)).template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} childCount\n * @param {?} ctor\n * @param {?} deps\n * @param {?=} props\n * @param {?=} outputs\n * @return {?}\n */\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var /** @type {?} */ bindings = [];\n    if (props) {\n        for (var /** @type {?} */ prop in props) {\n            var _a = props[prop], bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var /** @type {?} */ outputDefs = [];\n    if (outputs) {\n        for (var /** @type {?} */ propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\n/**\n * @param {?} flags\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\n/**\n * @param {?} flags\n * @param {?} matchedQueries\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @return {?}\n */\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\n/**\n * @param {?} checkIndex\n * @param {?} flags\n * @param {?} matchedQueriesDsl\n * @param {?} childCount\n * @param {?} token\n * @param {?} value\n * @param {?} deps\n * @param {?=} bindings\n * @param {?=} outputs\n * @return {?}\n */\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var /** @type {?} */ depDefs = splitDepsDsl(deps);\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    var /** @type {?} */ initIndex = 0;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @param {?} initIndex\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} id\n * @param {?} bindings\n * @return {?}\n */\nfunction queryDef(flags, id, bindings) {\n    var /** @type {?} */ bindingDefs = [];\n    for (var /** @type {?} */ propName in bindings) {\n        var /** @type {?} */ bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} ngContentIndex\n * @param {?} index\n * @return {?}\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\n/**\n * @param {?} checkIndex\n * @param {?} argCount\n * @return {?}\n */\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\n/**\n * @param {?} checkIndex\n * @param {?} propToIndex\n * @return {?}\n */\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var /** @type {?} */ keys = Object.keys(propToIndex);\n    var /** @type {?} */ nbKeys = keys.length;\n    var /** @type {?} */ propertyNames = new Array(nbKeys);\n    for (var /** @type {?} */ i = 0; i < nbKeys; i++) {\n        var /** @type {?} */ key = keys[i];\n        var /** @type {?} */ index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\n/**\n * @param {?} flags\n * @param {?} checkIndex\n * @param {?} propertyNames\n * @return {?}\n */\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var /** @type {?} */ bindings = new Array(propertyNames.length);\n    for (var /** @type {?} */ i = 0; i < propertyNames.length; i++) {\n        var /** @type {?} */ prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} checkIndex\n * @param {?} ngContentIndex\n * @param {?} staticText\n * @return {?}\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var /** @type {?} */ bindings = new Array(staticText.length - 1);\n    for (var /** @type {?} */ i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} flags\n * @param {?} nodes\n * @param {?=} updateDirectives\n * @param {?=} updateRenderer\n * @return {?}\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var /** @type {?} */ viewBindingCount = 0;\n    var /** @type {?} */ viewDisposableCount = 0;\n    var /** @type {?} */ viewNodeFlags = 0;\n    var /** @type {?} */ viewRootNodeFlags = 0;\n    var /** @type {?} */ viewMatchedQueries = 0;\n    var /** @type {?} */ currentParent = null;\n    var /** @type {?} */ currentRenderParent = null;\n    var /** @type {?} */ currentElementHasPublicProviders = false;\n    var /** @type {?} */ currentElementHasPrivateProviders = false;\n    var /** @type {?} */ lastRenderRootNode = null;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var /** @type {?} */ elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? /** @type {?} */ ((currentParent.element)).publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true; /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).publicProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders); /** @type {?} */\n                ((/** @type {?} */ ((currentParent)).element)).allProviders = /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders;\n            }\n            var /** @type {?} */ isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var /** @type {?} */ isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true; /** @type {?} */\n                    ((/** @type {?} */ ((currentParent)).element)).allProviders = Object.create(/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).publicProviders);\n                } /** @type {?} */\n                ((/** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).allProviders))[tokenKey(/** @type {?} */ ((node.provider)).token)] = node;\n            }\n            if (isComponent) {\n                /** @type {?} */ ((/** @type {?} */ ((currentParent)).element)).componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var /** @type {?} */ newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var /** @type {?} */ handleEvent = function (view, nodeIndex, eventName, event) { return ((/** @type {?} */ ((nodes[nodeIndex].element)).handleEvent))(view, eventName, event); };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && /** @type {?} */ ((node.element)).name === null;\n}\n/**\n * @param {?} parent\n * @param {?} node\n * @param {?} nodeCount\n * @return {?}\n */\nfunction validateNode(parent, node, nodeCount) {\n    var /** @type {?} */ template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var /** @type {?} */ parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var /** @type {?} */ parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var /** @type {?} */ callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ overrideComponentView = viewDefOverrides.get(/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentProvider)).provider)).token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar viewDefOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @param {?} comp\n * @param {?} compFactory\n * @return {?}\n */\nfunction debugOverrideComponentView(comp, compFactory) {\n    var /** @type {?} */ hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((hostViewDef.nodes[0].element)).componentView)));\n    viewDefOverrides.set(comp, compViewDef);\n}\n/**\n * @return {?}\n */\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    viewDefOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} override\n * @return {?}\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\n/**\n * @param {?} comp\n * @param {?} componentFactory\n * @return {?}\n */\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\n/**\n * @return {?}\n */\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n/**\n * @param {?} ngModuleType\n * @param {?} bootstrapComponents\n * @param {?} defFactory\n * @return {?}\n */\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link trigger trigger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link state state animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link transition transition animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link keyframes keyframes animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link style style animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animate animate animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link animateChild animateChild animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link useAnimation useAnimation animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link sequence sequence animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link group group animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * Metadata representing the entry of animations. Instances of this interface are provided via the\n * animation DSL when the {\\@link stagger stagger animation function} is called.\n *\n * \\@experimental Animation support is experimental.\n * @record\n */\n\n/**\n * `trigger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the\n * {\\@link Component#animations component animations metadata page} to gain a better\n * understanding of how animations in Angular are used.\n *\n * `trigger` Creates an animation trigger which will a list of {\\@link state state} and\n * {\\@link transition transition} entries that will be evaluated when the expression\n * bound to the trigger changes.\n *\n * Triggers are registered within the component annotation data under the\n * {\\@link Component#animations animations section}. An animation trigger can be placed on an element\n * within a template by referencing the name of the trigger followed by the expression value that\n * the\n * trigger is bound to (in the form of `[\\@triggerName]=\"expression\"`.\n *\n * Animation trigger bindings strigify values and then match the previous and current values against\n * any linked transitions. If a boolean value is provided into the trigger binding then it will both\n * be represented as `1` or `true` and `0` or `false` for a true and false boolean values\n * respectively.\n *\n * ### Usage\n *\n * `trigger` will create an animation trigger reference based on the provided `name` value. The\n * provided `animation` value is expected to be an array consisting of {\\@link state state} and\n * {\\@link transition transition} declarations.\n *\n * ```typescript\n * \\@Component({\n *   selector: 'my-component',\n *   templateUrl: 'my-component-tpl.html',\n *   animations: [\n *     trigger(\"myAnimationTrigger\", [\n *       state(...),\n *       state(...),\n *       transition(...),\n *       transition(...)\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   myStatusExp = \"something\";\n * }\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * ## Disable Animations\n * A special animation control binding called `\\@.disabled` can be placed on an element which will\n * then disable animations for any inner animation triggers situated within the element as well as\n * any animations on the element itself.\n *\n * When true, the `\\@.disabled` binding will prevent all animations from rendering. The example\n * below shows how to use this feature:\n *\n * ```ts\n * \\@Component({\n *   selector: 'my-component',\n *   template: `\n *     <div [\\@.disabled]=\"isDisabled\">\n *       <div [\\@childAnimation]=\"exp\"></div>\n *     </div>\n *   `,\n *   animations: [\n *     trigger(\"childAnimation\", [\n *       // ...\n *     ])\n *   ]\n * })\n * class MyComponent {\n *   isDisabled = true;\n *   exp = '...';\n * }\n * ```\n *\n * The `\\@childAnimation` trigger will not animate because `\\@.disabled` prevents it from happening\n * (when true).\n *\n * Note that `\\@.disbled` will only disable all animations (this means any animations running on\n * the same element will also be disabled).\n *\n * ### Disabling Animations Application-wide\n * When an area of the template is set to have animations disabled, **all** inner components will\n * also have their animations disabled as well. This means that all animations for an angular\n * application can be disabled by placing a host binding set on `\\@.disabled` on the topmost Angular\n * component.\n *\n * ```ts\n * import {Component, HostBinding} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'app-component',\n *   templateUrl: 'app.component.html',\n * })\n * class AppComponent {\n *   \\@HostBinding('\\@.disabled')\n *   public animationsDisabled = true;\n * }\n * ```\n *\n * ### What about animations that us `query()` and `animateChild()`?\n * Despite inner animations being disabled, a parent animation can {\\@link query query} for inner\n * elements located in disabled areas of the template and still animate them as it sees fit. This is\n * also the case for when a sub animation is queried by a parent and then later animated using {\\@link\n * animateChild animateChild}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$1(name, definitions) {\n    return { type: 7 /* Trigger */, name: name, definitions: definitions, options: {} };\n}\n/**\n * `animate` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `animate` specifies an animation step that will apply the provided `styles` data for a given\n * amount of time based on the provided `timing` expression value. Calls to `animate` are expected\n * to be used within {\\@link sequence an animation sequence}, {\\@link group group}, or {\\@link\n * transition transition}.\n *\n * ### Usage\n *\n * The `animate` function accepts two input parameters: `timing` and `styles`:\n *\n * - `timing` is a string based value that can be a combination of a duration with optional delay\n * and easing values. The format for the expression breaks down to `duration delay easing`\n * (therefore a value such as `1s 100ms ease-out` will be parse itself into `duration=1000,\n * delay=100, easing=ease-out`. If a numeric value is provided then that will be used as the\n * `duration` value in millisecond form.\n * - `styles` is the style input data which can either be a call to {\\@link style style} or {\\@link\n * keyframes keyframes}. If left empty then the styles from the destination state will be collected\n * and used (this is useful when describing an animation step that will complete an animation by\n * {\\@link transition#the-final-animate-call animating to the final state}).\n *\n * ```typescript\n * // various functions for specifying timing data\n * animate(500, style(...))\n * animate(\"1s\", style(...))\n * animate(\"100ms 0.5s\", style(...))\n * animate(\"5s ease\", style(...))\n * animate(\"5s 10ms cubic-bezier(.17,.67,.88,.1)\", style(...))\n *\n * // either style() of keyframes() can be used\n * animate(500, style({ background: \"red\" }))\n * animate(500, keyframes([\n *   style({ background: \"blue\" })),\n *   style({ background: \"red\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$1(timings, styles) {\n    if (styles === void 0) { styles = null; }\n    return { type: 4 /* Animate */, styles: styles, timings: timings };\n}\n/**\n * `group` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `group` specifies a list of animation steps that are all run in parallel. Grouped animations are\n * useful when a series of styles must be animated/closed off at different starting/ending times.\n *\n * The `group` function can either be used within a {\\@link sequence sequence} or a {\\@link transition\n * transition} and it will only continue to the next instruction once all of the inner animation\n * steps have completed.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `group` animation function can either consist of {\\@link\n * style style} or {\\@link animate animate} function calls. Each call to `style()` or `animate()`\n * within a group will be executed instantly (use {\\@link keyframes keyframes} or a {\\@link\n * animate#usage animate() with a delay value} to offset styles to be applied at a later time).\n *\n * ```typescript\n * group([\n *   animate(\"1s\", { background: \"black\" }))\n *   animate(\"2s\", { color: \"white\" }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction group$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 3 /* Group */, steps: steps, options: options };\n}\n/**\n * `sequence` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `sequence` Specifies a list of animation steps that are run one by one. (`sequence` is used by\n * default when an array is passed as animation data into {\\@link transition transition}.)\n *\n * The `sequence` function can either be used within a {\\@link group group} or a {\\@link transition\n * transition} and it will only continue to the next instruction once each of the inner animation\n * steps have completed.\n *\n * To perform animation styling in parallel with other animation steps then have a look at the\n * {\\@link group group} animation function.\n *\n * ### Usage\n *\n * The `steps` data that is passed into the `sequence` animation function can either consist of\n * {\\@link style style} or {\\@link animate animate} function calls. A call to `style()` will apply the\n * provided styling data immediately while a call to `animate()` will apply its styling data over a\n * given time depending on its timing data.\n *\n * ```typescript\n * sequence([\n *   style({ opacity: 0 })),\n *   animate(\"1s\", { opacity: 1 }))\n * ])\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction sequence$1(steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 2 /* Sequence */, steps: steps, options: options };\n}\n/**\n * `style` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `style` declares a key/value object containing CSS properties/styles that can then be used for\n * {\\@link state animation states}, within an {\\@link sequence animation sequence}, or as styling data\n * for both {\\@link animate animate} and {\\@link keyframes keyframes}.\n *\n * ### Usage\n *\n * `style` takes in a key/value string map as data and expects one or more CSS property/value pairs\n * to be defined.\n *\n * ```typescript\n * // string values are used for css properties\n * style({ background: \"red\", color: \"blue\" })\n *\n * // numerical (pixel) values are also supported\n * style({ width: 100, height: 0 })\n * ```\n *\n * #### Auto-styles (using `*`)\n *\n * When an asterix (`*`) character is used as a value then it will be detected from the element\n * being animated and applied as animation data when the animation starts.\n *\n * This feature proves useful for a state depending on layout and/or environment factors; in such\n * cases the styles are calculated just before the animation starts.\n *\n * ```typescript\n * // the steps below will animate from 0 to the\n * // actual height of the element\n * style({ height: 0 }),\n * animate(\"1s\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} tokens\n * @return {?}\n */\nfunction style$1(tokens) {\n    return { type: 6 /* Style */, styles: tokens, offset: null };\n}\n/**\n * `state` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `state` declares an animation state within the given trigger. When a state is active within a\n * component then its associated styles will persist on the element that the trigger is attached to\n * (even when the animation ends).\n *\n * To animate between states, have a look at the animation {\\@link transition transition} DSL\n * function. To register states to an animation trigger please have a look at the {\\@link trigger\n * trigger} function.\n *\n * #### The `void` state\n *\n * The `void` state value is a reserved word that angular uses to determine when the element is not\n * apart of the application anymore (e.g. when an `ngIf` evaluates to false then the state of the\n * associated element is void).\n *\n * #### The `*` (default) state\n *\n * The `*` state (when styled) is a fallback state that will be used if the state that is being\n * animated is not declared within the trigger.\n *\n * ### Usage\n *\n * `state` will declare an animation state with its associated styles\n * within the given trigger.\n *\n * - `stateNameExpr` can be one or more state names separated by commas.\n * - `styles` refers to the {\\@link style styling data} that will be persisted on the element once\n * the state has been reached.\n *\n * ```typescript\n * // \"void\" is a reserved name for a state and is used to represent\n * // the state in which an element is detached from from the application.\n * state(\"void\", style({ height: 0 }))\n *\n * // user-defined states\n * state(\"closed\", style({ height: 0 }))\n * state(\"open, visible\", style({ height: \"*\" }))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} name\n * @param {?} styles\n * @param {?=} options\n * @return {?}\n */\nfunction state$1(name, styles, options) {\n    return { type: 0 /* State */, name: name, styles: styles, options: options };\n}\n/**\n * `keyframes` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `keyframes` specifies a collection of {\\@link style style} entries each optionally characterized\n * by an `offset` value.\n *\n * ### Usage\n *\n * The `keyframes` animation function is designed to be used alongside the {\\@link animate animate}\n * animation function. Instead of applying animations from where they are currently to their\n * destination, keyframes can describe how each style entry is applied and at what point within the\n * animation arc (much like CSS Keyframe Animations do).\n *\n * For each `style()` entry an `offset` value can be set. Doing so allows to specifiy at what\n * percentage of the animate time the styles will be applied.\n *\n * ```typescript\n * // the provided offset values describe when each backgroundColor value is applied.\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\", offset: 0 }),\n *   style({ backgroundColor: \"blue\", offset: 0.2 }),\n *   style({ backgroundColor: \"orange\", offset: 0.3 }),\n *   style({ backgroundColor: \"black\", offset: 1 })\n * ]))\n * ```\n *\n * Alternatively, if there are no `offset` values used within the style entries then the offsets\n * will be calculated automatically.\n *\n * ```typescript\n * animate(\"5s\", keyframes([\n *   style({ backgroundColor: \"red\" }) // offset = 0\n *   style({ backgroundColor: \"blue\" }) // offset = 0.33\n *   style({ backgroundColor: \"orange\" }) // offset = 0.66\n *   style({ backgroundColor: \"black\" }) // offset = 1\n * ]))\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$1(steps) {\n    return { type: 5 /* Keyframes */, steps: steps };\n}\n/**\n * `transition` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. If this information is new, please navigate to the {\\@link\n * Component#animations component animations metadata page} to gain a better understanding of\n * how animations in Angular are used.\n *\n * `transition` declares the {\\@link sequence sequence of animation steps} that will be run when the\n * provided `stateChangeExpr` value is satisfied. The `stateChangeExpr` consists of a `state1 =>\n * state2` which consists of two known states (use an asterix (`*`) to refer to a dynamic starting\n * and/or ending state).\n *\n * A function can also be provided as the `stateChangeExpr` argument for a transition and this\n * function will be executed each time a state change occurs. If the value returned within the\n * function is true then the associated animation will be run.\n *\n * Animation transitions are placed within an {\\@link trigger animation trigger}. For an transition\n * to animate to a state value and persist its styles then one or more {\\@link state animation\n * states} is expected to be defined.\n *\n * ### Usage\n *\n * An animation transition is kicked off the `stateChangeExpr` predicate evaluates to true based on\n * what the previous state is and what the current state has become. In other words, if a transition\n * is defined that matches the old/current state criteria then the associated animation will be\n * triggered.\n *\n * ```typescript\n * // all transition/state changes are defined within an animation trigger\n * trigger(\"myAnimationTrigger\", [\n *   // if a state is defined then its styles will be persisted when the\n *   // animation has fully completed itself\n *   state(\"on\", style({ background: \"green\" })),\n *   state(\"off\", style({ background: \"grey\" })),\n *\n *   // a transition animation that will be kicked off when the state value\n *   // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n *   transition(\"on => off\", animate(500)),\n *\n *   // it is also possible to do run the same animation for both directions\n *   transition(\"on <=> off\", animate(500)),\n *\n *   // or to define multiple states pairs separated by commas\n *   transition(\"on => off, off => void\", animate(500)),\n *\n *   // this is a catch-all state change for when an element is inserted into\n *   // the page and the destination state is unknown\n *   transition(\"void => *\", [\n *     style({ opacity: 0 }),\n *     animate(500)\n *   ]),\n *\n *   // this will capture a state change between any states\n *   transition(\"* => *\", animate(\"1s 0s\")),\n *\n *   // you can also go full out and include a function\n *   transition((fromState, toState) => {\n *     // when `true` then it will allow the animation below to be invoked\n *     return fromState == \"off\" && toState == \"on\";\n *   }, animate(\"1s 0s\"))\n * ])\n * ```\n *\n * The template associated with this component will make use of the `myAnimationTrigger` animation\n * trigger by binding to an element within its template code.\n *\n * ```html\n * <!-- somewhere inside of my-component-tpl.html -->\n * <div [\\@myAnimationTrigger]=\"myStatusExp\">...</div>\n * ```\n *\n * #### The final `animate` call\n *\n * If the final step within the transition steps is a call to `animate()` that **only** uses a\n * timing value with **no style data** then it will be automatically used as the final animation arc\n * for the element to animate itself to the final state. This involves an automatic mix of\n * adding/removing CSS styles so that the element will be in the exact state it should be for the\n * applied state to be presented correctly.\n *\n * ```\n * // start off by hiding the element, but make sure that it animates properly to whatever state\n * // is currently active for \"myAnimationTrigger\"\n * transition(\"void => *\", [\n *   style({ opacity: 0 }),\n *   animate(500)\n * ])\n * ```\n *\n * ### Using :enter and :leave\n *\n * Given that enter (insertion) and leave (removal) animations are so common, the `transition`\n * function accepts both `:enter` and `:leave` values which are aliases for the `void => *` and `*\n * => void` state changes.\n *\n * ```\n * transition(\":enter\", [\n *   style({ opacity: 0 }),\n *   animate(500, style({ opacity: 1 }))\n * ]),\n * transition(\":leave\", [\n *   animate(500, style({ opacity: 0 }))\n * ])\n * ```\n *\n * ### Boolean values\n * if a trigger binding value is a boolean value then it can be matched using a transition\n * expression that compares `true` and `false` or `1` and `0`.\n *\n * ```\n * // in the template\n * <div [\\@openClose]=\"open ? true : false\">...</div>\n *\n * // in the component metadata\n * trigger('openClose', [\n *   state('true', style({ height: '*' })),\n *   state('false', style({ height: '0px' })),\n *   transition('false <=> true', animate(500))\n * ])\n * ```\n *\n * ### Using :increment and :decrement\n * In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\n * can be used to kick off a transition when a numeric value has increased or decreased in value.\n *\n * ```\n * import {group, animate, query, transition, style, trigger} from '\\@angular/animations';\n * import {Component} from '\\@angular/core';\n *\n * \\@Component({\n *   selector: 'banner-carousel-component',\n *   styles: [`\n *     .banner-container {\n *        position:relative;\n *        height:500px;\n *        overflow:hidden;\n *      }\n *     .banner-container > .banner {\n *        position:absolute;\n *        left:0;\n *        top:0;\n *        font-size:200px;\n *        line-height:500px;\n *        font-weight:bold;\n *        text-align:center;\n *        width:100%;\n *      }\n *   `],\n *   template: `\n *     <button (click)=\"previous()\">Previous</button>\n *     <button (click)=\"next()\">Next</button>\n *     <hr>\n *     <div [\\@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n *       <div class=\"banner\"> {{ banner }} </div>\n *     </div>\n *   `\n *   animations: [\n *     trigger('bannerAnimation', [\n *       transition(\":increment\", group([\n *         query(':enter', [\n *           style({ left: '100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '-100%' }))\n *         ])\n *       ])),\n *       transition(\":decrement\", group([\n *         query(':enter', [\n *           style({ left: '-100%' }),\n *           animate('0.5s ease-out', style('*'))\n *         ]),\n *         query(':leave', [\n *           animate('0.5s ease-out', style({ left: '100%' }))\n *         ])\n *       ])),\n *     ])\n *   ]\n * })\n * class BannerCarouselComponent {\n *   allBanners: string[] = ['1', '2', '3', '4'];\n *   selectedIndex: number = 0;\n *\n *   get banners() {\n *      return [this.allBanners[this.selectedIndex]];\n *   }\n *\n *   previous() {\n *     this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n *   }\n *\n *   next() {\n *     this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n *   }\n * }\n * ```\n *\n * {\\@example core/animation/ts/dsl/animation_example.ts region='Component'}\n *\n * \\@experimental Animation support is experimental.\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\nfunction transition$1(stateChangeExpr, steps, options) {\n    if (options === void 0) { options = null; }\n    return { type: 1 /* Transition */, expr: stateChangeExpr, animation: steps, options: options };\n}\n/**\n * `animation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * `var myAnimation = animation(...)` is designed to produce a reusable animation that can be later\n * invoked in another animation or sequence. Reusable animations are designed to make use of\n * animation parameters and the produced animation can be used via the `useAnimation` method.\n *\n * ```\n * var fadeAnimation = animation([\n *   style({ opacity: '{{ start }}' }),\n *   animate('{{ time }}',\n *     style({ opacity: '{{ end }}'}))\n * ], { params: { time: '1000ms', start: 0, end: 1 }});\n * ```\n *\n * If parameters are attached to an animation then they act as **default parameter values**. When an\n * animation is invoked via `useAnimation` then parameter values are allowed to be passed in\n * directly. If any of the passed in parameter values are missing then the default values will be\n * used.\n *\n * ```\n * useAnimation(fadeAnimation, {\n *   params: {\n *     time: '2s',\n *     start: 1,\n *     end: 0\n *   }\n * })\n * ```\n *\n * If one or more parameter values are missing before animated then an error will be thrown.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} steps\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `animateChild` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It works by allowing a queried element to execute its own\n * animation within the animation sequence.\n *\n * Each time an animation is triggered in angular, the parent animation\n * will always get priority and any child animations will be blocked. In order\n * for a child animation to run, the parent animation must query each of the elements\n * containing child animations and then allow the animations to run using `animateChild`.\n *\n * The example HTML code below shows both parent and child elements that have animation\n * triggers that will execute at the same time.\n *\n * ```html\n * <!-- parent-child.component.html -->\n * <button (click)=\"exp =! exp\">Toggle</button>\n * <hr>\n *\n * <div [\\@parentAnimation]=\"exp\">\n *   <header>Hello</header>\n *   <div [\\@childAnimation]=\"exp\">\n *       one\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       two\n *   </div>\n *   <div [\\@childAnimation]=\"exp\">\n *       three\n *   </div>\n * </div>\n * ```\n *\n * Now when the `exp` value changes to true, only the `parentAnimation` animation will animate\n * because it has priority. However, using `query` and `animateChild` each of the inner animations\n * can also fire:\n *\n * ```ts\n * // parent-child.component.ts\n * import {trigger, transition, animate, style, query, animateChild} from '\\@angular/animations';\n * \\@Component({\n *   selector: 'parent-child-component',\n *   animations: [\n *     trigger('parentAnimation', [\n *       transition('false => true', [\n *         query('header', [\n *           style({ opacity: 0 }),\n *           animate(500, style({ opacity: 1 }))\n *         ]),\n *         query('\\@childAnimation', [\n *           animateChild()\n *         ])\n *       ])\n *     ]),\n *     trigger('childAnimation', [\n *       transition('false => true', [\n *         style({ opacity: 0 }),\n *         animate(500, style({ opacity: 1 }))\n *       ])\n *     ])\n *   ]\n * })\n * class ParentChildCmp {\n *   exp: boolean = false;\n * }\n * ```\n *\n * In the animation code above, when the `parentAnimation` transition kicks off it first queries to\n * find the header element and fades it in. It then finds each of the sub elements that contain the\n * `\\@childAnimation` trigger and then allows for their animations to fire.\n *\n * This example can be further extended by using stagger:\n *\n * ```ts\n * query('\\@childAnimation', stagger(100, [\n *   animateChild()\n * ]))\n * ```\n *\n * Now each of the sub animations start off with respect to the `100ms` staggering step.\n *\n * ## The first frame of child animations\n * When sub animations are executed using `animateChild` the animation engine will always apply the\n * first frame of every sub animation immediately at the start of the animation sequence. This way\n * the parent animation does not need to set any initial styling data on the sub elements before the\n * sub animations kick off.\n *\n * In the example above the first frame of the `childAnimation`'s `false => true` transition\n * consists of a style of `opacity: 0`. This is applied immediately when the `parentAnimation`\n * animation transition sequence starts. Only then when the `\\@childAnimation` is queried and called\n * with `animateChild` will it then animate to its destination of `opacity: 1`.\n *\n * Note that this feature designed to be used alongside {\\@link query query()} and it will only work\n * with animations that are assigned using the Angular animation DSL (this means that CSS keyframes\n * and transitions are not handled by this API).\n *\n * \\@experimental Animation support is experimental.\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `useAnimation` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is used to kick off a reusable animation that is created using {\\@link\n * animation animation()}.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `query` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language.\n *\n * query() is used to find one or more inner elements within the current element that is\n * being animated within the sequence. The provided animation steps are applied\n * to the queried element (by default, an array is provided, then this will be\n * treated as an animation sequence).\n *\n * ### Usage\n *\n * query() is designed to collect mutiple elements and works internally by using\n * `element.querySelectorAll`. An additional options object can be provided which\n * can be used to limit the total amount of items to be collected.\n *\n * ```js\n * query('div', [\n *   animate(...),\n *   animate(...)\n * ], { limit: 1 })\n * ```\n *\n * query(), by default, will throw an error when zero items are found. If a query\n * has the `optional` flag set to true then this error will be ignored.\n *\n * ```js\n * query('.some-element-that-may-not-be-there', [\n *   animate(...),\n *   animate(...)\n * ], { optional: true })\n * ```\n *\n * ### Special Selector Values\n *\n * The selector value within a query can collect elements that contain angular-specific\n * characteristics\n * using special pseudo-selectors tokens.\n *\n * These include:\n *\n *  - Querying for newly inserted/removed elements using `query(\":enter\")`/`query(\":leave\")`\n *  - Querying all currently animating elements using `query(\":animating\")`\n *  - Querying elements that contain an animation trigger using `query(\"\\@triggerName\")`\n *  - Querying all elements that contain an animation triggers using `query(\"\\@*\")`\n *  - Including the current element into the animation sequence using `query(\":self\")`\n *\n *\n *  Each of these pseudo-selector tokens can be merged together into a combined query selector\n * string:\n *\n *  ```\n *  query(':self, .record:enter, .record:leave, \\@subTrigger', [...])\n *  ```\n *\n * ### Demo\n *\n * ```\n * \\@Component({\n *   selector: 'inner',\n *   template: `\n *     <div [\\@queryAnimation]=\"exp\">\n *       <h1>Title</h1>\n *       <div class=\"content\">\n *         Blah blah blah\n *       </div>\n *     </div>\n *   `,\n *   animations: [\n *    trigger('queryAnimation', [\n *      transition('* => goAnimate', [\n *        // hide the inner elements\n *        query('h1', style({ opacity: 0 })),\n *        query('.content', style({ opacity: 0 })),\n *\n *        // animate the inner elements in, one by one\n *        query('h1', animate(1000, style({ opacity: 1 })),\n *        query('.content', animate(1000, style({ opacity: 1 })),\n *      ])\n *    ])\n *  ]\n * })\n * class Cmp {\n *   exp = '';\n *\n *   goAnimate() {\n *     this.exp = 'goAnimate';\n *   }\n * }\n * ```\n *\n * \\@experimental Animation support is experimental.\n * @param {?} selector\n * @param {?} animation\n * @param {?=} options\n * @return {?}\n */\n\n/**\n * `stagger` is an animation-specific function that is designed to be used inside of Angular's\n * animation DSL language. It is designed to be used inside of an animation {\\@link query query()}\n * and works by issuing a timing gap between after each queried item is animated.\n *\n * ### Usage\n *\n * In the example below there is a container element that wraps a list of items stamped out\n * by an ngFor. The container element contains an animation trigger that will later be set\n * to query for each of the inner items.\n *\n * ```html\n * <!-- list.component.html -->\n * <button (click)=\"toggle()\">Show / Hide Items</button>\n * <hr />\n * <div [\\@listAnimation]=\"items.length\">\n *   <div *ngFor=\"let item of items\">\n *     {{ item }}\n *   </div>\n * </div>\n * ```\n *\n * The component code for this looks as such:\n *\n * ```ts\n * import {trigger, transition, style, animate, query, stagger} from '\\@angular/animations';\n * \\@Component({\n *   templateUrl: 'list.component.html',\n *   animations: [\n *     trigger('listAnimation', [\n *        //...\n *     ])\n *   ]\n * })\n * class ListComponent {\n *   items = [];\n *\n *   showItems() {\n *     this.items = [0,1,2,3,4];\n *   }\n *\n *   hideItems() {\n *     this.items = [];\n *   }\n *\n *   toggle() {\n *     this.items.length ? this.hideItems() : this.showItems();\n *   }\n * }\n * ```\n *\n * And now for the animation trigger code:\n *\n * ```ts\n * trigger('listAnimation', [\n *   transition('* => *', [ // each time the binding value changes\n *     query(':leave', [\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 0 }))\n *       ])\n *     ]),\n *     query(':enter', [\n *       style({ opacity: 0 }),\n *       stagger(100, [\n *         animate('0.5s', style({ opacity: 1 }))\n *       ])\n *     ])\n *   ])\n * ])\n * ```\n *\n * Now each time the items are added/removed then either the opacity\n * fade-in animation will run or each removed item will be faded out.\n * When either of these animations occur then a stagger effect will be\n * applied after each item's animation is started.\n *\n * \\@experimental Animation support is experimental.\n * @param {?} timings\n * @param {?} animation\n * @return {?}\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n */\nvar AUTO_STYLE = '*';\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @record\n */\n\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} definitions\n * @return {?}\n */\nfunction trigger$$1(name, definitions) {\n    return trigger$1(name, definitions);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} timings\n * @param {?=} styles\n * @return {?}\n */\nfunction animate$$1(timings, styles) {\n    return animate$1(timings, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction group$$1(steps) {\n    return group$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction sequence$$1(steps) {\n    return sequence$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} tokens\n * @return {?}\n */\nfunction style$$1(tokens) {\n    return style$1(tokens);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} name\n * @param {?} styles\n * @return {?}\n */\nfunction state$$1(name, styles) {\n    return state$1(name, styles);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} steps\n * @return {?}\n */\nfunction keyframes$$1(steps) {\n    return keyframes$1(steps);\n}\n/**\n * @deprecated This symbol has moved. Please Import from \\@angular/animations instead!\n * @param {?} stateChangeExpr\n * @param {?} steps\n * @return {?}\n */\nfunction transition$$1(stateChangeExpr, steps) {\n    return transition$1(stateChangeExpr, steps);\n}\n\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.MissingTranslationStrategy = MissingTranslationStrategy;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.SecurityContext = SecurityContext;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.ViewEncapsulation = ViewEncapsulation;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Injectable = Injectable;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RendererStyleFlags2 = RendererStyleFlags2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectionStrategy = ChangeDetectionStrategy;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ɵValueUnwrapper = ValueUnwrapper;\nexports.ɵdevModeEqual = devModeEqual;\nexports.ɵisListLikeIterable = isListLikeIterable;\nexports.ɵChangeDetectorStatus = ChangeDetectorStatus;\nexports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ɵConsole = Console;\nexports.ɵComponentFactory = ComponentFactory;\nexports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ɵReflectionCapabilities = ReflectionCapabilities;\nexports.ɵRenderDebugInfo = RenderDebugInfo;\nexports.ɵglobal = _global;\nexports.ɵlooseIdentical = looseIdentical;\nexports.ɵstringify = stringify;\nexports.ɵmakeDecorator = makeDecorator;\nexports.ɵisObservable = isObservable;\nexports.ɵisPromise = isPromise;\nexports.ɵclearOverrides = clearOverrides;\nexports.ɵoverrideComponentView = overrideComponentView;\nexports.ɵoverrideProvider = overrideProvider;\nexports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ɵregisterModuleFactory = registerModuleFactory;\nexports.ɵEMPTY_ARRAY = EMPTY_ARRAY;\nexports.ɵEMPTY_MAP = EMPTY_MAP;\nexports.ɵand = anchorDef;\nexports.ɵccf = createComponentFactory;\nexports.ɵcmf = createNgModuleFactory;\nexports.ɵcrt = createRendererType2;\nexports.ɵdid = directiveDef;\nexports.ɵeld = elementDef;\nexports.ɵelementEventFullName = elementEventFullName;\nexports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ɵinlineInterpolate = inlineInterpolate;\nexports.ɵinterpolate = interpolate;\nexports.ɵmod = moduleDef;\nexports.ɵmpd = moduleProvideDef;\nexports.ɵncd = ngContentDef;\nexports.ɵnov = nodeValue;\nexports.ɵpid = pipeDef;\nexports.ɵprd = providerDef;\nexports.ɵpad = pureArrayDef;\nexports.ɵpod = pureObjectDef;\nexports.ɵppd = purePipeDef;\nexports.ɵqud = queryDef;\nexports.ɵted = textDef;\nexports.ɵunv = unwrapValue;\nexports.ɵvid = viewDef;\nexports.AUTO_STYLE = AUTO_STYLE;\nexports.trigger = trigger$$1;\nexports.animate = animate$$1;\nexports.group = group$$1;\nexports.sequence = sequence$$1;\nexports.style = style$$1;\nexports.state = state$$1;\nexports.keyframes = keyframes$$1;\nexports.transition = transition$$1;\nexports.ɵx = animate$1;\nexports.ɵy = group$1;\nexports.ɵbc = keyframes$1;\nexports.ɵz = sequence$1;\nexports.ɵbb = state$1;\nexports.ɵba = style$1;\nexports.ɵbd = transition$1;\nexports.ɵw = trigger$1;\nexports.ɵk = _iterableDiffersFactory;\nexports.ɵl = _keyValueDiffersFactory;\nexports.ɵm = _localeFactory;\nexports.ɵf = _appIdRandomProviderFactory;\nexports.ɵg = defaultIterableDiffers;\nexports.ɵh = defaultKeyValueDiffers;\nexports.ɵi = DefaultIterableDifferFactory;\nexports.ɵj = DefaultKeyValueDifferFactory;\nexports.ɵb = StaticInjector;\nexports.ɵc = ReflectiveInjector_;\nexports.ɵd = ReflectiveDependency;\nexports.ɵe = resolveReflectiveProviders;\nexports.ɵn = wtfEnabled;\nexports.ɵp = createScope;\nexports.ɵo = detectWTF;\nexports.ɵs = endTimeRange;\nexports.ɵq = leave;\nexports.ɵr = startTimeRange;\nexports.ɵa = makeParamDecorator;\nexports.ɵt = _def;\nexports.ɵu = DebugContext;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}