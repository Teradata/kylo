{"version":3,"file":"material-divider.umd.js","sources":["../../src/lib/divider/divider-module.ts","../../src/lib/divider/divider.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatDivider} from './divider';\n\n\n@NgModule({\n  imports: [MatCommonModule, CommonModule],\n  exports: [\n    MatDivider,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatDivider,\n  ],\n})\nexport class MatDividerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-divider',\n  host: {\n    'role': 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-divider-vertical]': 'vertical',\n    '[class.mat-divider-inset]': 'inset',\n    'class': 'mat-divider'\n  },\n  template: '',\n  styleUrls: ['divider.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class MatDivider {\n  /** Whether the divider is vertically aligned. */\n  @Input() get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input() get inset(): boolean { return this._inset; }\n  set inset(value: boolean) { this._inset = coerceBooleanProperty(value); }\n  private _inset: boolean = false;\n}\n"],"names":["MatCommonModule","CommonModule","NgModule","ChangeDetectionStrategy","ViewEncapsulation","Component","coerceBooleanProperty"],"mappings":";;;;;;;;;;;;;;;;;;ACQA,IAAA,UAAA,kBAAA,YAAA;;QAuBA,IAAA,CAAA,SAAA,GAA+B,KAAK,CAApC;QAKA,IAAA,CAAA,MAAA,GAA4B,KAAK,CAAjC;;IAPA,MAAA,CAAA,cAAA,CAAe,UAAf,CAAA,SAAA,EAAA,UAAuB,EAAvB;;;;;QAAA,YAAA,EAAqC,OAAO,IAAI,CAAC,SAAS,CAAC,EAA3D;;;;;QACE,UAAa,KAAc,EAA7B,EAAiC,IAAI,CAAC,SAAS,GAAGM,2CAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;;;;IAIjF,MAAA,CAAA,cAAA,CAAe,UAAf,CAAA,SAAA,EAAA,OAAoB,EAApB;;;;;QAAA,YAAA,EAAkC,OAAO,IAAI,CAAC,MAAM,CAAC,EAArD;;;;;QACE,UAAU,KAAc,EAA1B,EAA8B,IAAI,CAAC,MAAM,GAAGA,2CAAqB,CAAC,KAAK,CAAC,CAAC,EAAE;;;;;QAxB3E,EAAA,IAAA,EAACD,uBAAS,EAAV,IAAA,EAAA,CAAW,CAAX,QAAA,EAAA,aAAA;oBACE,IAAF,EAAA;wBACA,MAAY,EAAZ,WAAyB;wBACnB,yBAAN,EAAA,sCAAA;wBACI,8BAAJ,EAAA,UAAA;wBACI,2BAA2B,EAA/B,OAAA;wBACI,OAAJ,EAAA,aAAA;qBACA;oBACA,QAAA,EAAA,EAAA;oBACA,MAAA,EAAA,CAAA,6SAAA,CAAA;oBACE,aAAF,EAAAD,+BAAA,CAAA,IAAA;oBACE,eAAF,EAAAD,qCAAA,CAAA,MAAA;oBACE,mBAAF,EAAA,KAAA;iBACA,EAAA,EAAA;KACA,CAAA;;;;;;KAIA,CAAA;IAKA,OAAA,UAAA,CAAA;CAlCA,EAAA,CAAA,CAAA;;;;;;;ADQA,IAAA,gBAAA,kBAAA,YAAA;;;;QAMA,EAAA,IAAA,EAACD,sBAAQ,EAAT,IAAA,EAAA,CAAU;oBACR,OAAO,EAAE,CAACF,sCAAe,EAAEC,4BAAY,CAAC;oBACxC,OAAO,EAAE;wBACP,UAAU;wBACVD,sCAAe;qBAChB;oBACD,YAAY,EAAE;wBACZ,UAAU;qBACX;iBACF,EAAD,EAAA;;;;IAvBA,OAAA,gBAAA,CAAA;CAwBA,EAAA,CAAA,CAAA;;;;;;;"}