{"version":3,"file":"upgrade-static.umd.js","sources":["../../../packages/upgrade/esm5/static/src/common/angular1.js","../../../packages/upgrade/esm5/static/src/common/constants.js","../../../packages/upgrade/esm5/static/src/common/component_info.js","../../../packages/upgrade/esm5/static/src/common/util.js","../../../packages/upgrade/esm5/static/src/common/downgrade_component_adapter.js","../../../packages/upgrade/esm5/static/src/common/downgrade_component.js","../../../packages/upgrade/esm5/static/src/common/downgrade_injectable.js","../../../packages/upgrade/esm5/static/src/common/version.js","../../../packages/upgrade/esm5/static/src/static/angular1_providers.js","../../../packages/upgrade/esm5/static/src/static/util.js","../../../packages/upgrade/esm5/static/src/static/downgrade_module.js","../../../packages/upgrade/esm5/static/src/common/upgrade_helper.js","../../../packages/upgrade/esm5/static/src/static/upgrade_component.js","../../../packages/upgrade/esm5/static/src/static/upgrade_module.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noNg() {\n    throw new Error('AngularJS v1.x is not loaded!');\n}\nvar angular = {\n    bootstrap: noNg,\n    module: noNg,\n    element: noNg,\n    version: noNg,\n    resumeBootstrap: noNg,\n    getTestability: noNg\n};\ntry {\n    if (window.hasOwnProperty('angular')) {\n        angular = window.angular;\n    }\n}\ncatch (e) {\n    // ignore in CJS mode.\n}\n/**\n * @deprecated Use {@link setAngularJSGlobal} instead.\n */\nexport function setAngularLib(ng) {\n    setAngularJSGlobal(ng);\n}\n/**\n * @deprecated Use {@link getAngularJSGlobal} instead.\n */\nexport function getAngularLib() {\n    return getAngularJSGlobal();\n}\n/**\n * Resets the AngularJS global.\n *\n * Used when AngularJS is loaded lazily, and not available on `window`.\n *\n * @stable\n */\nexport function setAngularJSGlobal(ng) {\n    angular = ng;\n}\n/**\n * Returns the current AngularJS global.\n *\n * @stable\n */\nexport function getAngularJSGlobal() {\n    return angular;\n}\nexport var bootstrap = function (e, modules, config) {\n    return angular.bootstrap(e, modules, config);\n};\nexport var module = function (prefix, dependencies) {\n    return angular.module(prefix, dependencies);\n};\nexport var element = function (e) { return angular.element(e); };\nexport var resumeBootstrap = function () { return angular.resumeBootstrap(); };\nexport var getTestability = function (e) { return angular.getTestability(e); };\nexport var version = angular.version;\n//# sourceMappingURL=angular1.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport var $COMPILE = '$compile';\nexport var $CONTROLLER = '$controller';\nexport var $DELEGATE = '$delegate';\nexport var $HTTP_BACKEND = '$httpBackend';\nexport var $INJECTOR = '$injector';\nexport var $INTERVAL = '$interval';\nexport var $PARSE = '$parse';\nexport var $PROVIDE = '$provide';\nexport var $ROOT_SCOPE = '$rootScope';\nexport var $SCOPE = '$scope';\nexport var $TEMPLATE_CACHE = '$templateCache';\nexport var $TEMPLATE_REQUEST = '$templateRequest';\nexport var $$TESTABILITY = '$$testability';\nexport var COMPILER_KEY = '$$angularCompiler';\nexport var GROUP_PROJECTABLE_NODES_KEY = '$$angularGroupProjectableNodes';\nexport var INJECTOR_KEY = '$$angularInjector';\nexport var LAZY_MODULE_REF = '$$angularLazyModuleRef';\nexport var NG_ZONE_KEY = '$$angularNgZone';\nexport var REQUIRE_INJECTOR = '?^^' + INJECTOR_KEY;\nexport var REQUIRE_NG_MODEL = '?ngModel';\nexport var UPGRADE_MODULE_NAME = '$$UpgradeModule';\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nvar /**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nPropertyBinding = /** @class */ (function () {\n    function PropertyBinding(prop, attr) {\n        this.prop = prop;\n        this.attr = attr;\n        this.parseBinding();\n    }\n    PropertyBinding.prototype.parseBinding = function () {\n        this.bracketAttr = \"[\" + this.attr + \"]\";\n        this.parenAttr = \"(\" + this.attr + \")\";\n        this.bracketParenAttr = \"[(\" + this.attr + \")]\";\n        var capitalAttr = this.attr.charAt(0).toUpperCase() + this.attr.substr(1);\n        this.onAttr = \"on\" + capitalAttr;\n        this.bindAttr = \"bind\" + capitalAttr;\n        this.bindonAttr = \"bindon\" + capitalAttr;\n    };\n    return PropertyBinding;\n}());\n/**\n * A `PropertyBinding` represents a mapping between a property name\n * and an attribute name. It is parsed from a string of the form\n * `\"prop: attr\"`; or simply `\"propAndAttr\" where the property\n * and attribute have the same identifier.\n */\nexport { PropertyBinding };\n//# sourceMappingURL=component_info.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DIRECTIVE_PREFIX_REGEXP = /^(?:x|data)[:\\-_]/i;\nvar DIRECTIVE_SPECIAL_CHARS_REGEXP = /[:\\-_]+(.)/g;\nexport function onError(e) {\n    // TODO: (misko): We seem to not have a stack trace here!\n    if (console.error) {\n        console.error(e, e.stack);\n    }\n    else {\n        // tslint:disable-next-line:no-console\n        console.log(e, e.stack);\n    }\n    throw e;\n}\nexport function controllerKey(name) {\n    return '$' + name + 'Controller';\n}\nexport function directiveNormalize(name) {\n    return name.replace(DIRECTIVE_PREFIX_REGEXP, '')\n        .replace(DIRECTIVE_SPECIAL_CHARS_REGEXP, function (_, letter) { return letter.toUpperCase(); });\n}\nexport function getAttributesAsArray(node) {\n    var attributes = node.attributes;\n    var asArray = (undefined);\n    if (attributes) {\n        var attrLen = attributes.length;\n        asArray = new Array(attrLen);\n        for (var i = 0; i < attrLen; i++) {\n            asArray[i] = [attributes[i].nodeName, (attributes[i].nodeValue)];\n        }\n    }\n    return asArray || [];\n}\nexport function getComponentName(component) {\n    // Return the name of the component or the first line of its stringified version.\n    return component.overriddenName || component.name || component.toString().split('\\n')[0];\n}\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        this.promise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    return Deferred;\n}());\nexport { Deferred };\n/**\n * @return Whether the passed-in component implements the subset of the\n *     `ControlValueAccessor` interface needed for AngularJS `ng-model`\n *     compatibility.\n */\nfunction supportsNgModel(component) {\n    return typeof component.writeValue === 'function' &&\n        typeof component.registerOnChange === 'function';\n}\n/**\n * Glue the AngularJS `NgModelController` (if it exists) to the component\n * (if it implements the needed subset of the `ControlValueAccessor` interface).\n */\nexport function hookupNgModel(ngModel, component) {\n    if (ngModel && supportsNgModel(component)) {\n        ngModel.$render = function () { component.writeValue(ngModel.$viewValue); };\n        component.registerOnChange(ngModel.$setViewValue.bind(ngModel));\n        if (typeof component.registerOnTouched === 'function') {\n            component.registerOnTouched(ngModel.$setTouched.bind(ngModel));\n        }\n    }\n}\n/**\n * Test two values for strict equality, accounting for the fact that `NaN !== NaN`.\n */\nexport function strictEquals(val1, val2) {\n    return val1 === val2 || (val1 !== val1 && val2 !== val2);\n}\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationRef, Injector, SimpleChange, Testability, TestabilityRegistry } from '@angular/core';\nimport { PropertyBinding } from './component_info';\nimport { $SCOPE } from './constants';\nimport { getComponentName, hookupNgModel, strictEquals } from './util';\nvar INITIAL_VALUE = {\n    __UNINITIALIZED__: true\n};\nvar DowngradeComponentAdapter = /** @class */ (function () {\n    function DowngradeComponentAdapter(element, attrs, scope, ngModel, parentInjector, $injector, $compile, $parse, componentFactory, wrapCallback) {\n        this.element = element;\n        this.attrs = attrs;\n        this.scope = scope;\n        this.ngModel = ngModel;\n        this.parentInjector = parentInjector;\n        this.$injector = $injector;\n        this.$compile = $compile;\n        this.$parse = $parse;\n        this.componentFactory = componentFactory;\n        this.wrapCallback = wrapCallback;\n        this.implementsOnChanges = false;\n        this.inputChangeCount = 0;\n        this.inputChanges = {};\n        this.componentScope = scope.$new();\n    }\n    DowngradeComponentAdapter.prototype.compileContents = function () {\n        var _this = this;\n        var compiledProjectableNodes = [];\n        var projectableNodes = this.groupProjectableNodes();\n        var linkFns = projectableNodes.map(function (nodes) { return _this.$compile(nodes); });\n        this.element.empty();\n        linkFns.forEach(function (linkFn) {\n            linkFn(_this.scope, function (clone) {\n                compiledProjectableNodes.push(clone);\n                _this.element.append(clone);\n            });\n        });\n        return compiledProjectableNodes;\n    };\n    DowngradeComponentAdapter.prototype.createComponent = function (projectableNodes) {\n        var childInjector = Injector.create([{ provide: $SCOPE, useValue: this.componentScope }], this.parentInjector);\n        this.componentRef =\n            this.componentFactory.create(childInjector, projectableNodes, this.element[0]);\n        this.changeDetector = this.componentRef.changeDetectorRef;\n        this.component = this.componentRef.instance;\n        // testability hook is commonly added during component bootstrap in\n        // packages/core/src/application_ref.bootstrap()\n        // in downgraded application, component creation will take place here as well as adding the\n        // testability hook.\n        var testability = this.componentRef.injector.get(Testability, null);\n        if (testability) {\n            this.componentRef.injector.get(TestabilityRegistry)\n                .registerApplication(this.componentRef.location.nativeElement, testability);\n        }\n        hookupNgModel(this.ngModel, this.component);\n    };\n    DowngradeComponentAdapter.prototype.setupInputs = function (needsNgZone, propagateDigest) {\n        var _this = this;\n        if (propagateDigest === void 0) { propagateDigest = true; }\n        var attrs = this.attrs;\n        var inputs = this.componentFactory.inputs || [];\n        var _loop_1 = function (i) {\n            var input = new PropertyBinding(inputs[i].propName, inputs[i].templateName);\n            var expr = null;\n            if (attrs.hasOwnProperty(input.attr)) {\n                var observeFn_1 = (function (prop) {\n                    var prevValue = INITIAL_VALUE;\n                    return function (currValue) {\n                        // Initially, both `$observe()` and `$watch()` will call this function.\n                        if (!strictEquals(prevValue, currValue)) {\n                            if (prevValue === INITIAL_VALUE) {\n                                prevValue = currValue;\n                            }\n                            _this.updateInput(prop, prevValue, currValue);\n                            prevValue = currValue;\n                        }\n                    };\n                })(input.prop);\n                attrs.$observe(input.attr, observeFn_1);\n                // Use `$watch()` (in addition to `$observe()`) in order to initialize the input in time\n                // for `ngOnChanges()`. This is necessary if we are already in a `$digest`, which means that\n                // `ngOnChanges()` (which is called by a watcher) will run before the `$observe()` callback.\n                var unwatch_1 = this_1.componentScope.$watch(function () {\n                    unwatch_1();\n                    unwatch_1 = null;\n                    observeFn_1(attrs[input.attr]);\n                });\n            }\n            else if (attrs.hasOwnProperty(input.bindAttr)) {\n                expr = attrs[input.bindAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bracketAttr)) {\n                expr = attrs[input.bracketAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bindonAttr)) {\n                expr = attrs[input.bindonAttr];\n            }\n            else if (attrs.hasOwnProperty(input.bracketParenAttr)) {\n                expr = attrs[input.bracketParenAttr];\n            }\n            if (expr != null) {\n                var watchFn = (function (prop) {\n                    return function (currValue, prevValue) {\n                        return _this.updateInput(prop, prevValue, currValue);\n                    };\n                })(input.prop);\n                this_1.componentScope.$watch(expr, watchFn);\n            }\n        };\n        var this_1 = this;\n        for (var i = 0; i < inputs.length; i++) {\n            _loop_1(i);\n        }\n        // Invoke `ngOnChanges()` and Change Detection (when necessary)\n        var detectChanges = function () { return _this.changeDetector.detectChanges(); };\n        var prototype = this.componentFactory.componentType.prototype;\n        this.implementsOnChanges = !!(prototype && prototype.ngOnChanges);\n        this.componentScope.$watch(function () { return _this.inputChangeCount; }, this.wrapCallback(function () {\n            // Invoke `ngOnChanges()`\n            if (_this.implementsOnChanges) {\n                var inputChanges = _this.inputChanges;\n                _this.inputChanges = {};\n                _this.component.ngOnChanges((inputChanges));\n            }\n            // If opted out of propagating digests, invoke change detection when inputs change.\n            if (!propagateDigest) {\n                detectChanges();\n            }\n        }));\n        // If not opted out of propagating digests, invoke change detection on every digest\n        if (propagateDigest) {\n            this.componentScope.$watch(this.wrapCallback(detectChanges));\n        }\n        // If necessary, attach the view so that it will be dirty-checked.\n        // (Allow time for the initial input values to be set and `ngOnChanges()` to be called.)\n        if (needsNgZone || !propagateDigest) {\n            var unwatch_2 = this.componentScope.$watch(function () {\n                unwatch_2();\n                unwatch_2 = null;\n                var appRef = _this.parentInjector.get(ApplicationRef);\n                appRef.attachView(_this.componentRef.hostView);\n            });\n        }\n    };\n    DowngradeComponentAdapter.prototype.setupOutputs = function () {\n        var _this = this;\n        var attrs = this.attrs;\n        var outputs = this.componentFactory.outputs || [];\n        var _loop_2 = function (j) {\n            var output = new PropertyBinding(outputs[j].propName, outputs[j].templateName);\n            var expr = null;\n            var assignExpr = false;\n            var bindonAttr = output.bindonAttr.substring(0, output.bindonAttr.length - 6);\n            var bracketParenAttr = \"[(\" + output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8) + \")]\";\n            if (attrs.hasOwnProperty(output.onAttr)) {\n                expr = attrs[output.onAttr];\n            }\n            else if (attrs.hasOwnProperty(output.parenAttr)) {\n                expr = attrs[output.parenAttr];\n            }\n            else if (attrs.hasOwnProperty(bindonAttr)) {\n                expr = attrs[bindonAttr];\n                assignExpr = true;\n            }\n            else if (attrs.hasOwnProperty(bracketParenAttr)) {\n                expr = attrs[bracketParenAttr];\n                assignExpr = true;\n            }\n            if (expr != null && assignExpr != null) {\n                var getter_1 = this_2.$parse(expr);\n                var setter_1 = getter_1.assign;\n                if (assignExpr && !setter_1) {\n                    throw new Error(\"Expression '\" + expr + \"' is not assignable!\");\n                }\n                var emitter = this_2.component[output.prop];\n                if (emitter) {\n                    emitter.subscribe({\n                        next: assignExpr ? function (v) { return setter_1(_this.scope, v); } :\n                            function (v) { return getter_1(_this.scope, { '$event': v }); }\n                    });\n                }\n                else {\n                    throw new Error(\"Missing emitter '\" + output.prop + \"' on component '\" + getComponentName(this_2.componentFactory.componentType) + \"'!\");\n                }\n            }\n        };\n        var this_2 = this;\n        for (var j = 0; j < outputs.length; j++) {\n            _loop_2(j);\n        }\n    };\n    DowngradeComponentAdapter.prototype.registerCleanup = function () {\n        var _this = this;\n        var destroyComponentRef = this.wrapCallback(function () { return _this.componentRef.destroy(); });\n        this.element.on('$destroy', function () {\n            _this.componentScope.$destroy();\n            _this.componentRef.injector.get(TestabilityRegistry)\n                .unregisterApplication(_this.componentRef.location.nativeElement);\n            destroyComponentRef();\n        });\n    };\n    DowngradeComponentAdapter.prototype.getInjector = function () { return this.componentRef.injector; };\n    DowngradeComponentAdapter.prototype.updateInput = function (prop, prevValue, currValue) {\n        if (this.implementsOnChanges) {\n            this.inputChanges[prop] = new SimpleChange(prevValue, currValue, prevValue === currValue);\n        }\n        this.inputChangeCount++;\n        this.component[prop] = currValue;\n    };\n    DowngradeComponentAdapter.prototype.groupProjectableNodes = function () {\n        var ngContentSelectors = this.componentFactory.ngContentSelectors;\n        return groupNodesBySelector(ngContentSelectors, this.element.contents());\n    };\n    return DowngradeComponentAdapter;\n}());\nexport { DowngradeComponentAdapter };\n/**\n * Group a set of DOM nodes into `ngContent` groups, based on the given content selectors.\n */\nexport function groupNodesBySelector(ngContentSelectors, nodes) {\n    var projectableNodes = [];\n    var wildcardNgContentIndex;\n    for (var i = 0, ii = ngContentSelectors.length; i < ii; ++i) {\n        projectableNodes[i] = [];\n    }\n    for (var j = 0, jj = nodes.length; j < jj; ++j) {\n        var node = nodes[j];\n        var ngContentIndex = findMatchingNgContentIndex(node, ngContentSelectors);\n        if (ngContentIndex != null) {\n            projectableNodes[ngContentIndex].push(node);\n        }\n    }\n    return projectableNodes;\n}\nfunction findMatchingNgContentIndex(element, ngContentSelectors) {\n    var ngContentIndices = [];\n    var wildcardNgContentIndex = -1;\n    for (var i = 0; i < ngContentSelectors.length; i++) {\n        var selector = ngContentSelectors[i];\n        if (selector === '*') {\n            wildcardNgContentIndex = i;\n        }\n        else {\n            if (matchesSelector(element, selector)) {\n                ngContentIndices.push(i);\n            }\n        }\n    }\n    ngContentIndices.sort();\n    if (wildcardNgContentIndex !== -1) {\n        ngContentIndices.push(wildcardNgContentIndex);\n    }\n    return ngContentIndices.length ? ngContentIndices[0] : null;\n}\nvar _matches;\nfunction matchesSelector(el, selector) {\n    if (!_matches) {\n        var elProto = Element.prototype;\n        _matches = elProto.matches || elProto.matchesSelector || elProto.mozMatchesSelector ||\n            elProto.msMatchesSelector || elProto.oMatchesSelector || elProto.webkitMatchesSelector;\n    }\n    return el.nodeType === Node.ELEMENT_NODE ? _matches.call(el, selector) : false;\n}\n//# sourceMappingURL=downgrade_component_adapter.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ComponentFactoryResolver, NgZone } from '@angular/core';\nimport { $COMPILE, $INJECTOR, $PARSE, INJECTOR_KEY, LAZY_MODULE_REF, REQUIRE_INJECTOR, REQUIRE_NG_MODEL } from './constants';\nimport { DowngradeComponentAdapter } from './downgrade_component_adapter';\nimport { controllerKey, getComponentName, isFunction } from './util';\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an Angular component to be used from AngularJS.\n *\n * @howToUse\n *\n * Let's assume that you have an Angular component called `ng2Heroes` that needs\n * to be made available in AngularJS templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes\"}\n *\n * We must create an AngularJS [directive](https://docs.angularjs.org/guide/directive)\n * that will make this Angular component available inside AngularJS templates.\n * The `downgradeComponent()` function returns a factory function that we\n * can use to define the AngularJS directive that wraps the \"downgraded\" component.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-wrapper\"}\n *\n * @description\n *\n * A helper function that returns a factory function to be used for registering an\n * AngularJS wrapper directive for \"downgrading\" an Angular component.\n *\n * The parameter contains information about the Component that is being downgraded:\n *\n * * `component: Type<any>`: The type of the Component that will be downgraded\n *\n * @experimental\n */\nexport function downgradeComponent(info) {\n    var directiveFactory = function ($compile, $injector, $parse) {\n        // When using `UpgradeModule`, we don't need to ensure callbacks to Angular APIs (e.g. change\n        // detection) are run inside the Angular zone, because `$digest()` will be run inside the zone\n        // (except if explicitly escaped, in which case we shouldn't force it back in).\n        // When using `downgradeModule()` though, we need to ensure such callbacks are run inside the\n        // Angular zone.\n        var needsNgZone = false;\n        var wrapCallback = function (cb) { return cb; };\n        var ngZone;\n        return {\n            restrict: 'E',\n            terminal: true,\n            require: [REQUIRE_INJECTOR, REQUIRE_NG_MODEL],\n            link: function (scope, element, attrs, required) {\n                // We might have to compile the contents asynchronously, because this might have been\n                // triggered by `UpgradeNg1ComponentAdapterBuilder`, before the Angular templates have\n                // been compiled.\n                var ngModel = required[1];\n                var parentInjector = required[0];\n                var ranAsync = false;\n                if (!parentInjector) {\n                    var lazyModuleRef = $injector.get(LAZY_MODULE_REF);\n                    needsNgZone = lazyModuleRef.needsNgZone;\n                    parentInjector = lazyModuleRef.injector || lazyModuleRef.promise;\n                }\n                var doDowngrade = function (injector) {\n                    var componentFactoryResolver = injector.get(ComponentFactoryResolver);\n                    var componentFactory = (componentFactoryResolver.resolveComponentFactory(info.component));\n                    if (!componentFactory) {\n                        throw new Error('Expecting ComponentFactory for: ' + getComponentName(info.component));\n                    }\n                    var injectorPromise = new ParentInjectorPromise(element);\n                    var facade = new DowngradeComponentAdapter(element, attrs, scope, ngModel, injector, $injector, $compile, $parse, componentFactory, wrapCallback);\n                    var projectableNodes = facade.compileContents();\n                    facade.createComponent(projectableNodes);\n                    facade.setupInputs(needsNgZone, info.propagateDigest);\n                    facade.setupOutputs();\n                    facade.registerCleanup();\n                    injectorPromise.resolve(facade.getInjector());\n                    if (ranAsync) {\n                        // If this is run async, it is possible that it is not run inside a\n                        // digest and initial input values will not be detected.\n                        scope.$evalAsync(function () { });\n                    }\n                };\n                var downgradeFn = !needsNgZone ? doDowngrade : function (injector) {\n                    if (!ngZone) {\n                        ngZone = injector.get(NgZone);\n                        wrapCallback = function (cb) {\n                            return function () {\n                                return NgZone.isInAngularZone() ? cb() : ngZone.run(cb);\n                            };\n                        };\n                    }\n                    wrapCallback(function () { return doDowngrade(injector); })();\n                };\n                if (isThenable(parentInjector)) {\n                    parentInjector.then(downgradeFn);\n                }\n                else {\n                    downgradeFn(parentInjector);\n                }\n                ranAsync = true;\n            }\n        };\n    };\n    // bracket-notation because of closure - see #14441\n    directiveFactory['$inject'] = [$COMPILE, $INJECTOR, $PARSE];\n    return directiveFactory;\n}\n/**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nvar /**\n * Synchronous promise-like object to wrap parent injectors,\n * to preserve the synchronous nature of Angular 1's $compile.\n */\nParentInjectorPromise = /** @class */ (function () {\n    function ParentInjectorPromise(element) {\n        this.element = element;\n        this.injectorKey = controllerKey(INJECTOR_KEY);\n        this.callbacks = [];\n        // Store the promise on the element.\n        // Store the promise on the element.\n        element.data(this.injectorKey, this);\n    }\n    ParentInjectorPromise.prototype.then = function (callback) {\n        if (this.injector) {\n            callback(this.injector);\n        }\n        else {\n            this.callbacks.push(callback);\n        }\n    };\n    ParentInjectorPromise.prototype.resolve = function (injector) {\n        this.injector = injector;\n        // Store the real injector on the element.\n        // Store the real injector on the element.\n        this.element.data(this.injectorKey, injector);\n        // Release the element to prevent memory leaks.\n        this.element = (null);\n        // Run the queued callbacks.\n        this.callbacks.forEach(function (callback) { return callback(injector); });\n        this.callbacks.length = 0;\n    };\n    return ParentInjectorPromise;\n}());\nfunction isThenable(obj) {\n    return isFunction(obj.then);\n}\n//# sourceMappingURL=downgrade_component.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { INJECTOR_KEY } from './constants';\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allow an Angular service to be accessible from AngularJS.\n *\n * @howToUse\n *\n * First ensure that the service to be downgraded is provided in an {@link NgModule}\n * that will be part of the upgrade application. For example, let's assume we have\n * defined `HeroesService`\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-heroes-service\"}\n *\n * and that we have included this in our upgrade app {@link NgModule}\n *\n * {@example upgrade/static/ts/module.ts region=\"ng2-module\"}\n *\n * Now we can register the `downgradeInjectable` factory function for the service\n * on an AngularJS module.\n *\n * {@example upgrade/static/ts/module.ts region=\"downgrade-ng2-heroes-service\"}\n *\n * Inside an AngularJS component's controller we can get hold of the\n * downgraded service via the name we gave when downgrading.\n *\n * {@example upgrade/static/ts/module.ts region=\"example-app\"}\n *\n * @description\n *\n * Takes a `token` that identifies a service provided from Angular.\n *\n * Returns a [factory function](https://docs.angularjs.org/guide/di) that can be\n * used to register the service on an AngularJS module.\n *\n * The factory function provides access to the Angular service that\n * is identified by the `token` parameter.\n *\n * @experimental\n */\nexport function downgradeInjectable(token) {\n    var factory = function (i) { return i.get(token); };\n    factory['$inject'] = [INJECTOR_KEY];\n    return factory;\n}\n//# sourceMappingURL=downgrade_injectable.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\nimport { Version } from '@angular/core';\n/**\n * @stable\n */\nexport var VERSION = new Version('5.1.3');\n//# sourceMappingURL=version.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// We have to do a little dance to get the ng1 injector into the module injector.\n// We store the ng1 injector so that the provider in the module injector can access it\n// Then we \"get\" the ng1 injector from the module injector, which triggers the provider to read\n// the stored injector and release the reference to it.\nvar tempInjectorRef;\nexport function setTempInjectorRef(injector) {\n    tempInjectorRef = injector;\n}\nexport function injectorFactory() {\n    if (!tempInjectorRef) {\n        throw new Error('Trying to get the AngularJS injector before it being set.');\n    }\n    var injector = tempInjectorRef;\n    tempInjectorRef = null; // clear the value to prevent memory leaks\n    return injector;\n}\nexport function rootScopeFactory(i) {\n    return i.get('$rootScope');\n}\nexport function compileFactory(i) {\n    return i.get('$compile');\n}\nexport function parseFactory(i) {\n    return i.get('$parse');\n}\nexport var angular1Providers = [\n    // We must use exported named functions for the ng2 factories to keep the compiler happy:\n    // > Metadata collected contains an error that will be reported at runtime:\n    // >   Function calls are not supported.\n    // >   Consider replacing the function or lambda with a reference to an exported function\n    { provide: '$injector', useFactory: injectorFactory, deps: [] },\n    { provide: '$rootScope', useFactory: rootScopeFactory, deps: ['$injector'] },\n    { provide: '$compile', useFactory: compileFactory, deps: ['$injector'] },\n    { provide: '$parse', useFactory: parseFactory, deps: ['$injector'] }\n];\n//# sourceMappingURL=angular1_providers.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from '@angular/core';\nvar NgAdapterInjector = /** @class */ (function () {\n    function NgAdapterInjector(modInjector) {\n        this.modInjector = modInjector;\n    }\n    // When Angular locate a service in the component injector tree, the not found value is set to\n    // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n    // injector.\n    // AngularJS only supports a single tree and should always check the module injector.\n    // When Angular locate a service in the component injector tree, the not found value is set to\n    // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n    // injector.\n    // AngularJS only supports a single tree and should always check the module injector.\n    NgAdapterInjector.prototype.get = \n    // When Angular locate a service in the component injector tree, the not found value is set to\n    // `NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR`. In such a case we should not walk up to the module\n    // injector.\n    // AngularJS only supports a single tree and should always check the module injector.\n    function (token, notFoundValue) {\n        if (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n            return notFoundValue;\n        }\n        return this.modInjector.get(token, notFoundValue);\n    };\n    return NgAdapterInjector;\n}());\nexport { NgAdapterInjector };\n//# sourceMappingURL=util.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { platformBrowser } from '@angular/platform-browser';\nimport * as angular from '../common/angular1';\nimport { $INJECTOR, INJECTOR_KEY, LAZY_MODULE_REF, UPGRADE_MODULE_NAME } from '../common/constants';\nimport { isFunction } from '../common/util';\nimport { angular1Providers, setTempInjectorRef } from './angular1_providers';\nimport { NgAdapterInjector } from './util';\n/** @experimental */\nexport function downgradeModule(moduleFactoryOrBootstrapFn) {\n    var LAZY_MODULE_NAME = UPGRADE_MODULE_NAME + '.lazy';\n    var bootstrapFn = isFunction(moduleFactoryOrBootstrapFn) ?\n        moduleFactoryOrBootstrapFn :\n        function (extraProviders) {\n            return platformBrowser(extraProviders).bootstrapModuleFactory(moduleFactoryOrBootstrapFn);\n        };\n    var injector;\n    // Create an ng1 module to bootstrap.\n    angular.module(LAZY_MODULE_NAME, [])\n        .factory(INJECTOR_KEY, function () {\n        if (!injector) {\n            throw new Error('Trying to get the Angular injector before bootstrapping an Angular module.');\n        }\n        return injector;\n    })\n        .factory(LAZY_MODULE_REF, [\n        $INJECTOR,\n        function ($injector) {\n            setTempInjectorRef($injector);\n            var result = {\n                needsNgZone: true,\n                promise: bootstrapFn(angular1Providers).then(function (ref) {\n                    injector = result.injector = new NgAdapterInjector(ref.injector);\n                    injector.get($INJECTOR);\n                    return injector;\n                })\n            };\n            return result;\n        }\n    ]);\n    return LAZY_MODULE_NAME;\n}\n//# sourceMappingURL=downgrade_module.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as angular from './angular1';\nimport { $COMPILE, $CONTROLLER, $HTTP_BACKEND, $INJECTOR, $TEMPLATE_CACHE } from './constants';\nimport { controllerKey, directiveNormalize, isFunction } from './util';\n// Constants\nvar REQUIRE_PREFIX_RE = /^(\\^\\^?)?(\\?)?(\\^\\^?)?/;\n// Classes\nvar \n// Classes\nUpgradeHelper = /** @class */ (function () {\n    function UpgradeHelper(injector, name, elementRef, directive) {\n        this.injector = injector;\n        this.name = name;\n        this.$injector = injector.get($INJECTOR);\n        this.$compile = this.$injector.get($COMPILE);\n        this.$controller = this.$injector.get($CONTROLLER);\n        this.element = elementRef.nativeElement;\n        this.$element = angular.element(this.element);\n        this.directive = directive || UpgradeHelper.getDirective(this.$injector, name);\n    }\n    UpgradeHelper.getDirective = function ($injector, name) {\n        var directives = $injector.get(name + 'Directive');\n        if (directives.length > 1) {\n            throw new Error(\"Only support single directive definition for: \" + name);\n        }\n        var directive = directives[0];\n        // AngularJS will transform `link: xyz` to `compile: () => xyz`. So we can only tell there was a\n        // user-defined `compile` if there is no `link`. In other cases, we will just ignore `compile`.\n        if (directive.compile && !directive.link)\n            notSupported(name, 'compile');\n        if (directive.replace)\n            notSupported(name, 'replace');\n        if (directive.terminal)\n            notSupported(name, 'terminal');\n        return directive;\n    };\n    UpgradeHelper.getTemplate = function ($injector, directive, fetchRemoteTemplate) {\n        if (fetchRemoteTemplate === void 0) { fetchRemoteTemplate = false; }\n        if (directive.template !== undefined) {\n            return getOrCall(directive.template);\n        }\n        else if (directive.templateUrl) {\n            var $templateCache_1 = $injector.get($TEMPLATE_CACHE);\n            var url_1 = getOrCall(directive.templateUrl);\n            var template = $templateCache_1.get(url_1);\n            if (template !== undefined) {\n                return template;\n            }\n            else if (!fetchRemoteTemplate) {\n                throw new Error('loading directive templates asynchronously is not supported');\n            }\n            return new Promise(function (resolve, reject) {\n                var $httpBackend = $injector.get($HTTP_BACKEND);\n                $httpBackend('GET', url_1, null, function (status, response) {\n                    if (status === 200) {\n                        resolve($templateCache_1.put(url_1, response));\n                    }\n                    else {\n                        reject(\"GET component template from '\" + url_1 + \"' returned '\" + status + \": \" + response + \"'\");\n                    }\n                });\n            });\n        }\n        else {\n            throw new Error(\"Directive '\" + directive.name + \"' is not a component, it is missing template.\");\n        }\n    };\n    UpgradeHelper.prototype.buildController = function (controllerType, $scope) {\n        // TODO: Document that we do not pre-assign bindings on the controller instance.\n        // Quoted properties below so that this code can be optimized with Closure Compiler.\n        var locals = { '$scope': $scope, '$element': this.$element };\n        var controller = this.$controller(controllerType, locals, null, this.directive.controllerAs);\n        this.$element.data(controllerKey((this.directive.name)), controller);\n        return controller;\n    };\n    UpgradeHelper.prototype.compileTemplate = function (template) {\n        if (template === undefined) {\n            template = UpgradeHelper.getTemplate(this.$injector, this.directive);\n        }\n        return this.compileHtml(template);\n    };\n    UpgradeHelper.prototype.prepareTransclusion = function () {\n        var _this = this;\n        var transclude = this.directive.transclude;\n        var contentChildNodes = this.extractChildNodes();\n        var $template = contentChildNodes;\n        var attachChildrenFn = function (scope, cloneAttach) {\n            return cloneAttach($template, scope);\n        };\n        if (transclude) {\n            var slots_1 = Object.create(null);\n            if (typeof transclude === 'object') {\n                $template = [];\n                var slotMap_1 = Object.create(null);\n                var filledSlots_1 = Object.create(null);\n                // Parse the element selectors.\n                Object.keys(transclude).forEach(function (slotName) {\n                    var selector = transclude[slotName];\n                    var optional = selector.charAt(0) === '?';\n                    selector = optional ? selector.substring(1) : selector;\n                    slotMap_1[selector] = slotName;\n                    slots_1[slotName] = null; // `null`: Defined but not yet filled.\n                    filledSlots_1[slotName] = optional; // Consider optional slots as filled.\n                });\n                // Add the matching elements into their slot.\n                contentChildNodes.forEach(function (node) {\n                    var slotName = slotMap_1[directiveNormalize(node.nodeName.toLowerCase())];\n                    if (slotName) {\n                        filledSlots_1[slotName] = true;\n                        slots_1[slotName] = slots_1[slotName] || [];\n                        slots_1[slotName].push(node);\n                    }\n                    else {\n                        $template.push(node);\n                    }\n                });\n                // Check for required slots that were not filled.\n                Object.keys(filledSlots_1).forEach(function (slotName) {\n                    if (!filledSlots_1[slotName]) {\n                        throw new Error(\"Required transclusion slot '\" + slotName + \"' on directive: \" + _this.name);\n                    }\n                });\n                Object.keys(slots_1).filter(function (slotName) { return slots_1[slotName]; }).forEach(function (slotName) {\n                    var nodes = slots_1[slotName];\n                    slots_1[slotName] = function (scope, cloneAttach) {\n                        return cloneAttach(nodes, scope);\n                    };\n                });\n            }\n            // Attach `$$slots` to default slot transclude fn.\n            attachChildrenFn.$$slots = slots_1;\n            // AngularJS v1.6+ ignores empty or whitespace-only transcluded text nodes. But Angular\n            // removes all text content after the first interpolation and updates it later, after\n            // evaluating the expressions. This would result in AngularJS failing to recognize text\n            // nodes that start with an interpolation as transcluded content and use the fallback\n            // content instead.\n            // To avoid this issue, we add a\n            // [zero-width non-joiner character](https://en.wikipedia.org/wiki/Zero-width_non-joiner)\n            // to empty text nodes (which can only be a result of Angular removing their initial content).\n            // NOTE: Transcluded text content that starts with whitespace followed by an interpolation\n            //       will still fail to be detected by AngularJS v1.6+\n            $template.forEach(function (node) {\n                if (node.nodeType === Node.TEXT_NODE && !node.nodeValue) {\n                    node.nodeValue = '\\u200C';\n                }\n            });\n        }\n        return attachChildrenFn;\n    };\n    UpgradeHelper.prototype.resolveAndBindRequiredControllers = function (controllerInstance) {\n        var directiveRequire = this.getDirectiveRequire();\n        var requiredControllers = this.resolveRequire(directiveRequire);\n        if (controllerInstance && this.directive.bindToController && isMap(directiveRequire)) {\n            var requiredControllersMap_1 = requiredControllers;\n            Object.keys(requiredControllersMap_1).forEach(function (key) {\n                controllerInstance[key] = requiredControllersMap_1[key];\n            });\n        }\n        return requiredControllers;\n    };\n    UpgradeHelper.prototype.compileHtml = function (html) {\n        this.element.innerHTML = html;\n        return this.$compile(this.element.childNodes);\n    };\n    UpgradeHelper.prototype.extractChildNodes = function () {\n        var childNodes = [];\n        var childNode;\n        while (childNode = this.element.firstChild) {\n            this.element.removeChild(childNode);\n            childNodes.push(childNode);\n        }\n        return childNodes;\n    };\n    UpgradeHelper.prototype.getDirectiveRequire = function () {\n        var require = this.directive.require || ((this.directive.controller && this.directive.name));\n        if (isMap(require)) {\n            Object.keys(require).forEach(function (key) {\n                var value = require[key];\n                var match = (value.match(REQUIRE_PREFIX_RE));\n                var name = value.substring(match[0].length);\n                if (!name) {\n                    require[key] = match[0] + key;\n                }\n            });\n        }\n        return require;\n    };\n    UpgradeHelper.prototype.resolveRequire = function (require, controllerInstance) {\n        var _this = this;\n        if (!require) {\n            return null;\n        }\n        else if (Array.isArray(require)) {\n            return require.map(function (req) { return _this.resolveRequire(req); });\n        }\n        else if (typeof require === 'object') {\n            var value_1 = {};\n            Object.keys(require).forEach(function (key) { return value_1[key] = (_this.resolveRequire(require[key])); });\n            return value_1;\n        }\n        else if (typeof require === 'string') {\n            var match = (require.match(REQUIRE_PREFIX_RE));\n            var inheritType = match[1] || match[3];\n            var name_1 = require.substring(match[0].length);\n            var isOptional = !!match[2];\n            var searchParents = !!inheritType;\n            var startOnParent = inheritType === '^^';\n            var ctrlKey = controllerKey(name_1);\n            var elem = startOnParent ? this.$element.parent() : this.$element;\n            var value = searchParents ? elem.inheritedData(ctrlKey) : elem.data(ctrlKey);\n            if (!value && !isOptional) {\n                throw new Error(\"Unable to find required '\" + require + \"' in upgraded directive '\" + this.name + \"'.\");\n            }\n            return value;\n        }\n        else {\n            throw new Error(\"Unrecognized 'require' syntax on upgraded directive '\" + this.name + \"': \" + require);\n        }\n    };\n    return UpgradeHelper;\n}());\n// Classes\nexport { UpgradeHelper };\nfunction getOrCall(property) {\n    return isFunction(property) ? property() : property;\n}\n// NOTE: Only works for `typeof T !== 'object'`.\nfunction isMap(value) {\n    return value && !Array.isArray(value) && typeof value === 'object';\n}\nfunction notSupported(name, feature) {\n    throw new Error(\"Upgraded directive '\" + name + \"' contains unsupported feature: '\" + feature + \"'.\");\n}\n//# sourceMappingURL=upgrade_helper.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { EventEmitter, ɵlooseIdentical as looseIdentical } from '@angular/core';\nimport { $SCOPE } from '../common/constants';\nimport { UpgradeHelper } from '../common/upgrade_helper';\nimport { isFunction } from '../common/util';\nvar NOT_SUPPORTED = 'NOT_SUPPORTED';\nvar INITIAL_VALUE = {\n    __UNINITIALIZED__: true\n};\nvar Bindings = /** @class */ (function () {\n    function Bindings() {\n        this.twoWayBoundProperties = [];\n        this.twoWayBoundLastValues = [];\n        this.expressionBoundProperties = [];\n        this.propertyToOutputMap = {};\n    }\n    return Bindings;\n}());\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an AngularJS component to be used from Angular.\n *\n * @howToUse\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n *\n * We must create a {@link Directive} that will make this AngularJS component\n * available inside Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the {@link UpgradeComponent}\n * base class but also provide an {@link Directive `@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the {@link ElementRef} and {@link Injector} for the component wrapper\n *\n * @description\n *\n * A helper class that should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * @experimental\n */\nvar /**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an AngularJS component to be used from Angular.\n *\n * @howToUse\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n *\n * We must create a {@link Directive} that will make this AngularJS component\n * available inside Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the {@link UpgradeComponent}\n * base class but also provide an {@link Directive `@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the {@link ElementRef} and {@link Injector} for the component wrapper\n *\n * @description\n *\n * A helper class that should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * @experimental\n */\nUpgradeComponent = /** @class */ (function () {\n    /**\n     * Create a new `UpgradeComponent` instance. You should not normally need to do this.\n     * Instead you should derive a new class from this one and call the super constructor\n     * from the base class.\n     *\n     * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\" }\n     *\n     * * The `name` parameter should be the name of the AngularJS directive.\n     * * The `elementRef` and `injector` parameters should be acquired from Angular by dependency\n     *   injection into the base class constructor.\n     *\n     * Note that we must manually implement lifecycle hooks that call through to the super class.\n     * This is because, at the moment, the AoT compiler is not able to tell that the\n     * `UpgradeComponent`\n     * already implements them and so does not wire up calls to them at runtime.\n     */\n    function UpgradeComponent(name, elementRef, injector) {\n        this.name = name;\n        this.elementRef = elementRef;\n        this.injector = injector;\n        this.helper = new UpgradeHelper(injector, name, elementRef);\n        this.$injector = this.helper.$injector;\n        this.element = this.helper.element;\n        this.$element = this.helper.$element;\n        this.directive = this.helper.directive;\n        this.bindings = this.initializeBindings(this.directive);\n        // We ask for the AngularJS scope from the Angular injector, since\n        // we will put the new component scope onto the new injector for each component\n        var $parentScope = injector.get($SCOPE);\n        // QUESTION 1: Should we create an isolated scope if the scope is only true?\n        // QUESTION 2: Should we make the scope accessible through `$element.scope()/isolateScope()`?\n        this.$componentScope = $parentScope.$new(!!this.directive.scope);\n        this.initializeOutputs();\n    }\n    UpgradeComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        // Collect contents, insert and compile template\n        var attachChildNodes = this.helper.prepareTransclusion();\n        var linkFn = this.helper.compileTemplate();\n        // Instantiate controller\n        var controllerType = this.directive.controller;\n        var bindToController = this.directive.bindToController;\n        if (controllerType) {\n            this.controllerInstance = this.helper.buildController(controllerType, this.$componentScope);\n        }\n        else if (bindToController) {\n            throw new Error(\"Upgraded directive '\" + this.directive.name + \"' specifies 'bindToController' but no controller.\");\n        }\n        // Set up outputs\n        this.bindingDestination = bindToController ? this.controllerInstance : this.$componentScope;\n        this.bindOutputs();\n        // Require other controllers\n        var requiredControllers = this.helper.resolveAndBindRequiredControllers(this.controllerInstance);\n        // Hook: $onChanges\n        if (this.pendingChanges) {\n            this.forwardChanges(this.pendingChanges);\n            this.pendingChanges = null;\n        }\n        // Hook: $onInit\n        if (this.controllerInstance && isFunction(this.controllerInstance.$onInit)) {\n            this.controllerInstance.$onInit();\n        }\n        // Hook: $doCheck\n        if (this.controllerInstance && isFunction(this.controllerInstance.$doCheck)) {\n            var callDoCheck = function () { return _this.controllerInstance.$doCheck(); };\n            this.unregisterDoCheckWatcher = this.$componentScope.$parent.$watch(callDoCheck);\n            callDoCheck();\n        }\n        // Linking\n        var link = this.directive.link;\n        var preLink = (typeof link == 'object') && link.pre;\n        var postLink = (typeof link == 'object') ? link.post : link;\n        var attrs = NOT_SUPPORTED;\n        var transcludeFn = NOT_SUPPORTED;\n        if (preLink) {\n            preLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n        }\n        linkFn(this.$componentScope, (null), { parentBoundTranscludeFn: attachChildNodes });\n        if (postLink) {\n            postLink(this.$componentScope, this.$element, attrs, requiredControllers, transcludeFn);\n        }\n        // Hook: $postLink\n        if (this.controllerInstance && isFunction(this.controllerInstance.$postLink)) {\n            this.controllerInstance.$postLink();\n        }\n    };\n    UpgradeComponent.prototype.ngOnChanges = function (changes) {\n        if (!this.bindingDestination) {\n            this.pendingChanges = changes;\n        }\n        else {\n            this.forwardChanges(changes);\n        }\n    };\n    UpgradeComponent.prototype.ngDoCheck = function () {\n        var _this = this;\n        var twoWayBoundProperties = this.bindings.twoWayBoundProperties;\n        var twoWayBoundLastValues = this.bindings.twoWayBoundLastValues;\n        var propertyToOutputMap = this.bindings.propertyToOutputMap;\n        twoWayBoundProperties.forEach(function (propName, idx) {\n            var newValue = _this.bindingDestination[propName];\n            var oldValue = twoWayBoundLastValues[idx];\n            if (!looseIdentical(newValue, oldValue)) {\n                var outputName = propertyToOutputMap[propName];\n                var eventEmitter = _this[outputName];\n                eventEmitter.emit(newValue);\n                twoWayBoundLastValues[idx] = newValue;\n            }\n        });\n    };\n    UpgradeComponent.prototype.ngOnDestroy = function () {\n        if (isFunction(this.unregisterDoCheckWatcher)) {\n            this.unregisterDoCheckWatcher();\n        }\n        if (this.controllerInstance && isFunction(this.controllerInstance.$onDestroy)) {\n            this.controllerInstance.$onDestroy();\n        }\n        this.$componentScope.$destroy();\n    };\n    UpgradeComponent.prototype.initializeBindings = function (directive) {\n        var _this = this;\n        var btcIsObject = typeof directive.bindToController === 'object';\n        if (btcIsObject && Object.keys((directive.scope)).length) {\n            throw new Error(\"Binding definitions on scope and controller at the same time is not supported.\");\n        }\n        var context = (btcIsObject) ? directive.bindToController : directive.scope;\n        var bindings = new Bindings();\n        if (typeof context == 'object') {\n            Object.keys(context).forEach(function (propName) {\n                var definition = context[propName];\n                var bindingType = definition.charAt(0);\n                // QUESTION: What about `=*`? Ignore? Throw? Support?\n                switch (bindingType) {\n                    case '@':\n                    case '<':\n                        // We don't need to do anything special. They will be defined as inputs on the\n                        // upgraded component facade and the change propagation will be handled by\n                        // `ngOnChanges()`.\n                        break;\n                    case '=':\n                        bindings.twoWayBoundProperties.push(propName);\n                        bindings.twoWayBoundLastValues.push(INITIAL_VALUE);\n                        bindings.propertyToOutputMap[propName] = propName + 'Change';\n                        break;\n                    case '&':\n                        bindings.expressionBoundProperties.push(propName);\n                        bindings.propertyToOutputMap[propName] = propName;\n                        break;\n                    default:\n                        var json = JSON.stringify(context);\n                        throw new Error(\"Unexpected mapping '\" + bindingType + \"' in '\" + json + \"' in '\" + _this.name + \"' directive.\");\n                }\n            });\n        }\n        return bindings;\n    };\n    UpgradeComponent.prototype.initializeOutputs = function () {\n        var _this = this;\n        // Initialize the outputs for `=` and `&` bindings\n        this.bindings.twoWayBoundProperties.concat(this.bindings.expressionBoundProperties)\n            .forEach(function (propName) {\n            var outputName = _this.bindings.propertyToOutputMap[propName];\n            _this[outputName] = new EventEmitter();\n        });\n    };\n    UpgradeComponent.prototype.bindOutputs = function () {\n        var _this = this;\n        // Bind `&` bindings to the corresponding outputs\n        this.bindings.expressionBoundProperties.forEach(function (propName) {\n            var outputName = _this.bindings.propertyToOutputMap[propName];\n            var emitter = _this[outputName];\n            _this.bindingDestination[propName] = function (value) { return emitter.emit(value); };\n        });\n    };\n    UpgradeComponent.prototype.forwardChanges = function (changes) {\n        var _this = this;\n        // Forward input changes to `bindingDestination`\n        Object.keys(changes).forEach(function (propName) { return _this.bindingDestination[propName] = changes[propName].currentValue; });\n        if (isFunction(this.bindingDestination.$onChanges)) {\n            this.bindingDestination.$onChanges(changes);\n        }\n    };\n    return UpgradeComponent;\n}());\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows an AngularJS component to be used from Angular.\n *\n * @howToUse\n *\n * Let's assume that you have an AngularJS component called `ng1Hero` that needs\n * to be made available in Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero\"}\n *\n * We must create a {@link Directive} that will make this AngularJS component\n * available inside Angular templates.\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-hero-wrapper\"}\n *\n * In this example you can see that we must derive from the {@link UpgradeComponent}\n * base class but also provide an {@link Directive `@Directive`} decorator. This is\n * because the AoT compiler requires that this information is statically available at\n * compile time.\n *\n * Note that we must do the following:\n * * specify the directive's selector (`ng1-hero`)\n * * specify all inputs and outputs that the AngularJS component expects\n * * derive from `UpgradeComponent`\n * * call the base class from the constructor, passing\n *   * the AngularJS name of the component (`ng1Hero`)\n *   * the {@link ElementRef} and {@link Injector} for the component wrapper\n *\n * @description\n *\n * A helper class that should be used as a base class for creating Angular directives\n * that wrap AngularJS components that need to be \"upgraded\".\n *\n * @experimental\n */\nexport { UpgradeComponent };\n//# sourceMappingURL=upgrade_component.js.map","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { Injector, NgModule, NgZone, Testability } from '@angular/core';\nimport * as angular from '../common/angular1';\nimport { $$TESTABILITY, $DELEGATE, $INJECTOR, $INTERVAL, $PROVIDE, INJECTOR_KEY, LAZY_MODULE_REF, UPGRADE_MODULE_NAME } from '../common/constants';\nimport { controllerKey } from '../common/util';\nimport { angular1Providers, setTempInjectorRef } from './angular1_providers';\nimport { NgAdapterInjector } from './util';\n/**\n * @whatItDoes\n *\n * *Part of the [upgrade/static](api?query=upgrade%2Fstatic)\n * library for hybrid upgrade apps that support AoT compilation*\n *\n * Allows AngularJS and Angular components to be used together inside a hybrid upgrade\n * application, which supports AoT compilation.\n *\n * Specifically, the classes and functions in the `upgrade/static` module allow the following:\n * 1. Creation of an Angular directive that wraps and exposes an AngularJS component so\n *    that it can be used in an Angular template. See {@link UpgradeComponent}.\n * 2. Creation of an AngularJS directive that wraps and exposes an Angular component so\n *    that it can be used in an AngularJS template. See {@link downgradeComponent}.\n * 3. Creation of an Angular root injector provider that wraps and exposes an AngularJS\n *    service so that it can be injected into an Angular context. See\n *    {@link UpgradeModule#upgrading-an-angular-1-service Upgrading an AngularJS service} below.\n * 4. Creation of an AngularJS service that wraps and exposes an Angular injectable\n *    so that it can be injected into an AngularJS context. See {@link downgradeInjectable}.\n * 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks\n *    coexisting in a single application. See the\n *    {@link UpgradeModule#example example} below.\n *\n * ## Mental Model\n *\n * When reasoning about how a hybrid application works it is useful to have a mental model which\n * describes what is happening and explains what is happening at the lowest level.\n *\n * 1. There are two independent frameworks running in a single application, each framework treats\n *    the other as a black box.\n * 2. Each DOM element on the page is owned exactly by one framework. Whichever framework\n *    instantiated the element is the owner. Each framework only updates/interacts with its own\n *    DOM elements and ignores others.\n * 3. AngularJS directives always execute inside the AngularJS framework codebase regardless of\n *    where they are instantiated.\n * 4. Angular components always execute inside the Angular framework codebase regardless of\n *    where they are instantiated.\n * 5. An AngularJS component can be \"upgraded\"\" to an Angular component. This is achieved by\n *    defining an Angular directive, which bootstraps the AngularJS component at its location\n *    in the DOM. See {@link UpgradeComponent}.\n * 6. An Angular component can be \"downgraded\"\" to an AngularJS component. This is achieved by\n *    defining an AngularJS directive, which bootstraps the Angular component at its location\n *    in the DOM. See {@link downgradeComponent}.\n * 7. Whenever an \"upgraded\"/\"downgraded\" component is instantiated the host element is owned by\n *    the framework doing the instantiation. The other framework then instantiates and owns the\n *    view for that component.\n *    a. This implies that the component bindings will always follow the semantics of the\n *       instantiation framework.\n *    b. The DOM attributes are parsed by the framework that owns the current template. So\n * attributes\n *       in AngularJS templates must use kebab-case, while AngularJS templates must use camelCase.\n *    c. However the template binding syntax will always use the Angular style, e.g. square\n *       brackets (`[...]`) for property binding.\n * 8. AngularJS is always bootstrapped first and owns the root component.\n * 9. The new application is running in an Angular zone, and therefore it no longer needs calls\n * to\n *    `$apply()`.\n *\n * @howToUse\n *\n * `import {UpgradeModule} from '@angular/upgrade/static';`\n *\n * ## Example\n * Import the {@link UpgradeModule} into your top level {@link NgModule Angular `NgModule`}.\n *\n * {@example upgrade/static/ts/module.ts region='ng2-module'}\n *\n * Then bootstrap the hybrid upgrade app's module, get hold of the {@link UpgradeModule} instance\n * and use it to bootstrap the top level [AngularJS\n * module](https://docs.angularjs.org/api/ng/type/angular.Module).\n *\n * {@example upgrade/static/ts/module.ts region='bootstrap'}\n *\n * {@a upgrading-an-angular-1-service}\n *\n * ## Upgrading an AngularJS service\n *\n * There is no specific API for upgrading an AngularJS service. Instead you should just follow the\n * following recipe:\n *\n * Let's say you have an AngularJS service:\n *\n * {@example upgrade/static/ts/module.ts region=\"ng1-title-case-service\"}\n *\n * Then you should define an Angular provider to be included in your {@link NgModule} `providers`\n * property.\n *\n * {@example upgrade/static/ts/module.ts region=\"upgrade-ng1-service\"}\n *\n * Then you can use the \"upgraded\" AngularJS service by injecting it into an Angular component\n * or service.\n *\n * {@example upgrade/static/ts/module.ts region=\"use-ng1-upgraded-service\"}\n *\n * @description\n *\n * This class is an `NgModule`, which you import to provide AngularJS core services,\n * and has an instance method used to bootstrap the hybrid upgrade application.\n *\n * ## Core AngularJS services\n * Importing this {@link NgModule} will add providers for the core\n * [AngularJS services](https://docs.angularjs.org/api/ng/service) to the root injector.\n *\n * ## Bootstrap\n * The runtime instance of this class contains a {@link UpgradeModule#bootstrap `bootstrap()`}\n * method, which you use to bootstrap the top level AngularJS module onto an element in the\n * DOM for the hybrid upgrade app.\n *\n * It also contains properties to access the {@link UpgradeModule#injector root injector}, the\n * bootstrap {@link NgZone} and the\n * [AngularJS $injector](https://docs.angularjs.org/api/auto/service/$injector).\n *\n * @experimental\n */\nvar UpgradeModule = /** @class */ (function () {\n    function UpgradeModule(/** The root {@link Injector} for the upgrade application. */\n        /** The root {@link Injector} for the upgrade application. */\n        injector, /** The bootstrap zone for the upgrade application */\n        ngZone) {\n        this.ngZone = ngZone;\n        this.injector = new NgAdapterInjector(injector);\n    }\n    /**\n     * Bootstrap an AngularJS application from this NgModule\n     * @param element the element on which to bootstrap the AngularJS application\n     * @param [modules] the AngularJS modules to bootstrap for this application\n     * @param [config] optional extra AngularJS bootstrap configuration\n     */\n    /**\n       * Bootstrap an AngularJS application from this NgModule\n       * @param element the element on which to bootstrap the AngularJS application\n       * @param [modules] the AngularJS modules to bootstrap for this application\n       * @param [config] optional extra AngularJS bootstrap configuration\n       */\n    UpgradeModule.prototype.bootstrap = /**\n       * Bootstrap an AngularJS application from this NgModule\n       * @param element the element on which to bootstrap the AngularJS application\n       * @param [modules] the AngularJS modules to bootstrap for this application\n       * @param [config] optional extra AngularJS bootstrap configuration\n       */\n    function (element, modules, config /*angular.IAngularBootstrapConfig*/) {\n        var _this = this;\n        if (modules === void 0) { modules = []; }\n        var INIT_MODULE_NAME = UPGRADE_MODULE_NAME + '.init';\n        // Create an ng1 module to bootstrap\n        var initModule = angular\n            .module(INIT_MODULE_NAME, [])\n            .value(INJECTOR_KEY, this.injector)\n            .factory(LAZY_MODULE_REF, [\n            INJECTOR_KEY,\n            function (injector) { return ({ injector: injector, needsNgZone: false }); }\n        ])\n            .config([\n            $PROVIDE, $INJECTOR,\n            function ($provide, $injector) {\n                if ($injector.has($$TESTABILITY)) {\n                    $provide.decorator($$TESTABILITY, [\n                        $DELEGATE,\n                        function (testabilityDelegate) {\n                            var originalWhenStable = testabilityDelegate.whenStable;\n                            var injector = _this.injector;\n                            // Cannot use arrow function below because we need the context\n                            var newWhenStable = function (callback) {\n                                originalWhenStable.call(testabilityDelegate, function () {\n                                    var ng2Testability = injector.get(Testability);\n                                    if (ng2Testability.isStable()) {\n                                        callback();\n                                    }\n                                    else {\n                                        ng2Testability.whenStable(newWhenStable.bind(testabilityDelegate, callback));\n                                    }\n                                });\n                            };\n                            testabilityDelegate.whenStable = newWhenStable;\n                            return testabilityDelegate;\n                        }\n                    ]);\n                }\n                if ($injector.has($INTERVAL)) {\n                    $provide.decorator($INTERVAL, [\n                        $DELEGATE,\n                        function (intervalDelegate) {\n                            // Wrap the $interval service so that setInterval is called outside NgZone,\n                            // but the callback is still invoked within it. This is so that $interval\n                            // won't block stability, which preserves the behavior from AngularJS.\n                            var wrappedInterval = function (fn, delay, count, invokeApply) {\n                                var pass = [];\n                                for (var _i = 4; _i < arguments.length; _i++) {\n                                    pass[_i - 4] = arguments[_i];\n                                }\n                                return _this.ngZone.runOutsideAngular(function () {\n                                    return intervalDelegate.apply(void 0, [function () {\n                                            var args = [];\n                                            for (var _i = 0; _i < arguments.length; _i++) {\n                                                args[_i] = arguments[_i];\n                                            }\n                                            // Run callback in the next VM turn - $interval calls\n                                            // $rootScope.$apply, and running the callback in NgZone will\n                                            // cause a '$digest already in progress' error if it's in the\n                                            // same vm turn.\n                                            setTimeout(function () { _this.ngZone.run(function () { return fn.apply(void 0, args); }); });\n                                        }, delay, count, invokeApply].concat(pass));\n                                });\n                            };\n                            wrappedInterval['cancel'] = intervalDelegate.cancel;\n                            return wrappedInterval;\n                        }\n                    ]);\n                }\n            }\n        ])\n            .run([\n            $INJECTOR,\n            function ($injector) {\n                _this.$injector = $injector;\n                // Initialize the ng1 $injector provider\n                setTempInjectorRef($injector);\n                _this.injector.get($INJECTOR);\n                // Put the injector on the DOM, so that it can be \"required\"\n                // Put the injector on the DOM, so that it can be \"required\"\n                angular.element(element).data(controllerKey(INJECTOR_KEY), _this.injector);\n                // Wire up the ng1 rootScope to run a digest cycle whenever the zone settles\n                // We need to do this in the next tick so that we don't prevent the bootup\n                // stabilizing\n                setTimeout(function () {\n                    var $rootScope = $injector.get('$rootScope');\n                    var subscription = _this.ngZone.onMicrotaskEmpty.subscribe(function () { return $rootScope.$digest(); });\n                    $rootScope.$on('$destroy', function () { subscription.unsubscribe(); });\n                }, 0);\n            }\n        ]);\n        var upgradeModule = angular.module(UPGRADE_MODULE_NAME, [INIT_MODULE_NAME].concat(modules));\n        // Make sure resumeBootstrap() only exists if the current bootstrap is deferred\n        var windowAngular = window['angular'];\n        windowAngular.resumeBootstrap = undefined;\n        // Bootstrap the AngularJS application inside our zone\n        this.ngZone.run(function () { angular.bootstrap(element, [upgradeModule.name], config); });\n        // Patch resumeBootstrap() to run inside the ngZone\n        if (windowAngular.resumeBootstrap) {\n            var originalResumeBootstrap_1 = windowAngular.resumeBootstrap;\n            var ngZone_1 = this.ngZone;\n            windowAngular.resumeBootstrap = function () {\n                var _this = this;\n                var args = arguments;\n                windowAngular.resumeBootstrap = originalResumeBootstrap_1;\n                ngZone_1.run(function () { windowAngular.resumeBootstrap.apply(_this, args); });\n            };\n        }\n    };\n    UpgradeModule.decorators = [\n        { type: NgModule, args: [{ providers: [angular1Providers] },] },\n    ];\n    /** @nocollapse */\n    UpgradeModule.ctorParameters = function () { return [\n        { type: Injector, },\n        { type: NgZone, },\n    ]; };\n    return UpgradeModule;\n}());\nexport { UpgradeModule };\n//# sourceMappingURL=upgrade_module.js.map"],"names":["module","Injector","Testability","TestabilityRegistry","ApplicationRef","SimpleChange","ComponentFactoryResolver","NgZone","Version","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","platformBrowser","angular.module","angular.element","INITIAL_VALUE","looseIdentical","EventEmitter","element","angular\n            .module","angular.bootstrap","NgModule"],"mappings":"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"}