<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>kylo-ui-app</artifactId>

  <parent>
    <artifactId>kylo-ui</artifactId>
    <groupId>com.thinkbiganalytics.kylo</groupId>
    <version>0.10.1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <properties>
    <plugin.license.parentRelative>../../</plugin.license.parentRelative>
  </properties>


  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-commons-rest-model</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-ui-controller</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth-simple</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth-file</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth-ldap</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth-kylo-rest</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth-kylo-groups</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-security-auth-kerberos</artifactId>
      <version>${project.version}</version>
    </dependency>


    <dependency>
      <groupId>com.thinkbiganalytics.kylo</groupId>
      <artifactId>kylo-swagger-ui</artifactId>
      <version>${project.version}</version>
    </dependency>

    <!-- external UI Jars -->
    <!-- Swagger -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
    </dependency>


    <!-- jersey -->

    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-common</artifactId>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
    </dependency>


    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-joda</artifactId>
    </dependency>


    <!-- Spring Boot -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
    </dependency>


    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-moxy</artifactId>
    </dependency>

    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
    </dependency>


    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-zuul</artifactId>
      <exclusions>
        <exclusion>
          <groupId>com.sun.jersey</groupId>
          <artifactId>jersey-client</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.cloud</groupId>
          <artifactId>spring-cloud-starter-archaius</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

  </dependencies>

  <build>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>static/**/*</exclude>
        </excludes>
      </resource>
    </resources>

    <plugins>

      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>${maven.clean.plugin.version}</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>target</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>node</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>node_modules</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
            <fileset>
              <directory>lib</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>

    <!-- create single distribution file -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/descriptor.xml</descriptor>
          </descriptors>
	  <tarLongFileMode>posix</tarLongFileMode>
        </configuration>
        <executions>
          <execution>
            <id>make-distribution</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <npmVersion>${npm.version}</npmVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm build lib</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>run build:lib</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm link</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>link</arguments>
              <installDirectory>${project.basedir}</installDirectory>
              <workingDirectory>${project.build.directory}/classes/static/lib</workingDirectory>
            </configuration>
          </execution>
          <execution>
            <id>npm build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <roots>
            <root>src/main/java</root>
            <root>src/test</root>
          </roots>
          <excludes>
            <exclude>*.js</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
            <configuration>
              <roots>
                <root>src/main/java</root>
                <root>src/test/java</root>
              </roots>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.searls</groupId>
        <artifactId>jasmine-maven-plugin</artifactId>
        <configuration>
          <additionalContexts>
            <context>
              <contextRoot>assets</contextRoot>
              <directory>${project.basedir}/src/main/resources/static/assets</directory>
            </context>
            <context>
              <contextRoot>bower_components</contextRoot>
              <directory>${project.basedir}/src/main/resources/static/bower_components</directory>
            </context>
            <context>
              <contextRoot>js</contextRoot>
              <directory>${project.basedir}/src/main/resources/static/js</directory>
            </context>
          </additionalContexts>
          <customRunnerTemplate>${project.basedir}/src/test/javascript/index.html</customRunnerTemplate>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
