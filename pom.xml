<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.thinkbiganalytics.kylo</groupId>
  <artifactId>kylo</artifactId>
  <version>0.10.1-SNAPSHOT</version>
  <packaging>pom</packaging>
  <name>kylo</name>
  <description>Kylo is an enterprise-ready, open source, data lake management software platform for Hadoop and Spark integrating
    best practices around metadata management, governance, and security learned from over Think Big's 150+ successful
    big data projects.
  </description>
  <inceptionYear>2017</inceptionYear>
  <url>https://kylo.io</url>
  <organization>
    <name>ThinkBig Analytics, a Teradata Company</name>
    <url>https://www.thinkbiganalytics.com</url>
  </organization>
  <developers>
    <developer>
      <name>Matt Hutton</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Director</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Scott Reisdorf</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Team Lead</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Sean Felten</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Tim Harsch</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Greg Hart</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Jeremy Merrifield</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Jagrut Sharma</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>America/Los_Angeles</timezone>
    </developer>
    <developer>
      <name>Ruslans Uralovs</name>
      <organization>ThinkBig Analytics, a Teradata Company</organization>
      <organizationUrl>https://www.thinkbiganalytics.com</organizationUrl>
      <roles>
        <role>Developer</role>
      </roles>
      <timezone>Europe/Dublin</timezone>
    </developer>
  </developers>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <spark.java.version>1.7</spark.java.version>
    <maven.compiler.source>1.8</maven.compiler.source>
    <skipITs>${skipTests}</skipITs>
    <skipUTs>${skipTests}</skipUTs>
    <skipDebian>false</skipDebian>
    <!-- child poms should provide a value to tell where the parent is, using plugin.license.parentRelative property.
         to explicitly override the plugin config data use plugin.license.configDir. -->
    <plugin.license.parentRelative/>
    <plugin.license.configDir>${project.baseUri}${plugin.license.parentRelative}license-config</plugin.license.configDir>

    <!-- dependencies -->
    <automatic-release-repo-promotion>false</automatic-release-repo-promotion>
    <activemq.version>5.15.6</activemq.version>
    <avro.version>1.7.7</avro.version>
    <jersey.version>2.22.2</jersey.version>
    <jackson.version>2.9.6</jackson.version>
    <jackson.databind.version>2.8.11</jackson.databind.version>
    <jackson.scala.version>2.9.5</jackson.scala.version>
    <rxjava.version>2.2.0</rxjava.version>
    <hibernate.version>5.2.17.Final</hibernate.version>
    <hibernate.jpa.version>1.0.0.Final</hibernate.jpa.version>
    <testng.version>6.9.10</testng.version>
    <slf4j.version>1.7.12</slf4j.version>
    <slf4j.log4j12.version>1.7.10</slf4j.log4j12.version>
    <io.swagger.version>1.5.9</io.swagger.version>
    <commons-beanutils.version>1.9.2</commons-beanutils.version>
    <commons-propertyutils.version>1.9.2</commons-propertyutils.version>
    <commons.dbcp>1.4</commons.dbcp>
    <commons.dbcp2>2.1.1</commons.dbcp2>
    <commons-exec.version>1.3</commons-exec.version>
    <commons.lang3.version>3.7</commons.lang3.version>
    <commons.pool2>2.4.2</commons.pool2>
    <commons.io.version>2.5</commons.io.version>
    <commons.collections>3.2.2</commons.collections>
    <commons.csv>1.4</commons.csv>
    <commons.codec>1.10</commons.codec>
    <elasticsearch.version.two>2.3.0</elasticsearch.version.two>
    <lombok.version>1.16.10</lombok.version>
    <lucene.version.elasticsearch.version.two>5.5.0</lucene.version.elasticsearch.version.two>
    <guava.version>19.0</guava.version>
    <hadoop.version>2.6.2</hadoop.version>
    <hamcrest.version>1.3</hamcrest.version>
    <hive.version>1.1.0</hive.version>
    <hiverunner.version>3.0.0</hiverunner.version>
    <httpclient.version>4.5.13</httpclient.version>
    <javax.mail>1.5.5</javax.mail>
    <javax.servlet.version>3.1.0</javax.servlet.version>
    <jersey.version>2.22.2</jersey.version>
    <joda.time.version>2.9.2</joda.time.version>
    <junit.version>4.12</junit.version>
    <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
    <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>2.10.3</maven-javadoc-plugin.version>
    <maven-source-plugin.version>3.0.0</maven-source-plugin.version>
    <maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>
    <nexus-staging-maven-plugin.version>1.6.3</nexus-staging-maven-plugin.version>
    <mockito.version>1.10.19</mockito.version>
    <!-- The maria db driver version is references in the post-install.sh file. Manually update it there if you change it here.  -->
    <mariadb.version>1.5.7</mariadb.version>
    <nifi.version>1.0.0</nifi.version>
    <nifi.version.override>1.2.0</nifi.version.override>
    <powermock.version>1.6.3</powermock.version>
    <quartz.version>2.2.1</quartz.version>
    <slf4j.version>1.7.12</slf4j.version>
    <scala.version>2.10.7</scala.version>
    <scala.binary.version>2.10</scala.binary.version>
    <spark.version>1.6.1</spark.version>
    <spark.binary.version>1.6</spark.binary.version>
    <spring.version>4.3.20.RELEASE</spring.version>
    <spring.batch.version>3.0.6.RELEASE</spring.batch.version>
    <spring.boot.version>1.5.13.RELEASE</spring.boot.version>
    <spring.jpa.version>1.11.12.RELEASE</spring.jpa.version>
    <spring.security.version>4.2.6.RELEASE</spring.security.version>
    <!--  <spring.security.version>4.1.1.RELEASE</spring.security.version> -->
    <spring.ldap.version>2.1.0.RELEASE</spring.ldap.version>
    <spring.vault.version>1.1.1.RELEASE</spring.vault.version>
    <projectreactor.version>2.0.8.RELEASE</projectreactor.version>
    <reactive-streams.version>1.0.0</reactive-streams.version>
    <jose4j.version>0.5.4</jose4j.version>
    <jetbrains-annotations.version>15.0</jetbrains-annotations.version>
    <assertj.version>3.4.1</assertj.version>
    <org.reflections.version>0.9.9</org.reflections.version>
    <querydsl.version>4.1.4</querydsl.version>
    <findbugs.version>3.0.1</findbugs.version>
    <pig.version>0.15.0</pig.version>
    <gson.version>2.2.4</gson.version>
    <h2.version>1.4.187</h2.version>
    <aws.java.sdk.version>1.7.4</aws.java.sdk.version>
    <amazon.sqs.java.messaging.lib.version>1.0.0</amazon.sqs.java.messaging.lib.version>

    <!-- Plugin Versions -->
    <plugin.license.version>1.16</plugin.license.version>

    <plugin.enforcer.version>1.4.1</plugin.enforcer.version>

    <liquibase.version>3.5.3</liquibase.version>
    <!--<liquibase.version>3.3.5</liquibase.version>-->
    <liquibase-slf4j.version>2.0.0</liquibase-slf4j.version>
    <liquibase-hibernate4.version>3.5</liquibase-hibernate4.version>
    <maven.scala.plugin.version>3.4.4</maven.scala.plugin.version>
    <maven.surefire.plugin.version>2.20</maven.surefire.plugin.version>
    <maven.shade.plugin.version>2.4.3</maven.shade.plugin.version>
    <maven.site.plugin.version>3.6</maven.site.plugin.version>
    <spring-data-commons.version>1.13.12.RELEASE</spring-data-commons.version>
    <modeshape.version>5.4.1.Final</modeshape.version>
    <codehaus.jettison.version>1.3.8</codehaus.jettison.version>
    <clirr.maven.plugin.version>2.8</clirr.maven.plugin.version>
    <frontend.maven.plugin.version>1.6</frontend.maven.plugin.version>
    <maven.clean.plugin.version>3.1.0</maven.clean.plugin.version>
    <node.version>v10.10.0</node.version>
    <npm.version>6.4.1</npm.version>
  </properties>
  <modules>
    <module>commons</module>
    <module>core</module>
    <module>security</module>
    <module>ui</module>
    <module>plugins</module>
    <module>metadata</module>
    <module>services</module>
    <module>integrations</module>
    <module>install</module>
    <module>docs</module>
    <module>samples</module>
    <module>release</module>
  </modules>
  <repositories>
    <repository>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/libs-milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <licenses>
    <license>
      <name>Apache-2.0</name>
      <url>https://opensource.org/licenses/Apache-2.0</url>
      <distribution>repo</distribution>
      <comments>Apache License, Version 2.0</comments>
    </license>
  </licenses>

  <issueManagement>
    <system>Kylo JIRA at atlassian.net</system>
    <url>https://kylo-io.atlassian.net</url>
  </issueManagement>


  <scm>
    <connection>
      scm:git:https://github.com/Teradata/kylo.git
    </connection>
    <developerConnection>
      scm:git:https://github.com/Teradata/kylo.git
    </developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/Teradata/kylo</url>
  </scm>

  <dependencyManagement>
    <dependencies>
      <!-- Import the ModeShape BOM for embedded usage. This adds to
          the "dependenciesManagement" section defaults for all of the modules we might
          need, but we still have to include in the "dependencies" section the modules
          we DO need. The benefit is that we don't have to specify the versions of
          any of those modules. -->
      <dependency>
        <groupId>org.modeshape.bom</groupId>
        <artifactId>modeshape-bom-embedded</artifactId>
        <version>${modeshape.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>Edgware.SR3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jettison</groupId>
        <artifactId>jettison</artifactId>
        <version>${codehaus.jettison.version}</version>
      </dependency>

      <dependency>
        <groupId>com.beust</groupId>
        <artifactId>jcommander</artifactId>
        <version>1.48</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${httpclient.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mariadb.jdbc</groupId>
        <artifactId>mariadb-java-client</artifactId>
        <version>${mariadb.version}</version>
      </dependency>

      <!-- https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxjava -->
      <dependency>
        <groupId>io.reactivex.rxjava2</groupId>
        <artifactId>rxjava</artifactId>
        <version>${rxjava.version}</version>
      </dependency>

      <!-- Jersey -->
      <dependency>
        <groupId>org.glassfish.jersey</groupId>
        <artifactId>jersey-bom</artifactId>
        <version>${jersey.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>


      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.containers</groupId>
        <artifactId>jersey-container-servlet</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.core</groupId>
        <artifactId>jersey-client</artifactId>
        <version>${jersey.version}</version>
      </dependency>
      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-moxy</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-bean-validation</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-json-jackson</artifactId>
        <version>${jersey.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
          </exclusion>
        </exclusions>
      </dependency>


      <dependency>
        <groupId>org.glassfish.jersey.media</groupId>
        <artifactId>jersey-media-multipart</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jersey.connectors</groupId>
        <artifactId>jersey-apache-connector</artifactId>
        <version>${jersey.version}</version>
      </dependency>

      <!-- Jackson -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-jsr310</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-xml</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>


      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-json-provider</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-joda</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-hibernate5</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.jaxrs</groupId>
        <artifactId>jackson-jaxrs-base</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- Swagger -->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-jersey2-jaxrs</artifactId>
        <version>${io.swagger.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${io.swagger.version}</version>
      </dependency>

      <!-- Spring boot -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-security</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-jdbc</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-autoconfigure</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>jackson-core</artifactId>
            <groupId>com.fasterxml.jackson.core</groupId>
          </exclusion>
          <exclusion>
            <artifactId>jackson-databind</artifactId>
            <groupId>com.fasterxml.jackson.core</groupId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
          </exclusion>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-jersey</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <artifactId>jackson-databind</artifactId>
            <groupId>com.fasterxml.jackson.core</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-jpa</artifactId>
        <version>${spring.boot.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-configuration-processor</artifactId>
        <version>${spring.boot.version}</version>
        <optional>true</optional>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-commons</artifactId>
        <version>${spring-data-commons.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-jpa</artifactId>
        <version>${spring.jpa.version}</version>
      </dependency>


      <dependency>
        <artifactId>kylo-rest-client</artifactId>
        <groupId>com.thinkbiganalytics.kylo</groupId>
        <version>${project.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
          </exclusion>
          <exclusion>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-joda</artifactId>
          </exclusion>
        </exclusions>
      </dependency>


      <!-- Spring -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
        <exclusions>
          <exclusion>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-web</artifactId>
        <version>${spring.security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-test</artifactId>
        <version>${spring.security.version}</version>
      </dependency>

      <!-- JMS + Spring -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-broker</artifactId>
        <version>${activemq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-client</artifactId>
        <version>${activemq.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.activemq</groupId>
        <artifactId>activemq-pool</artifactId>
        <version>${activemq.version}</version>
      </dependency>


      <!-- Jersey + Spring -->
      <dependency>
        <groupId>org.glassfish.jersey.ext</groupId>
        <artifactId>jersey-spring3</artifactId>
        <version>${jersey.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
          </exclusion>
        </exclusions>
      </dependency>


      <!-- Spring batch -->
      <dependency>
        <groupId>org.springframework.batch</groupId>
        <artifactId>spring-batch-core</artifactId>
        <version>${spring.batch.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.vault</groupId>
        <artifactId>spring-vault-core</artifactId>
        <version>${spring.vault.version}</version>
      </dependency>

      <!-- Apache Commons -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons.io.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-propertyutils</groupId>
        <artifactId>commons-propertyutils</artifactId>
        <version>${commons-propertyutils.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-dbcp2</artifactId>
        <version>${commons.dbcp2}</version>
      </dependency>
      <dependency>
        <groupId>commons-dbcp</groupId>
        <artifactId>commons-dbcp</artifactId>
        <version>${commons.dbcp}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-pool2</artifactId>
        <version>${commons.pool2}</version>
      </dependency>

      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons.collections}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-csv</artifactId>
        <version>${commons.csv}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-exec</artifactId>
        <version>${commons-exec.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons.codec}</version>
      </dependency>

      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda.time.version}</version>
      </dependency>
      <!-- Quartz -->
      <!-- Quartz framework -->
      <dependency>
        <groupId>org.quartz-core</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
      </dependency>
      <dependency>
        <groupId>org.quartz-scheduler</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
      </dependency>


      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>

      <!-- NiFi dependencies -->
      <dependency>
        <groupId>org.apache.nifi</groupId>
        <artifactId>nifi-api</artifactId>
        <version>${nifi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.nifi</groupId>
        <artifactId>nifi-client-dto</artifactId>
        <version>${nifi.version}</version>
      </dependency>

      <!-- FindBugs -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>${findbugs.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${findbugs.version}</version>
        <scope>provided</scope>
      </dependency>

      <!-- Testing -->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-mockito-release-full</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-all</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.specs</groupId>
        <artifactId>specs</artifactId>
        <version>1.2.5</version>
        <scope>test</scope>
      </dependency>

      <!-- Scala -->
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-compiler</artifactId>
        <version>${scala.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-reflect</artifactId>
        <version>${scala.version}</version>
      </dependency>

      <!-- Spark -->
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-core_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-hive_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-launcher_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-mllib_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-repl_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>

      <!-- Logging -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-ext</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.log4j12.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- reflections io -->

      <dependency>
        <groupId>org.reflections</groupId>
        <artifactId>reflections</artifactId>
        <version>${org.reflections.version}</version>
      </dependency>


      <dependency>
        <groupId>com.sun.mail</groupId>
        <artifactId>javax.mail</artifactId>
        <version>${javax.mail}</version>
      </dependency>

      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>javax.mail-api</artifactId>
        <version>${javax.mail}</version>
      </dependency>

      <dependency>
        <groupId>com.querydsl</groupId>
        <artifactId>querydsl-apt</artifactId>
        <version>${querydsl.version}</version>
      </dependency>
      <dependency>
        <groupId>com.querydsl</groupId>
        <artifactId>querydsl-sql</artifactId>
        <version>${querydsl.version}</version>
      </dependency>

      <dependency>
        <groupId>com.querydsl</groupId>
        <artifactId>querydsl-jpa</artifactId>
        <version>${querydsl.version}</version>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
      </dependency>

      <dependency>
        <groupId>org.bitbucket.b_c</groupId>
        <artifactId>jose4j</artifactId>
        <version>${jose4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-common</artifactId>
        <version>${hadoop.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>${jetbrains-annotations.version}</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>org.reactivestreams</groupId>
        <artifactId>reactive-streams</artifactId>
        <version>${reactive-streams.version}</version>
      </dependency>

      <dependency>
        <groupId>io.projectreactor</groupId>
        <artifactId>reactor-core</artifactId>
        <version>${projectreactor.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>


  <dependencies>
    <dependency>
      <groupId>javax.inject</groupId>
      <artifactId>javax.inject</artifactId>
      <version>1</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
  </dependencies>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${plugin.enforcer.version}</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.3.9</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>random</runOrder>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <licenseName>thinkbig_license</licenseName>
          <licenseResolver>${plugin.license.configDir}</licenseResolver>
          <failOnMissingHeader>true</failOnMissingHeader>
          <failOnNotUptodateHeader>true</failOnNotUptodateHeader>
          <extraExtensions>
            <sql>mysql</sql>
          </extraExtensions>
          <excludes>
            <exclude>**/META-INF/**/*</exclude>
            <exclude>**/vendor/**/*</exclude>
            <exclude>**/*.json</exclude>
          </excludes>
          <excludedScopes>provided,system,test</excludedScopes>
          <includedLicenses>
            <includedLicense>Apache License, Version 2.0</includedLicense>
            <includedLicense>BSD License</includedLicense>
            <includedLicense>Common Development and Distribution License Version 1.1</includedLicense>
            <includedLicense>Creative Commons CC0 1.0 Universal</includedLicense>
            <includedLicense>Day Specification License</includedLicense>
            <includedLicense>Eclipse Public License - v 1.0</includedLicense>
            <includedLicense>GNU Lesser General Public License, Version 2.1</includedLicense>
            <includedLicense>MIT License</includedLicense>
            <includedLicense>Mozilla Public License Version 1.1</includedLicense>
            <includedLicense>Public Domain</includedLicense>
            <includedLicense>WTFPL</includedLicense>
          </includedLicenses>
          <!-- @formatter:off -->
          <licenseMerges>
            <licenseMerge>Apache License, Version 2.0|Apache 2|Apache 2.0|Apache 2.0 License|Apache v2|Apache License|Apache License 2.0|Apache License, version 2.0|Apache Software License 2.0|Apache Software License - Version 2.0|Apache Software License - Version 2.0, Eclipse Public License - Version 1.0|Apache Software Licenses|The Apache License, Version 2.0|The Apache Software License, Version 2.0</licenseMerge>
            <licenseMerge>BSD License|BSD|BSD licence|Eclipse Distribution License (New BSD License)|New BSD license|The BSD 3-Clause License|The BSD License|The New BSD License</licenseMerge>
            <licenseMerge>Common Development and Distribution License Version 1.1|CDDL + GPLv2 with classpath exception|CDDL 1.1|CDDL+GPL License|CDDL/GPLv2+CE|Common Development and Distribution License|Common Development and Distribution License (CDDL) v1.0|COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0|Dual license consisting of the CDDL v1.1 and GPL v2|GNU General Public License, Version 2 with the Classpath Exception|GPL2 w/ CPE</licenseMerge>
            <licenseMerge>Creative Commons CC0 1.0 Universal|CC0|CC0 1.0 Universal|Public Domain, per Creative Commons CC0</licenseMerge>
            <licenseMerge>Eclipse Public License - v 1.0|Eclipse Public License v1.0|Eclipse Public License (EPL), Version 1.0|Eclipse Public License - Version 1.0</licenseMerge>
            <licenseMerge>GNU Lesser General Public License, Version 2.1|GNU LESSER GENERAL PUBLIC LICENSE|GNU Lesser General Public License|GNU General Lesser Public License (LGPL) version 2.1|lgpl|LGPL 2.1|LGPL-2.1|LGPL, version 2.1</licenseMerge>
            <licenseMerge>MIT License|Bouncy Castle Licence|MIT license</licenseMerge>
            <licenseMerge>Mozilla Public License Version 1.1|MPL 1.1</licenseMerge>
          </licenseMerges>
          <!-- @formatter:on -->
        </configuration>
        <executions>
          <execution>
            <id>first</id>
            <goals>
              <goal>check-file-header</goal>
            </goals>
            <!-- here to cause package phase or higher to fail build when headers are not up to date  -->
            <phase>prepare-package</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>net.alchim31.maven</groupId>
          <artifactId>scala-maven-plugin</artifactId>
          <version>${maven.scala.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven.shade.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>${maven.surefire.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven.site.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${plugin.license.version}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <groupId>com.github.searls</groupId>
          <artifactId>jasmine-maven-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>clirr-maven-plugin</artifactId>
          <version>${clirr.maven.plugin.version}</version>
        </plugin>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend.maven.plugin.version}</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven.clean.plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>


  <profiles>
    <profile>
      <!--* Run Integration Tests (*IT.java) by selecting `integration-tests` Maven profile-->
      <!--* Integration Tests are not run if profile is not selected-->
      <!--mvn clean -Pintegration-tests -DskipUTs=true verify-->

      <id>integration-tests</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>2.19.1</version>
            <configuration>
              <skipTests>${skipUTs}</skipTests>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>2.19.1</version>
            <executions>
              <execution>
                <id>run-integration-tests</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <skipTests>${skipTests}</skipTests>
              <skipITs>${skipITs}</skipITs>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>maven-repo-promotion</id>
      <activation>
        <property>
          <name>maven-repo-promotion</name>
          <value>true</value>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <!-- Customize JAR manifest settings -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${maven-jar-plugin.version}</version>
            <configuration>
              <archive>
                <manifest>
                  <!-- Write Implementation-* entries to manifest -->
                  <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                  <!-- Write Specification-* entries to manifest -->
                  <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                </manifest>
              </archive>
            </configuration>
          </plugin>


          <plugin>
            <!-- Build Source JAR -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven-source-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!-- Build JavaDoc JAR -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
                <configuration> <!-- add this to disable checking -->
                  <additionalparam>-Xdoclint:none</additionalparam>
                </configuration>
              </execution>
            </executions>
          </plugin>


          <plugin>
            <!--
            Sign all the artifacts with GPG.
            Important: GPG key must be present on the system, otherwise fails.
            -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>${maven-gpg-plugin.version}</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>${nexus-staging-maven-plugin.version}</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <autoReleaseAfterClose>${automatic-release-repo-promotion}</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>

      <distributionManagement>
        <snapshotRepository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
      <reporting>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven-javadoc-plugin.version}</version>
          </plugin>
        </plugins>
      </reporting>
    </profile>
    <profile>
      <id>nifi.version.override</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <nifi.version>${nifi.version.override}</nifi.version>
      </properties>
    </profile>
    <profile>
      <id>nifi.version.1.4.0</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <nifi.version>1.4.0</nifi.version>
      </properties>
    </profile>
    <profile>
      <id>nifi.version.1.5.0</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <nifi.version>1.5.0</nifi.version>
      </properties>
    </profile>
    <profile>
      <id>nifi.version.1.6.0</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <properties>
        <nifi.version>1.6.0</nifi.version>
      </properties>
    </profile>

    <profile>
      <!-- This profile will add the MapR repository for resolving
          MapR Hadoop artifacts for the Hadoop bundles -->
      <id>mapr</id>
      <repositories>
        <repository>
          <id>mapr-releases</id>
          <name>MapR Repository</name>
          <url>http://repository.mapr.com/maven/</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
      </repositories>
      <properties>
        <!-- Vendor-specific version number included here as default,
            should be overridden on the command-line <hadoop.version>2.7.0-mapr-1602</hadoop.version> -->
      </properties>
    </profile>
  </profiles>

</project>
