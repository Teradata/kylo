[
  {
    "title": "Hive",
    "pluginId": "hive",
    "format": "hive",
    "tabs": [
      {
        "label": "Connection",
        "sref": ".connection"
      }
    ],
    "nifiProperties": [
      {
        "processorTypes": ["com.thinkbiganalytics.nifi.v2.thrift.ExecuteHQL"],
        "properties": {
          "SQL select query": "SELECT * FROM {{ paths[0] }}"
        }
      },
      {
        "processorTypes": ["org.apache.nifi.processors.hive.SelectHiveQL"],
        "properties": {
          "HiveQL Select Query": "SELECT * FROM {{ paths[0] }}"
        }
      }
    ]
  },
  {
    "title": "File Upload",
    "pluginId": "file-upload",
    "icon": "file_upload",
    "tabs": [
      {
        "label": "Files",
        "sref": ".upload"
      }
    ],
    "options": [
      {
        "key": "path",
        "label": "Path",
        "hint": "Supply a location to upload to. For example 'file:/var/upload', 'hdfs://master:8020/var/upload', or 's3a://kylo-upload/'",
        "validators": [
          {
            "type": "url"
          }
        ]
      }
    ],
    "nifiProperties": [
      {
        "processorTypes": ["org.apache.nifi.processors.standard.FetchFile"],
        "properties": {
          "File to Fetch": "{{ paths[0].substring(5) }}"
        }
      },
      {
        "processorTypes": ["org.apache.nifi.processors.standard.GetFile"],
        "properties": {
          "Input Directory": "{{ paths[0].substring(5, paths[0].lastIndexOf('/')) }}",
          "File Filter": "[^\\.].*"
        }
      }
    ]
  },
  {
    "title": "HDFS",
    "pluginId": "hdfs",
    "icon": "hadoop",
    "tabs": [
      {
        "label": "Files",
        "sref": ".browse"
      }
    ],
    "options": [
      {
        "key": "path",
        "label": "Path",
        "hint":"The HDFS path to access.  For example 'hdfs://localhost:8020/app/warehouse' ",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "hdfs:"
            }
          }
        ]
      }
    ],
    "nifiProperties": [
      {
        "processorTypes": ["org.apache.nifi.processors.hadoop.FetchHDFS", "org.apache.nifi.processors.hadoop.ListHDFS"],
        "properties": {
          "HDFS Filename": "{{ paths[0] }}"
        }
      },
      {
        "processorTypes": ["org.apache.nifi.processors.hadoop.GetHDFS"],
        "properties": {
          "Directory": "{{ paths[0].substring(0, paths[0].lastIndexOf('/')) }}"
        }
      }
    ]
  },
  {
    "title": "JDBC",
    "pluginId": "jdbc",
    "format": "jdbc",
    "tabs": [
      {
        "label": "Connection",
        "sref": ".connection"
      }
    ],
    "options": [
      {
        "key": "url",
        "label": "Connection URL",
        "hint":"A database connection URL used to connect to a database. May contain database system name, host, port, database name and some parameters. For example 'jdbc:mysql://localhost:3306/kylo' ",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "jdbc:"
            }
          }
        ]
      },
      {
        "key": "driver",
        "label": "Driver Class Name",
        "hint":"Database driver class name.  For example 'org.mariadb.jdbc.Driver' "
      },
      {
        "key": "jars",
        "label": "Driver Location(s)",
        "hint":"Comma-separated list of paths containing the driver JAR and dependencies. Path must be accessible to Kylo, Nifi, and Spark. For example: 'file:///var/shared/mariadb-java-client-1.1.7.jar,s3a:///mybucket/db.jar'",
        "required": false,
        "validators": [
          {
            "type": "jars"
          }
        ]
      },
      {
        "key": "user",
        "label": "User",
        "hint":"Database user name"
      },
      {
        "key": "password",
        "type": "password",
        "label": "Password",
        "sensitive": true,
        "hint":"The password for the database user"
      }
    ],
    "nifiControllerService": {
      "type": "org.apache.nifi.dbcp.DBCPConnectionPool",
      "properties": {
        "Database Connection URL": "${url}",
        "Database Driver Class Name": "${driver}",
        "database-driver-locations": "${jars}",
        "Database User": "${user}",
        "Password": "${password}"
      },
      "identityProperties": ["Database Connection URL","Database User"]
    },
    "nifiProperties": [
      {
        "processorTypes": ["com.thinkbiganalytics.nifi.GetTableData", "com.thinkbiganalytics.nifi.v2.ingest.GetTableData"],
        "properties": {
          "Source Database Connection": "{{ dataSource.nifiControllerServiceId }}",
          "Source Table": "{{ options.dbname }}"
        }
      },
      {
        "processorTypes": ["com.thinkbiganalytics.nifi.v2.sqoop.core.ImportSqoop"],
        "properties": {
          "Source Connection Service": "{{ dataSource.nifiControllerServiceId }}",
          "Source Table": "{{ options.dbname }}"
        }
      }
    ]
  },
  {
    "title": "JDBC - Sqoop",
    "pluginId": "jdbc-sqoop",
    "format": "jdbc",
    "tabs": [
      {
        "label": "Connection",
        "sref": ".connection"
      }
    ],
    "options": [
      {
        "key": "url",
        "label": "Connection URL",
        "hint":"A database connection URL used to connect to a database. May contain database system name, host, port, database name and some parameters. For example 'jdbc:mysql://localhost:3306/kylo' ",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "jdbc:"
            }
          }
        ]
      },
      {
        "key": "driver",
        "label": "Driver Class Name",
        "hint":"Database driver class name.  For example 'org.mariadb.jdbc.Driver'.  This is required for Kylo to make the catalog connection. It will not be used when Sqoop is invoked."
      },
      {
        "key": "jars",
        "label": "Driver Location(s)",
        "hint":"Comma-separated list of paths containing the driver JAR and dependencies. Path must be accessible to Kylo, Nifi, and Spark. For example: 'file:///var/shared/mariadb-java-client-1.1.7.jar,s3a:///mybucket/db.jar'.  This is required for Kylo to make the catalog connection. It will not be used when Sqoop is invoked.",
        "required": false,
        "validators": [
          {
            "type": "jars"
          }
        ]
      },
      {
        "key": "user",
        "label": "User",
        "hint":"Database user name"
      },
      {
        "key": "password",
        "type": "password",
        "label": "Password",
        "sensitive": true,
        "required": false,
        "hint":"The password for the database user either blank, if using password file, encrypted base64 or clear text, depending upon the 'password mode' setting "
      },
      {
        "key": "passwordMode",
        "label": "Password Mode",
        "type":"select",
        "selections": [{"label": "Encrypted on HDFS","value": "ENCRYPTED_ON_HDFS_FILE"},
          {"label": "Clear Text", "value": "CLEAR_TEXT_ENTRY"},
          {"label": "Encrypted text entry","value": "ENCRYPTED_TEXT_ENTRY"}
          ]
        ,"hint":"The type of password and how its provided"
      },
      {
        "key": "sourcePasswordFile",
        "label": "Source Password File",
        "hint":"HDFS location containing the encrypted password",
        "required": false
      },
      {
        "key": "sourcePasswordPassphrase",
        "label": "Source Password Passphrase",
        "sensitive": true,
        "hint":"decryption key",
        "required": false
      }
    ],
    "nifiControllerService": {
      "type": "com.thinkbiganalytics.nifi.v2.sqoop.StandardSqoopConnectionService",
      "properties": {
        "Source Connection String": "${url}",
        "Source User Name": "${user}",
        "Password Mode": "${passwordMode}",
        "Source Password File": "${sourcePasswordFile}",
        "Source Password Passphrase": "${sourcePasswordPassphrase}",
        "Source Password (Encrypted Base64/Clear Text)": "${password}"
      },
      "identityProperties": ["Source Connection String", "Source User Name"]
    },
    "nifiProperties": [
      {
        "processorTypes": ["com.thinkbiganalytics.nifi.GetTableData", "com.thinkbiganalytics.nifi.v2.ingest.GetTableData"],
        "properties": {
          "Source Database Connection": "{{ dataSource.nifiControllerServiceId }}",
          "Source Table": "{{ options.dbname }}"
        }
      },
      {
        "processorTypes": ["com.thinkbiganalytics.nifi.v2.sqoop.core.ImportSqoop"],
        "properties": {
          "Source Connection Service": "{{ dataSource.nifiControllerServiceId }}",
          "Source Table": "{{ options.dbname }}"
        }
      }
    ]
  },
  {
    "title": "Local File System",
    "pluginId": "local-file-system",
    "icon": "fas:folder",
    "tabs": [
      {
        "label": "File",
        "sref": ".browse"
      }
    ],
    "options": [
      {
        "key": "path",
        "label": "Path",
        "hint":" Path to a directory on the box where kylo is running starting with the prefix 'file:/'.  For example: 'file:/opt/kylo/setup/data/sample-data'",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "file:"
            }
          }
        ]
      }
    ],
    "nifiProperties": [
      {
        "processorTypes": ["org.apache.nifi.processors.standard.FetchFile"],
        "properties": {
          "File to Fetch": "{{ paths[0].substring(5) }}"
        }
      },
      {
        "processorTypes": ["org.apache.nifi.processors.standard.GetFile"],
        "properties": {
          "Input Directory": "{{ paths[0].substring(5, paths[0].lastIndexOf('/')) }}",
          "File Filter": "{{ paths[0].substring(paths[0].lastIndexOf('/') + 1) }}"
        }
      }
    ]
  },
  {
    "title": "Amazon S3",
    "pluginId": "amazon-s3",
    "icon": "amazon",
    "tabs": [
      {
        "label": "Files",
        "sref": ".browse"
      }
    ],
    "options": [
      {
        "key": "path",
        "label": "Path",
        "hint":" Path to a s3 bucket starting with the prefix 's3a:'.  For example: 's3a:///my-bucket'.  To browse all buckets use, 's3a:/'",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "s3a:"
            }
          }
        ]
      },
      {
        "key": "spark.hadoop.fs.s3a.access.key",
        "label": "Access Key Id"
      },
      {
        "key": "spark.hadoop.fs.s3a.secret.key",
        "type": "password",
        "label": "Secret Access Key",
        "sensitive": true
      }
    ],
    "nifiControllerService": {
      "type": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderControllerService",
      "properties": {
        "Access Key": "${spark.hadoop.fs.s3a.access.key}",
        "Secret Key": "${spark.hadoop.fs.s3a.secret.key}"
      },
      "identityProperties": ["Access Key"]
    },
    "nifiProperties": [
      {
        "processorTypes": ["org.apache.nifi.processors.aws.s3.FetchS3Object"],
        "properties": {
          "Bucket": "{{ paths[0].substring(6, paths[0].substring(6).indexOf('/') + 6) }}",
          "Object Key": "{{ paths[0].substring(paths[0].substring(6).indexOf('/') + 6) }}"
        }
      },
      {
        "processorTypes": ["org.apache.nifi.processors.aws.s3.ListS3"],
        "properties": {
          "Bucket": "{{ paths[0].substring(6, paths[0].substring(6).indexOf('/') + 6) }}",
          "Prefix": "{{ paths[0].substring(paths[0].substring(6).indexOf('/') + 6) }}"
        }
      }
    ]
  },
  {
    "title": "Azure Data Lake",
    "pluginId": "azure-data-lake",
    "icon": "windows",
    "tabs": [
      {
        "label": "Files",
        "sref": ".browse"
      }
    ],
    "options": [
      {
        "key": "path",
        "label": "Path",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "adl:"
            }
          }
        ]
      }
    ],
    "nifiProperties": [
      {
        "processorTypes": ["org.apache.nifi.processors.hadoop.FetchHDFS", "org.apache.nifi.processors.hadoop.ListHDFS"],
        "properties": {
          "HDFS Filename": "{{ paths[0] }}"
        }
      },
      {
        "processorTypes": ["org.apache.nifi.processors.hadoop.GetHDFS"],
        "properties": {
          "Directory": "{{ paths[0].substring(0, paths[0].lastIndexOf('/')) }}"
        }
      }
    ]
  },
  {
    "title": "Azure Storage",
    "pluginId": "azure-storage",
    "icon": "windows",
    "optionsMapperId": "azureOptionsMapper",
    "tabs": [
      {
        "label": "Files",
        "sref": ".browse"
      }
    ],
    "options": [
      {
        "key": "path",
        "label": "Path",
        "validators": [
          {
            "type": "url",
            "params": {
              "protocol": "wasbs:"
            }
          }
        ]
      },
      {
        "key": "account-name",
        "label": "Account Name"
      },
      {
        "key": "account-key",
        "type": "password",
        "label": "Account Key",
        "sensitive": true
      }
    ],
    "nifiProperties": [
      {
        "processorTypes": ["Fetch"],
        "properties": {
          "Storage Account Name": "{{ options['account-name'] }}",
          "Storage Account Key": "{{ options['account-key'] }}",
          "Container Name": "{{ paths[0].substring(7, paths[0].substring(7).indexOf('/') + 7) }}",
          "Blob": "{{ paths[0].substring(paths[0].substring(7).indexOf('/') + 7) }}"
        }
      },
      {
        "processorTypes": ["List"],
        "properties": {
          "Storage Account Name": "{{ options['account-name'] }}",
          "Storage Account Key": "{{ options['account-key'] }}",
          "Container Name": "{{ paths[0].substring(7, paths[0].substring(7).indexOf('/') + 7) }}",
          "Prefix": "{{ paths[0].substring(paths[0].substring(7).indexOf('/') + 7) }}"
        }
      }
    ]
  }
]
