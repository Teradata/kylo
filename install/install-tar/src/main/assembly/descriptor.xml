<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  install
  %%
  Copyright (C) 2017 ThinkBig Analytics
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.0.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
>
  <id>dependencies</id>
  <formats>
    <format>tar.gz</format>
  </formats>
  <includeBaseDirectory>false</includeBaseDirectory>
  <baseDirectory>${project.parent.parent.basedir}</baseDirectory>
  <dependencySets>
    <dependencySet>
      <outputDirectory>setup/nifi/activemq</outputDirectory>
      <includes>
        <include>org.apache.activemq:activemq-client:jar:${activemq.version}</include>
        <include>org.apache.geronimo.specs:geronimo-j2ee-management_1.1_spec:jar:1.0.1</include>
        <include>org.fusesource.hawtbuf:hawtbuf:jar:1.11</include>
      </includes>
    </dependencySet>
    <!--dependencySet>
      <outputDirectory>kylo-services-lib</outputDirectory>
      <includes>
        <include>com.thinkbiganalytics.datalake:kylo-jira-rest-client</include>
      </includes>
    </dependencySet-->
  </dependencySets>
  <fileSets>
    <!-- Create UI folders. Most of the UI files are in the file section since they were individual files -->
    <fileSet>
      <outputDirectory>/kylo-ui/bin</outputDirectory>
      <!-- This doesn't matter. Just have to specify a folder even though we aren't copying from it -->
      <directory>.</directory>
      <excludes>
        <exclude>**/*</exclude>
      </excludes>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <outputDirectory>/kylo-ui/plugin</outputDirectory>
      <!-- This doesn't matter. Just have to specify a folder even though we aren't copying from it -->
      <directory>.</directory>
      <excludes>
        <exclude>**/*</exclude>
      </excludes>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <outputDirectory>kylo-ui/lib</outputDirectory>
      <directory>${project.parent.parent.basedir}/ui/ui-app/target/kylo-ui-app-${project.version}-distribution/kylo-ui-app-${project.version}/lib</directory>
      <fileMode>755</fileMode>
    </fileSet>


    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/ui-sqoop-table-data-processor-template/target</directory>
      <outputDirectory>kylo-ui/plugin</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-ui-sqoop-table-data-processor-template-${project.version}.jar</include>
      </includes>
    </fileSet>



    <!-- kylo services files -->
    <fileSet>
      <outputDirectory>/kylo-services/bin</outputDirectory>
      <!-- This doesn't matter. Just have to specify a folder even though we aren't copying from it -->
      <directory>.</directory>
      <excludes>
        <exclude>**/*</exclude>
      </excludes>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/services/service-app/src/main/resources</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>application.properties</include>
        <include>application-context.xml</include>
        <include>datasource-definitions.json</include>
        <include>datasource-styles.json</include>
        <include>icons.json</include>
        <include>icon-colors.json</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/services/service-app/target/classes</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>version.txt</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/services/service-app/src/main/config/rpm-build</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>log4j.properties</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/metadata/metadata-modeshape/src/main/resources</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>metadata-repository.json</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/services/spark-shell-service/spark-shell-core/src/main/resources</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>spark.properties</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/integrations/spark/spark-shell-client/spark-shell-client-app/src/main/config/rpm-build</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>log4j-spark.properties</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/precondition-default/target</directory>
      <outputDirectory>kylo-services/plugin</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-precondition-default-${project.version}.jar</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/schema-discovery-default/target</directory>
      <outputDirectory>kylo-services/plugin</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-schema-discovery-default-${project.version}.jar</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/search-elasticsearch/src/main/resources</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>elasticsearch.properties</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/search-elasticsearch/target</directory>
      <outputDirectory>kylo-services/plugin</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-search-elasticsearch-${project.version}.jar</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/search-solr/src/main/resources</directory>
      <outputDirectory>kylo-services/conf</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>solrsearch.properties</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/search-solr/target</directory>
      <outputDirectory>setup/plugins</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-search-solr-${project.version}.jar</include>
      </includes>
    </fileSet>

    <fileSet>
      <outputDirectory>kylo-services/lib</outputDirectory>
      <directory>${project.parent.parent.basedir}/services/service-app/target/kylo-service-app-${project.version}-distribution/kylo-service-app-${project.version}/lib</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <fileSet>
      <outputDirectory>kylo-services/lib/nifi-v1</outputDirectory>
      <directory>${project.parent.parent.basedir}/integrations/nifi/nifi-rest/nifi-rest-client/nifi-rest-client-v1/target/kylo-nifi-rest-client-v1-${project.version}-distribution/kylo-nifi-rest-client-v1-${project.version}/lib/nifi-v1</directory>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <outputDirectory>kylo-services/lib/nifi-v1.2</outputDirectory>
      <directory>${project.parent.parent.basedir}/integrations/nifi/nifi-rest/nifi-rest-client/nifi-rest-client-v1.2/target/kylo-nifi-rest-client-v1.2-${project.version}-distribution/kylo-nifi-rest-client-v1.2-${project.version}/lib/nifi-v1</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <!-- Setup Folder -->
    <fileSet>
      <directory>${project.parent.basedir}/setup/nifi</directory>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>create-symbolic-links.sh</include>
        <include>install-nifi.sh</include>
        <include>install-kylo-components.sh</include>
        <include>nifi</include>
        <include>nifi.properties</include>
        <include>update-nars-jars.sh</include>
      </includes>
    </fileSet>

    <fileSet>
      <outputDirectory>setup/sql</outputDirectory>
      <!-- This doesn't matter. Just have to specify a folder even though we aren't copying from it -->
      <directory>${project.parent.basedir}/setup/sql</directory>
      <fileMode>755</fileMode>
    </fileSet>
    <fileSet>
      <outputDirectory>setup/data</outputDirectory>
      <!-- This doesn't matter. Just have to specify a folder even though we aren't copying from it -->
      <directory>${project.parent.parent.basedir}/samples</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}/metadata/metadata-modeshape/src/main/resources</directory>
      <outputDirectory>setup/config/kylo-cluster</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>modeshape-local-test-jgroups-config.xml</include>
        <include>modeshape-s3-jgroups-config.xml</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/core/cluster-manager/cluster-manager-core/src/main/resources</directory>
      <outputDirectory>setup/config/kylo-cluster</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-cluster-jgroups-config-example.xml</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/services/scheduler-service/scheduler-quartz/src/main/resources</directory>
      <outputDirectory>setup/config/kylo-cluster</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>quartz-cluster-example.properties</include>
      </includes>
    </fileSet>

    <fileSet>
      <outputDirectory>setup/activemq</outputDirectory>
      <directory>${project.parent.basedir}/setup/activemq</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <fileSet>
      <outputDirectory>setup/elasticsearch</outputDirectory>
      <directory>${project.parent.basedir}/setup/elasticsearch</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <fileSet>
      <outputDirectory>setup/dev</outputDirectory>
      <directory>${project.parent.basedir}/setup/dev</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <fileSet>
      <outputDirectory>setup/java</outputDirectory>
      <directory>${project.parent.basedir}/setup/java</directory>
      <fileMode>755</fileMode>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/service-monitor-ambari/target</directory>
      <outputDirectory>setup/plugins</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-service-monitor-ambari-${project.version}.jar</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.parent.parent.basedir}/plugins/service-monitor-kylo-cluster/target</directory>
      <outputDirectory>setup/plugins</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>kylo-service-monitor-kylo-cluster-${project.version}.jar</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.basedir}/setup</directory>
      <outputDirectory>setup</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>setup-wizard.sh</include>
        <include>generate-offline-install.sh</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.basedir}/setup</directory>
      <outputDirectory>/</outputDirectory>
      <fileMode>755</fileMode>
      <includes>
        <include>start-kylo-apps.sh</include>
        <include>stop-kylo-apps.sh</include>
        <include>status-kylo-apps.sh</include>
        <include>kylo-service</include>
      </includes>
    </fileSet>

    <fileSet>
      <directory>${project.parent.parent.basedir}</directory>
      <outputDirectory>/</outputDirectory>
      <fileMode>644</fileMode>
      <includes>
        <include>LICENSE</include>
      </includes>
    </fileSet>
    <fileSet>
      <directory>${project.basedir}/target/generated-sources/license</directory>
      <outputDirectory>/</outputDirectory>
      <fileMode>644</fileMode>
      <includes>
        <include>THIRD-PARTY.txt</include>
      </includes>
    </fileSet>

  </fileSets>

  <files>
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-hadoop-bundle/nifi-hadoop-processors/target/kylo-nifi-hadoop-processors-${project.version}.jar</source>
      <outputDirectory>lib</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.basedir}/bin/encryptSqoopPassword.sh</source>
      <outputDirectory>bin</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/ui/ui-app/target/kylo-ui-app-${project.version}.jar</source>
      <outputDirectory>kylo-ui/lib</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/ui/ui-app/src/main/resources/application.properties</source>
      <outputDirectory>kylo-ui/conf</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/ui/ui-app/src/main/resources/application-context.xml</source>
      <outputDirectory>kylo-ui/conf</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/ui/ui-app/src/main/config/rpm-build/log4j.properties</source>
      <outputDirectory>kylo-ui/conf</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/services/service-app/target/kylo-service-app-${project.version}.jar</source>
      <outputDirectory>kylo-services/lib</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/spark/spark-shell-client/spark-shell-client-v1/target/kylo-spark-shell-client-v1-${project.version}.jar</source>
      <outputDirectory>kylo-services/lib/app</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/spark/spark-shell-client/spark-shell-client-v2/target/kylo-spark-shell-client-v2-${project.version}.jar</source>
      <outputDirectory>kylo-services/lib/app</outputDirectory>
      <fileMode>755</fileMode>
    </file>

    <!-- setup files -->
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-provenance-repo-bundle/nifi-provenance-repo/src/main/resources/config.properties</source>
      <outputDirectory>setup/nifi</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-core-bundle/nifi-core-v1-nar/target/kylo-nifi-core-v1-nar-${project.version}.nar</source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-elasticsearch-bundle/nifi-elasticsearch-v1-nar/target/kylo-nifi-elasticsearch-v1-nar-${project.version}.nar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-hadoop-bundle/nifi-hadoop-bundle-v1-nar/target/kylo-nifi-hadoop-v1-nar-${project.version}.nar</source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-provenance-repo-bundle/nifi-provenance-repo-v1-nar/target/kylo-nifi-provenance-repo-v1-nar-${project.version}.nar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-provenance-repo-bundle/nifi-provenance-repo-v1.2-nar/target/kylo-nifi-provenance-repo-v1.2-nar-${project.version}.nar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-spark-bundle/nifi-spark-v1-nar/target/kylo-nifi-spark-v1-nar-${project.version}.nar</source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-standard-services/nifi-core-service-bundle/nifi-core-service-nar/target/kylo-nifi-core-service-nar-${project.version}.nar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-standard-services/nifi-hadoop-service-bundle/nifi-hadoop-service-v1-nar/target/kylo-nifi-hadoop-service-v1-nar-${project.version}.nar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/nifi/nifi-nar-bundles/nifi-standard-services/nifi-standard-services-nar/target/kylo-nifi-standard-services-nar-${project.version}.nar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/spark/spark-job-profiler/spark-job-profiler-spark-v1/target/kylo-spark-job-profiler-spark-v1-${project.version}-jar-with-dependencies.jar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project.parent.parent.basedir}/integrations/spark/spark-job-profiler/spark-job-profiler-spark-v2/target/kylo-spark-job-profiler-spark-v2-${project.version}-jar-with-dependencies.jar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/spark/spark-validate-cleanse/spark-validate-cleanse-spark-v1/target/kylo-spark-validate-cleanse-spark-v1-${project.version}-jar-with-dependencies.jar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/spark/spark-validate-cleanse/spark-validate-cleanse-spark-v2/target/kylo-spark-validate-cleanse-spark-v2-${project.version}-jar-with-dependencies.jar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/spark/spark-interpreter/spark-interpreter-spark-v1/target/kylo-spark-interpreter-spark-v1-${project.version}-jar-with-dependencies.jar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>
        ${project.parent.parent.basedir}/integrations/spark/spark-interpreter/spark-interpreter-spark-v2/target/kylo-spark-interpreter-spark-v2-${project.version}-jar-with-dependencies.jar
      </source>
      <outputDirectory>setup/nifi</outputDirectory>
      <fileMode>755</fileMode>
    </file>

    <file>
      <source>${project.parent.basedir}/scripts/post-install.sh</source>
      <outputDirectory>setup/install</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project..parent.basedir}/scripts/post-remove.sh</source>
      <outputDirectory>setup/install</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>
    <file>
      <source>${project..parent.basedir}/scripts/pre-remove.sh</source>
      <outputDirectory>setup/install</outputDirectory>
      <filtered>true</filtered>
      <fileMode>755</fileMode>
    </file>


  </files>
</assembly>
